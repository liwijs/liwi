{"version":3,"sources":["../../src/rethinkdb/Query.js"],"names":["AbstractQuery","RethinkStore","Query","callback","queryCallback","store","query","r","run","then","_includeInitial","args","_feed","promise","changes","includeInitial","includeStates","includeTypes","includeOffsets","length","feed","_promise","each","stop","closeFeed","cancel","cb","errCb","close"],"mappings":";;;;;;;;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,wDAA2B,SACzB,qBAAQ,YAAR,CADyB,EAEzB,mBAAM,YAAN,CAFyB,CAA3B;;IAKqBC,K;;;;;;;;;;uCAA4B,mB,+BAAA,mB;;;;;0BACzCC,Q,EAAmC;AAAA,0BAA3B,WAAG,YAAH,CAA2B;;AAAA,iCAAL,OAAK;;AACvC,kEAAO,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuC,KAAKD,KAAL,CAAWE,CAAlD,EAAqDC,GAArD,GAA2DC,IAA3D,CAAgEN,QAAhE,CAAP;AAAA;AAAA;AACD;;;+BAEUA,Q,EAAoF;AAAA;;AAAA,UAAhEO,eAAgE;;AAAA,UAAvCC,IAAuC;;AAAA,2BAA5E,YAA4E;;AAAA,sBAAnC,QAAQ,OAAR,CAAmC;;AAAA,kCAApB,mBAAoB;;AAAA;;AAC7F,UAAIC,cAAJ;AACA,UAAIC,UAAU,KAAKT,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuC,KAAKD,KAAL,CAAWE,CAAlD,EACXO,OADW,CACH;AACPC,wBAAgBL,eADT;AAEPM,uBAAe,IAFR;AAGPC,sBAAc,IAHP;AAIPC,wBAAgB;AAJT,OADG,EAOXT,IAPW,CAON,gBAAQ;AAOZ,eANIE,KAAKQ,MAAL,KAAgB,CAMpB,KALEP,QAAQQ,IAKV,EAJE,OAAO,OAAKC,QAId,GADAD,KAAKE,IAAL,CAAUnB,QAAV,CACA,EAAOiB,IAAP;AACD,OAfW,CAAd;;AAiBIT,WAAKQ,MAAL,KAAgB,CAnByE,KAmBtE,KAAKE,QAAL,GAAgBR,OAnBsD;;;AAqB7F,UAAMU,OAAO,SAAPA,IAAO,GAAM;AACjB,eAAKC,SAAL,CAAeZ,KAAf,EAAsBC,OAAtB,CADiB;AAElB,OAFD;;AAIA,iCAAO;AACLU,kBADK;AAELE,gBAAQF,IAFH;AAGLd,cAAM,cAACiB,EAAD,EAAKC,KAAL;AAAA,iBAAed,QAAQJ,IAAR,CAAaiB,EAAb,EAAiBC,KAAjB,CAAf;AAAA;AAHD,OAAP;AAKD;;;8BAESP,I,EAAMP,O,EAAS;AACnBO,UADmB,GAErBA,KAAKQ,KAAL,EAFqB,GAGZf,OAHY,IAIrBA,QAAQJ,IAAR,CAAa;AAAA,eAAQW,KAAKQ,KAAL,EAAR;AAAA,OAAb,CAJqB;AAMxB;;EA3CgC5B,a;;SAAdE,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\nimport RethinkStore from './RethinkStore';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery<RethinkStore> {\n  fetch(callback: ?Function): Promise<any> {\n    return this.queryCallback(this.store.query(), this.store.r).run().then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    let _feed;\n    let promise = this.queryCallback(this.store.query(), this.store.r)\n      .changes({\n        includeInitial: _includeInitial,\n        includeStates: true,\n        includeTypes: true,\n        includeOffsets: true,\n      })\n      .then(feed => {\n        if (args.length === 0) {\n          _feed = feed;\n          delete this._promise;\n        }\n\n        feed.each(callback);\n        return feed;\n      });\n\n    if (args.length === 0) this._promise = promise;\n\n    const stop = () => {\n      this.closeFeed(_feed, promise);\n    };\n\n    return {\n      stop,\n      cancel: stop,\n      then: (cb, errCb) => promise.then(cb, errCb),\n    };\n  }\n\n  closeFeed(feed, promise) {\n    if (feed) {\n      feed.close();\n    } else if (promise) {\n      promise.then(feed => feed.close());\n    }\n  }\n}\n"]}