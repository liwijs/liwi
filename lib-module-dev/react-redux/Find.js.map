{"version":3,"sources":["../../src/react-redux/Find.js"],"names":["React","Component","ReactNodeType","ReactComponentType","AbstractQuery","FindComponent","state","fetched","result","query","props","_find","fetch","setState","createElement","component","name","loadingComponent"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAcC,+BAAd,EAA6BC,yCAA7B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;;;;;;;AAEA,oCAAiB,SACf,mBAAM,UAAN,CADe,EAEf,oBAAO,oBAAP,CAFe,EAGf,wBAAW,yBAAX,CAHe,EAIf,+BAAkB,WAAC,yBAAD,CAAlB,CAJe,CAAjB;IAOqBC,a;;;;;;;;;;oMAGnBC,K,GAAQ;AACNC,eAAS,KADH;AAENC;AAFM,K;;;;;wCAKY;AAAA;;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAElB,WAAKE,KAAL,GAAaF,MAAMG,KAAN,CAAY,UAACJ,MAAD,EAAiB;AAAA,0BAAV,OAAU;;AAAA,uDACnC,OAAKG,KAD8B,KAExC,OAAKE,QAAL,CAAc;AACZN,mBAAS,IADG;AAEZC;AAFY,SAAd,CAFwC,EAMxC,OAAO,OAAKG,KAN4B;AAOzC,OAPY,CAFK;AAUnB;;;2CAEsB;AACjB,WAAKA,KADY,IAGnB,OAAO,KAAKA,KAHO;AAKtB;;;6BAEuB;AAAA,iCAAd,oBAAc;;AAAA,aACjB,KAAKL,KAAL,CAAWC,OADM,sBAKfP,MAAMc,aAAN,CAAoB,KAAKJ,KAAL,CAAWK,SAA/B,sBAA6C,KAAKL,KAAL,CAAWM,IAAxD,EAA+D,KAAKV,KAAL,CAAWE,MAA1E,EALe,uBAEb,KAAKE,KAAL,CAAWO,gBAAX,GAA8BjB,MAAMc,aAAN,CAAoB,KAAKJ,KAAL,CAAWO,gBAA/B,CAA9B,GAAiF,IAFpE;AAMvB;;EAjCwChB,S,kCACpC,S;SADcI,a","file":"Find.js","sourcesContent":["import React, { Component } from 'react';\nimport type { ReactNodeType, ReactComponentType } from 'alp-react-redux/src/types';\nimport AbstractQuery from '../store/AbstractQuery';\n\ntype PropsType = {\n  name: string,\n  query: AbstractQuery,\n  component: ReactComponentType,\n  loadingComponent: ?ReactComponentType,\n};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  state = {\n    fetched: false,\n    result: undefined,\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      this.setState({\n        fetched: true,\n        result,\n      });\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): ReactNodeType {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n"]}