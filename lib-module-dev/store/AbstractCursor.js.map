{"version":3,"sources":["../../src/store/AbstractCursor.js"],"names":["ResultType","AbstractCursor","store","_store","Error","next","then","result","newLimit","applyLimit","findByKey","key","deleteByKey","callback","forEachKeys","Symbol","iterator","keysIterator","keyPromise"],"mappings":";;;;;;;;AAAA;AACA,SAAcA,yBAAd,QAAgC,UAAhC;;;;;;;;;IAEqBC,c;AAGnB,0BAAYC,KAAZ,EAA0B;AAAA;AAAA,aAHQ;AAGR;;AAAA,qBAAT,2DAAS;;AAAA,gDACxB,KAAKC,MAAL,GAAcD,KADU;AAEzB;;;;4BAMO;AACN,YAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACD;;;2BAEoB;AAAA,eAAL,OAAK;;AACnB,YAAM,IAAIA,KAAJ,CAAU,+BAAV,CAAN;AACD;;;iCAE0B;AAAA;;AAAA,kCAAL,OAAK;;AACzB,aAAO,KAAKC,IAAL,GAAYC,IAAZ,CAAiB;AAAA,eAAM,MAAKC,MAAL,EAAN;AAAA,OAAjB,CAAP;AAAA;AAAA;AACD;;;0BAEKC,Q,EAAiC;AAAA,0BAAzB,UAAyB;;AAAA,eAAN,QAAM;;AACrC,iEAAM,IAAIJ,KAAJ,CAAU,gCAAV,CAAN;AACD;;;4BAEkC;AAAA,UAA7BK,UAA6B;;AAAA,4BAAnB,WAAmB;;AACjC,uEAAM,IAAIL,KAAJ,CAAU,gCAAV,CAAN;AACD;;;6BAE6B;AAAA,kCAAZ,iBAAY;;AAC5B,aAAO,KAAKF,KAAL,CAAWQ,SAAX,CAAqB,KAAKC,GAA1B,CAAP;AAAA;AAAA;AACD;;;8BAEuB;AAAA,kCAAN,QAAM;;AACtB,aAAO,KAAKT,KAAL,CAAWU,WAAX,CAAuB,KAAKD,GAA5B,CAAP;AAAA;AAAA;AACD;;;;4EAEiBE,Q;;;;;;8BAAQ,Y,iCAAqB,Q,EAAR,iBAAQ,QAAR,C;;;wCAEjB,KAAKR,IAAL,E;;;kBAAZM,G,kBACDA,G;;;;;;;;yCAECE,SAASF,GAAT,C;;;;;;;;;;;;;;;;;;;4BAIFE,Q,EAAyB;AAAA;;AAAA,kCAAN,QAAM;;AAC/B,aAAO,KAAKC,WAAL,CAAiB;AAAA,eAAM,OAAKP,MAAL,GAAcD,IAAd,CAAmB;AAAA,iBAAUO,SAASN,MAAT,CAAV;AAAA,SAAnB,CAAN;AAAA,OAAjB,CAAP;AAAA;AAAA;AACD;;;;;;;uCAIS,KAAKF,IAAL,E;;;;;;;;;;;;;SAIRU,OAAOC,Q;;;;;;;;;kIAEgB,KAAKC,YAAL,E;;;;;;;;mBAAdC,U,oCACDA,WAAWZ,IAAX,CAAgB;AAAA,qBAAOK,OAAO,OAAKJ,MAAL,EAAd;AAAA,aAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIV;AACA;;;;;;;;;;;;;;;;;wBA3DmB;AAAA,kCAAN,+CAAM;;AACjB,iCAAO,KAAKJ,MAAZ;AACD;;;SATkBF,c","file":"AbstractCursor.js","sourcesContent":["/* eslint-disable no-await-in-loop */\nimport type { ResultType } from '../types';\n\nexport default class AbstractCursor<Store> {\n  key: any;\n\n  constructor(store: Store) {\n    this._store = store;\n  }\n\n  get store(): Store {\n    return this._store;\n  }\n\n  close() {\n    throw new Error('close() missing implementation');\n  }\n\n  next(): Promise<any> {\n    throw new Error('next() missing implementation');\n  }\n\n  nextResult(): Promise<any> {\n    return this.next().then(() => this.result());\n  }\n\n  limit(newLimit: number): Promise<void> {\n    throw new Error('limit() missing implementation');\n  }\n\n  count(applyLimit: boolean = false) {\n    throw new Error('count() missing implementation');\n  }\n\n  result(): Promise<ResultType> {\n    return this.store.findByKey(this.key);\n  }\n\n  delete(): Promise<void> {\n    return this.store.deleteByKey(this.key);\n  }\n\n  async forEachKeys(callback: Function): Promise<void> {\n    while (true) {\n      const key = await this.next();\n      if (!key) return;\n\n      await callback(key);\n    }\n  }\n\n  forEach(callback): Promise<void> {\n    return this.forEachKeys(() => this.result().then(result => callback(result)));\n  }\n\n  *keysIterator() {\n    while (true) {\n      yield this.next();\n    }\n  }\n\n  *[Symbol.iterator]() {\n    // eslint-disable-next-line no-restricted-syntax\n    for (let keyPromise of this.keysIterator()) {\n      yield keyPromise.then(key => key && this.result());\n    }\n  }\n\n  // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n  /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}