{"version":3,"file":"index-browsermodern.es.js","sources":["../src/ResourcesServerService.ts","../src/createMessageHandler.ts"],"sourcesContent":["import type { BaseModel, Criteria, Sort } from 'liwi-store';\n// import ResourceServerCursor from './ResourceServerCursor';\nimport type { ServiceResource } from './ServiceResource';\n\n// import { CursorResource } from './CursorResource';\n\nexport interface CreateCursorOptions<Model extends BaseModel> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport class ResourcesServerService {\n  readonly serviceResources: Map<string, ServiceResource<any, any>>;\n\n  // readonly cursorResources: Map<string, CursorResource<any, any, any>>;\n\n  constructor({\n    serviceResources = new Map(),\n  }: // cursorResources = new Map(),\n  {\n    serviceResources: Map<string, ServiceResource<any, any>>;\n    // cursorResources: Map<string, CursorResource<any, any, any>>;\n  }) {\n    this.serviceResources = serviceResources;\n    // this.cursorResources = cursorResources;\n  }\n\n  addResource(key: string, resource: ServiceResource<any, any>): void {\n    this.serviceResources.set(key, resource);\n  }\n\n  // addCursorResource(\n  //   key: string,\n  //   cursorResource: CursorResource<any, any, any>,\n  // ) {\n  //   this.cursorResources.set(key, cursorResource);\n  // }\n\n  getServiceResource(key: string): ServiceResource<any, any> {\n    const resource = this.serviceResources.get(key);\n    if (!resource) throw new Error(`Invalid service resource: \"${key}\"`);\n    return resource;\n  }\n\n  // getCursorResource(key: string) {\n  //   const resource = this.cursorResources.get(key);\n  //   if (!resource) throw new Error(`Invalid cursor resource: \"${key}\"`);\n  //   return resource;\n  // }\n\n  // async createCursor<Model extends BaseModel, Transformed, ConnectedUser>(\n  //   resource: CursorResource<Model, Transformed, ConnectedUser>,\n  //   connectedUser: ConnectedUser,\n  //   { criteria, sort, limit }: CreateCursorOptions<Model>,\n  // ): Promise<ResourceServerCursor<Model, any, Transformed, ConnectedUser>> {\n  //   // TODO: resource.query(connectedUser, criteria || {}, sort).cursor()\n  //   criteria = resource.criteria(connectedUser, criteria || {});\n  //   sort = resource.sort(connectedUser, sort);\n  //   const cursor = await resource.store.cursor(criteria, sort);\n  //   limit = resource.limit(limit);\n  //   if (limit) cursor.limit(limit);\n  //   return new ResourceServerCursor(resource, cursor, connectedUser);\n  // }\n}\n","/* eslint-disable complexity, max-lines */\nimport 'pob-babel';\nimport type {\n  Query,\n  QuerySubscription,\n  ToServerMessage,\n  ToServerSubscribeQueryPayload,\n  ToServerQueryPayload,\n} from 'liwi-resources';\nimport { ResourcesServerError } from 'liwi-resources';\nimport { Logger } from 'nightingale-logger';\nimport type { ResourcesServerService } from './ResourcesServerService';\nimport type { ServiceResource, SubscribeHook } from './ServiceResource';\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\nexport type SubscriptionCallback = (\n  subscriptionId: number,\n  error: null | Error,\n  result: any,\n) => void;\n\nexport type MessageHandler = (\n  message: ToServerMessage,\n  subscriptionCallback: SubscriptionCallback,\n) => Promise<unknown>;\n\nexport interface SubscriptionAndSubscribeHook {\n  subscription: QuerySubscription;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nconst logUnexpectedError = (\n  error: Error | unknown,\n  message: string,\n  payload: unknown,\n): void => {\n  if (!(error instanceof ResourcesServerError)) {\n    logger.error(message, {\n      error,\n      payload: !__DEV__ ? 'redacted' : payload,\n    });\n  } else if (__DEV__) {\n    logger.info(`ResourcesServerError in ${message}`, {\n      code: error.code,\n      message: error.message,\n      payload,\n    });\n  }\n};\n\nexport const createMessageHandler = <AuthenticatedUser>(\n  resourcesServerService: ResourcesServerService,\n  authenticatedUser: AuthenticatedUser | null,\n  allowSubscriptions: boolean,\n): {\n  messageHandler: MessageHandler;\n  close: () => void;\n} => {\n  const openedSubscriptions = allowSubscriptions\n    ? new Map<number, SubscriptionAndSubscribeHook>()\n    : null;\n\n  const getResource = (payload: {\n    resourceName: string;\n  }): ServiceResource<any, any> => {\n    logger.debug('resource', {\n      resourceName: payload.resourceName,\n    });\n    const resource = resourcesServerService.getServiceResource(\n      payload.resourceName,\n    );\n    return resource;\n  };\n\n  const createQuery = async <\n    Service extends ServiceResource<any, any>,\n    Key extends keyof Service['queries'] & string,\n  >(\n    payload: ToServerQueryPayload<Key>,\n    resource: Service,\n  ): Promise<Query<any, any>> => {\n    if (!payload.key.startsWith('query')) {\n      throw new Error('Invalid query key');\n    }\n\n    return resource.queries[payload.key](payload.params, authenticatedUser);\n  };\n\n  const createSubscription = (\n    type: 'fetchAndSubscribe' | 'subscribe',\n    payload: ToServerSubscribeQueryPayload,\n    resource: ServiceResource<any, any>,\n    query: Query<any, any>,\n    sendSubscriptionMessage: SubscriptionCallback,\n  ): PromiseLike<null> => {\n    if (!openedSubscriptions) {\n      throw new Error('Subscriptions not allowed');\n    }\n\n    const { subscriptionId } = payload;\n    if (openedSubscriptions.has(subscriptionId)) {\n      const error = 'Already have a watcher for this id. Cannot add a new one';\n      logger.warn(error, { subscriptionId, key: payload.key });\n      throw new ResourcesServerError('ALREADY_HAVE_WATCHER', error);\n    }\n\n    const subscription = query[type]((error: Error | null, result: any) => {\n      if (error) {\n        logUnexpectedError(error, type, payload);\n      }\n      sendSubscriptionMessage(subscriptionId, error, result);\n    });\n\n    const subscribeHook = resource.subscribeHooks?.[payload.key];\n    openedSubscriptions.set(subscriptionId, {\n      subscription,\n      subscribeHook,\n      params: subscribeHook ? payload.params : undefined,\n    });\n    if (subscribeHook) {\n      subscribeHook.subscribed(authenticatedUser, payload.params);\n    }\n\n    return subscription.then(() => null);\n  };\n\n  const unsubscribeSubscription = ({\n    subscription,\n    subscribeHook,\n    params,\n  }: SubscriptionAndSubscribeHook): void => {\n    subscription.stop();\n    if (subscribeHook) {\n      subscribeHook.unsubscribed(authenticatedUser, params);\n    }\n  };\n\n  return {\n    close: () => {\n      if (openedSubscriptions) {\n        openedSubscriptions.forEach(unsubscribeSubscription);\n      }\n    },\n    messageHandler: async (message, subscriptionCallback): Promise<unknown> => {\n      switch (message.type) {\n        case 'fetch': {\n          try {\n            const resource = getResource(message.payload);\n            const query = await createQuery(message.payload, resource);\n            return await query.fetch((result) => result);\n          } catch (err) {\n            logUnexpectedError(err, message.type, message.payload);\n            throw err;\n          }\n          return;\n        }\n        case 'fetchAndSubscribe': {\n          try {\n            const resource = getResource(message.payload);\n            const query = await createQuery(message.payload, resource);\n\n            return await createSubscription(\n              'fetchAndSubscribe',\n              message.payload,\n              resource,\n              query,\n              subscriptionCallback,\n            );\n          } catch (err) {\n            logUnexpectedError(err, message.type, message.payload);\n            throw err;\n          }\n          return;\n        }\n        case 'subscribe': {\n          try {\n            const resource = getResource(message.payload);\n            const query = await createQuery(message.payload, resource);\n            await createSubscription(\n              'subscribe',\n              message.payload,\n              resource,\n              query,\n              subscriptionCallback,\n            );\n          } catch (err) {\n            logUnexpectedError(err, message.type, message.payload);\n            throw err;\n          }\n          return;\n        }\n        // case 'subscribe:changePayload': {\n        //   break;\n        // }\n        case 'subscribe:close': {\n          if (!openedSubscriptions) {\n            throw new Error('Subscriptions not allowed');\n          }\n          try {\n            const { subscriptionId } = message.payload;\n            const SubscriptionAndSubscribeHook =\n              openedSubscriptions.get(subscriptionId);\n            if (!SubscriptionAndSubscribeHook) {\n              logger.warn('tried to unsubscribe non existing watcher', {\n                subscriptionId,\n              });\n            } else {\n              openedSubscriptions.delete(subscriptionId);\n              unsubscribeSubscription(SubscriptionAndSubscribeHook);\n            }\n          } catch (err) {\n            logUnexpectedError(err, message.type, message.payload);\n          }\n          return;\n        }\n        case 'do': {\n          try {\n            const resource = getResource(message.payload);\n            const { operationKey, params } = message.payload;\n\n            const operation = resource.operations[operationKey];\n\n            if (!operation) {\n              throw new ResourcesServerError(\n                'OPERATION_NOT_FOUND',\n                `Operation not found: ${operationKey}`,\n              );\n            }\n\n            return operation(params, authenticatedUser);\n          } catch (err) {\n            logUnexpectedError(err, message.type, message.payload);\n            throw err;\n          }\n        }\n      }\n    },\n  };\n};\n"],"names":["ResourcesServerService","constructor","serviceResources","Map","addResource","key","resource","set","getServiceResource","get","Error","logger","Logger","logUnexpectedError","error","message","payload","ResourcesServerError","info","code","createMessageHandler","resourcesServerService","authenticatedUser","allowSubscriptions","openedSubscriptions","getResource","debug","resourceName","createQuery","startsWith","queries","params","createSubscription","type","query","sendSubscriptionMessage","subscriptionId","has","warn","subscription","result","subscribeHook","subscribeHooks","undefined","subscribed","then","unsubscribeSubscription","stop","unsubscribed","close","forEach","messageHandler","subscriptionCallback","fetch","err","SubscriptionAndSubscribeHook","delete","operationKey","operation","operations"],"mappings":"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"}