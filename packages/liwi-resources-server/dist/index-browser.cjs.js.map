{"version":3,"file":"index-browser.cjs.js","sources":["../src/ResourceServerCursor.ts","../src/ResourcesServerService.ts"],"sourcesContent":["import { AbstractStoreCursor } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport CursorResource from './CursorResource';\n\nexport default class ResourceServerCursor<\n  Model extends BaseModel,\n  Transformed = any,\n  ConnectedUser = any\n> {\n  private resource: CursorResource<Model, Transformed, ConnectedUser>;\n\n  private connectedUser: any;\n\n  private cursor: AbstractStoreCursor<Model, any, any>;\n\n  constructor(\n    resource: CursorResource<Model, Transformed, ConnectedUser>,\n    cursor: AbstractStoreCursor<Model, any, any>,\n    connectedUser?: ConnectedUser,\n  ) {\n    this.resource = resource;\n    this.connectedUser = connectedUser;\n    this.cursor = cursor;\n  }\n\n  toArray(): Promise<Transformed[]> {\n    return this.cursor\n      .toArray()\n      .then((results: Model[]) =>\n        results.map((result) =>\n          this.resource.transform(result, this.connectedUser),\n        ),\n      );\n  }\n}\n","import { BaseModel, Criteria, Sort } from 'liwi-types';\nimport ResourceServerCursor from './ResourceServerCursor';\nimport ServiceResource from './ServiceResource';\nimport CursorResource from './CursorResource';\n\nexport interface CreateCursorOptions<Model extends BaseModel> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport default class ResourcesServerService {\n  public readonly serviceResources: Map<string, ServiceResource<any, any, any>>;\n\n  public readonly cursorResources: Map<string, CursorResource<any, any, any>>;\n\n  public constructor(\n    serviceResources: Map<string, ServiceResource<any, any, any>>,\n    cursorResources: Map<string, CursorResource<any, any, any>>,\n  ) {\n    this.serviceResources = serviceResources;\n    this.cursorResources = cursorResources;\n  }\n\n  public addResource(key: string, resource: ServiceResource<any, any, any>) {\n    this.serviceResources.set(key, resource);\n  }\n\n  public addCursorResource(\n    key: string,\n    cursorResource: CursorResource<any, any, any>,\n  ) {\n    this.cursorResources.set(key, cursorResource);\n  }\n\n  getServiceResource(key: string) {\n    const resource = this.serviceResources.get(key);\n    if (!resource) throw new Error(`Invalid service resource: \"${key}\"`);\n    return resource;\n  }\n\n  getCursorResource(key: string) {\n    const resource = this.cursorResources.get(key);\n    if (!resource) throw new Error(`Invalid cursor resource: \"${key}\"`);\n    return resource;\n  }\n\n  async createCursor<Model extends BaseModel, Transformed, ConnectedUser>(\n    resource: CursorResource<Model, Transformed, ConnectedUser>,\n    connectedUser: ConnectedUser,\n    { criteria, sort, limit }: CreateCursorOptions<Model>,\n  ): Promise<ResourceServerCursor<Model, Transformed, ConnectedUser>> {\n    // TODO: resource.query(connectedUser, criteria || {}, sort).cursor()\n    criteria = resource.criteria(connectedUser, criteria || {});\n    sort = resource.sort(connectedUser, sort);\n    const cursor = await resource.store.cursor(criteria, sort);\n    limit = resource.limit(limit);\n    if (limit) cursor.limit(connectedUser, limit);\n    return new ResourceServerCursor(resource, cursor, connectedUser);\n  }\n}\n"],"names":["ResourceServerCursor","resource","cursor","connectedUser","toArray","then","results","map","result","transform","ResourcesServerService","serviceResources","cursorResources","addResource","key","set","addCursorResource","cursorResource","getServiceResource","get","Error","getCursorResource","createCursor","criteria","sort","limit","store"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIqBA;;;gCAYjBC,QADF,EAEEC,MAFF,EAGEC,aAHF,EAIE;SACKF,QAAL,GAAgBA,QAAhB;SACKE,aAAL,GAAqBA,aAArB;SACKD,MAAL,GAAcA,MAAd;;;;;SAGFE,UAAA,mBAAkC;;;WACzB,KAAKF,MAAL,CACJE,OADI,GAEJC,IAFI,CAEC,UAACC,OAAD;aACJA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD;eACV,KAAI,CAACP,QAAL,CAAcQ,SAAd,CAAwBD,MAAxB,EAAgC,KAAI,CAACL,aAArC,CADU;OAAZ,CADI;KAFD,CAAP;;;;;;ICfiBO;;;kCAMjBC,gBADF,EAEEC,eAFF,EAGE;SACKD,gBAAL,GAAwBA,gBAAxB;SACKC,eAAL,GAAuBA,eAAvB;;;;;SAGKC,cAAP,qBAAmBC,GAAnB,EAAgCb,QAAhC,EAA0E;SACnEU,gBAAL,CAAsBI,GAAtB,CAA0BD,GAA1B,EAA+Bb,QAA/B;;;SAGKe,oBAAP,2BACEF,GADF,EAEEG,cAFF,EAGE;SACKL,eAAL,CAAqBG,GAArB,CAAyBD,GAAzB,EAA8BG,cAA9B;;;SAGFC,qBAAA,4BAAmBJ,GAAnB,EAAgC;QACxBb,QAAQ,GAAG,KAAKU,gBAAL,CAAsBQ,GAAtB,CAA0BL,GAA1B,CAAjB;QACI,CAACb,QAAL,EAAe,MAAM,IAAImB,KAAJ,kCAAwCN,GAAxC,QAAN;WACRb,QAAP;;;SAGFoB,oBAAA,2BAAkBP,GAAlB,EAA+B;QACvBb,QAAQ,GAAG,KAAKW,eAAL,CAAqBO,GAArB,CAAyBL,GAAzB,CAAjB;QACI,CAACb,QAAL,EAAe,MAAM,IAAImB,KAAJ,iCAAuCN,GAAvC,QAAN;WACRb,QAAP;;;SAGIqB;;;;;4BAAN,iBACErB,QADF,EAEEE,aAFF;;;;;;cAGIoB,QAHJ,QAGIA,QAHJ,EAGcC,IAHd,QAGcA,IAHd,EAGoBC,KAHpB,QAGoBA,KAHpB;;cAMEF,QAAQ,GAAGtB,QAAQ,CAACsB,QAAT,CAAkBpB,aAAlB,EAAiCoB,QAAQ,IAAI,EAA7C,CAAX;cACAC,IAAI,GAAGvB,QAAQ,CAACuB,IAAT,CAAcrB,aAAd,EAA6BqB,IAA7B,CAAP;;qBACqBvB,QAAQ,CAACyB,KAAT,CAAexB,MAAf,CAAsBqB,QAAtB,EAAgCC,IAAhC,CARvB;;;cAQQtB,MARR;cASEuB,KAAK,GAAGxB,QAAQ,CAACwB,KAAT,CAAeA,KAAf,CAAR;kBACIA,KAAJ,EAAWvB,MAAM,CAACuB,KAAP,CAAatB,aAAb,EAA4BsB,KAA5B;+CACJ,IAAIzB,oBAAJ,CAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,aAA3C,CAXT;;;;;;;;;;;;;;;;;;;;"}