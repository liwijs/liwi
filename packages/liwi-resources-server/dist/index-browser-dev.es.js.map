{"version":3,"file":"index-browser-dev.es.js","sources":["../src/ResourcesServerService.ts"],"sourcesContent":["import { BaseModel, Criteria, Sort } from 'liwi-types';\n// import ResourceServerCursor from './ResourceServerCursor';\nimport { ServiceResource } from './ServiceResource';\n// import { CursorResource } from './CursorResource';\n\nexport interface CreateCursorOptions<Model extends BaseModel> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport default class ResourcesServerService {\n  readonly serviceResources: Map<string, ServiceResource<any, any>>;\n\n  // readonly cursorResources: Map<string, CursorResource<any, any, any>>;\n\n  constructor({\n    serviceResources = new Map(),\n  }: // cursorResources = new Map(),\n  {\n    serviceResources: Map<string, ServiceResource<any, any>>;\n    // cursorResources: Map<string, CursorResource<any, any, any>>;\n  }) {\n    this.serviceResources = serviceResources;\n    // this.cursorResources = cursorResources;\n  }\n\n  addResource(key: string, resource: ServiceResource<any, any>): void {\n    this.serviceResources.set(key, resource);\n  }\n\n  // addCursorResource(\n  //   key: string,\n  //   cursorResource: CursorResource<any, any, any>,\n  // ) {\n  //   this.cursorResources.set(key, cursorResource);\n  // }\n\n  getServiceResource(key: string): ServiceResource<any, any> {\n    const resource = this.serviceResources.get(key);\n    if (!resource) throw new Error(`Invalid service resource: \"${key}\"`);\n    return resource;\n  }\n\n  // getCursorResource(key: string) {\n  //   const resource = this.cursorResources.get(key);\n  //   if (!resource) throw new Error(`Invalid cursor resource: \"${key}\"`);\n  //   return resource;\n  // }\n\n  // async createCursor<Model extends BaseModel, Transformed, ConnectedUser>(\n  //   resource: CursorResource<Model, Transformed, ConnectedUser>,\n  //   connectedUser: ConnectedUser,\n  //   { criteria, sort, limit }: CreateCursorOptions<Model>,\n  // ): Promise<ResourceServerCursor<Model, any, Transformed, ConnectedUser>> {\n  //   // TODO: resource.query(connectedUser, criteria || {}, sort).cursor()\n  //   criteria = resource.criteria(connectedUser, criteria || {});\n  //   sort = resource.sort(connectedUser, sort);\n  //   const cursor = await resource.store.cursor(criteria, sort);\n  //   limit = resource.limit(limit);\n  //   if (limit) cursor.limit(limit);\n  //   return new ResourceServerCursor(resource, cursor, connectedUser);\n  // }\n}\n"],"names":["ResourcesServerService","serviceResources","Map","addResource","key","resource","set","getServiceResource","get","Error"],"mappings":";;AACA;AAEA;IAQqBA;AAGnB;AAEA,wCAMG;AAAA,qCALDC,gBAKC;AAAA,QALDA,gBAKC,sCALkB,IAAIC,GAAJ,EAKlB;AACD,SAAKD,gBAAL,GAAwBA,gBAAxB,CADC;AAGF;;;;SAEDE,cAAA,qBAAYC,GAAZ,EAAyBC,QAAzB,EAAoE;AAClE,SAAKJ,gBAAL,CAAsBK,GAAtB,CAA0BF,GAA1B,EAA+BC,QAA/B;AACD;AAGD;AACA;AACA;AACA;AACA;;;SAEAE,qBAAA,4BAAmBH,GAAnB,EAA2D;AACzD,QAAMC,QAAQ,GAAG,KAAKJ,gBAAL,CAAsBO,GAAtB,CAA0BJ,GAA1B,CAAjB;AACA,QAAI,CAACC,QAAL,EAAe,MAAM,IAAII,KAAJ,kCAAwCL,GAAxC,QAAN;AACf,WAAOC,QAAP;AACD;AAGD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;"}