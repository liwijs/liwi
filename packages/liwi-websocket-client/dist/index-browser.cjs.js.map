{"version":3,"file":"index-browser.cjs.js","sources":["../src/WebsocketCursor.ts","../src/Query.ts","../src/WebsocketStore.ts"],"sourcesContent":["import { AbstractCursor } from 'liwi-store';\nimport { BaseModel, Criteria, Sort } from 'liwi-types';\nimport WebsocketStore from './WebsocketStore';\n\nexport interface Options<Model extends BaseModel> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport default class WebsocketCursor<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractCursor<Model, KeyPath, WebsocketStore<Model, any>> {\n  _idCursor?: number;\n\n  private options: Options<Model>;\n\n  private _result?: Model;\n\n  constructor(store: WebsocketStore<Model, any>, options: Options<Model>) {\n    super(store);\n    this.options = options;\n  }\n\n  /* options */\n\n  limit(newLimit: number): Promise<this> {\n    if (this._idCursor) throw new Error('Cursor already created');\n    this.options.limit = newLimit;\n    return Promise.resolve(this);\n  }\n\n  /* results */\n\n  _create() {\n    if (this._idCursor) throw new Error('Cursor already created');\n    return this.store.connection\n      .emit('createCursor', this.options)\n      .then((idCursor: number) => {\n        if (!idCursor) return;\n        this._idCursor = idCursor;\n      });\n  }\n\n  emit(type: string, ...args: Array<any>): Promise<any> {\n    if (!this._idCursor) {\n      return this._create().then(() => this.emit(type, ...args));\n    }\n\n    return this.store.emit('cursor', { type, id: this._idCursor }, args);\n  }\n\n  advance(count: number) {\n    this.emit('advance', count);\n    return this;\n  }\n\n  next(): Promise<any> {\n    return this.emit('next').then((result) => {\n      this._result = result;\n      this.key = result && result[this._store.keyPath];\n      return this.key;\n    });\n  }\n\n  result(): Promise<Model> {\n    if (!this._result) throw new Error('Cannot call result() before next()');\n    return Promise.resolve(this._result);\n  }\n\n  count(applyLimit: boolean = false) {\n    return this.emit('count', applyLimit);\n  }\n\n  close(): Promise<void> {\n    if (!this._store) return Promise.resolve();\n\n    const closedPromise = this._idCursor\n      ? this.emit('close')\n      : Promise.resolve();\n    this._idCursor = undefined;\n    this._result = undefined;\n    return closedPromise;\n  }\n\n  toArray(): Promise<Array<Model>> {\n    return this.store.emit('cursor toArray', this.options).then((result) => {\n      this.close();\n      return result;\n    });\n  }\n}\n","import { PRODUCTION } from 'pob-babel';\nimport Logger from 'nightingale-logger';\nimport { decode } from 'extended-json';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport WebsocketStore from './WebsocketStore';\n\ntype SubscribeReturn = {\n  cancel: () => void;\n  stop: () => void;\n  then: (cb: any) => Promise<any>;\n};\n\ntype Callback = (err: Error | null, result: any) => void;\n\nconst logger = new Logger('liwi:websocket-client:query');\n\nexport default class Query<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractQuery<WebsocketStore<Model, KeyPath>> {\n  key: string;\n\n  constructor(store: WebsocketStore<Model, KeyPath>, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(onFulfilled?: (value: any) => any): Promise<any> {\n    return this.store.emit('fetch', this.key).then(onFulfilled);\n  }\n\n  _subscribe(\n    callback: Callback,\n    _includeInitial = false,\n    args: Array<any>,\n  ): SubscribeReturn {\n    const eventName = `subscribe:${this.store.restName}.${this.key}`;\n    const listener = (err: Error | null, result?: string) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n    this.store.connection.on(eventName, listener);\n\n    let _stopEmitSubscribe: () => void;\n    let promise: Promise<void> | undefined = this.store\n      .emitSubscribe(\n        _includeInitial ? 'fetchAndSubscribe' : 'subscribe',\n        this.key,\n        eventName,\n        args,\n      )\n      .then((stopEmitSubscribe) => {\n        _stopEmitSubscribe = stopEmitSubscribe;\n        logger.info('subscribed');\n      })\n      .catch((err) => {\n        this.store.connection.off(eventName, listener);\n        throw err;\n      });\n\n    const stop = () => {\n      if (!promise) return;\n      _stopEmitSubscribe();\n      promise.then(() => {\n        promise = undefined;\n        this.store.connection.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: (cb) => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n","import Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { AbstractStore, AbstractConnection } from 'liwi-store';\nimport { BaseModel, Update, Criteria, Sort } from 'liwi-types';\nimport WebsocketCursor from './WebsocketCursor';\nimport Query from './Query';\n\nconst logger = new Logger('liwi:websocket-client');\n\nexport interface WebsocketConnection extends AbstractConnection {\n  emit: (event: string, ...args: any[]) => Promise<any>;\n  isConnected: () => boolean;\n  isDisconnected: () => boolean;\n  on: (event: string, listener: Function) => this;\n  off: (event: string, listener: Function) => this;\n}\n\nexport default class WebsocketStore<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractStore<\n  Model,\n  KeyPath,\n  WebsocketConnection,\n  WebsocketCursor<Model, KeyPath>\n> {\n  restName: string;\n\n  constructor(\n    websocket: WebsocketConnection,\n    restName: string,\n    keyPath: KeyPath,\n  ) {\n    super(websocket, keyPath);\n\n    if (!restName) {\n      throw new Error(`Invalid restName: \"${restName}\"`);\n    }\n\n    this.restName = restName;\n  }\n\n  createQuery(key: string): Query<Model, KeyPath> {\n    logger.debug('createQuery', { key });\n    return new Query(this, key);\n  }\n\n  emitSubscribe(type: string, ...args: Array<any>) {\n    const emit = () => this.emit(type, ...args);\n    const registerOnConnect = () => {\n      this.connection.on('connect', emit);\n      return () => this.connection.off('connect', emit);\n    };\n\n    if (this.connection.isConnected()) {\n      return emit().then(registerOnConnect);\n    }\n\n    return Promise.resolve(registerOnConnect());\n  }\n\n  insertOne(object: Model): Promise<Model> {\n    return this.emit('insertOne', object);\n  }\n\n  replaceOne(object: Model): Promise<Model> {\n    return this.emit('replaceOne', object);\n  }\n\n  upsertOne(object: Model): Promise<Model> {\n    return this.emit('upsertOne', object);\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Update<Model>): Promise<Model> {\n    return this.emit('partialUpdateByKey', key, partialUpdate);\n  }\n\n  partialUpdateOne(\n    object: Model,\n    partialUpdate: Update<Model>,\n  ): Promise<Model> {\n    return this.emit('partialUpdateOne', object, partialUpdate);\n  }\n\n  partialUpdateMany(\n    criteria: Criteria<Model>,\n    partialUpdate: Update<Model>,\n  ): Promise<void> {\n    return this.emit('partialUpdateMany', criteria, partialUpdate);\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    return this.emit('deleteByKey', key);\n  }\n\n  deleteOne(object: Model): Promise<void> {\n    return this.emit('deleteOne', object);\n  }\n\n  cursor(\n    criteria?: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<WebsocketCursor<Model, KeyPath>> {\n    return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n  }\n\n  findByKey(key: any): Promise<Model | undefined> {\n    return this.findOne({ [this.keyPath]: key });\n  }\n\n  findOne(\n    criteria: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<Model | undefined> {\n    return this.emit('findOne', criteria, sort);\n  }\n\n  emit(type: string, ...args: Array<any>) {\n    logger.debug('emit', { type, args });\n    if (this.connection.isDisconnected()) {\n      throw new Error('Websocket is not connected');\n    }\n\n    return this.connection\n      .emit('rest', {\n        type,\n        restName: this.restName,\n        json: encode(args),\n      })\n      .then((result) => result && decode(result));\n  }\n}\n"],"names":["WebsocketCursor","store","options","_idCursor","_result","limit","newLimit","Error","Promise","resolve","_create","connection","emit","then","idCursor","type","args","id","advance","count","next","result","key","_store","keyPath","applyLimit","close","closedPromise","undefined","toArray","AbstractCursor","logger","Logger","Query","fetch","onFulfilled","_subscribe","callback","_includeInitial","eventName","restName","listener","err","decodedResult","decode","on","_stopEmitSubscribe","promise","emitSubscribe","stopEmitSubscribe","info","catch","off","stop","cancel","cb","AbstractQuery","WebsocketStore","websocket","createQuery","debug","registerOnConnect","isConnected","insertOne","object","replaceOne","upsertOne","partialUpdateByKey","partialUpdate","partialUpdateOne","partialUpdateMany","criteria","deleteByKey","deleteOne","cursor","sort","findByKey","findOne","isDisconnected","json","encode","AbstractStore"],"mappings":"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"}