{"version":3,"file":"index-node8-dev.es.js","sources":["../src/WebsocketCursor.ts","../src/Query.ts","../src/WebsocketStore.ts"],"sourcesContent":["import { AbstractCursor } from 'liwi-store';\nimport { BaseModel, Criteria, Sort } from 'liwi-types';\nimport WebsocketStore from './WebsocketStore';\n\nexport interface Options<Model extends BaseModel> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport default class WebsocketCursor<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractCursor<Model, KeyPath, WebsocketStore<Model, any>> {\n  _idCursor?: number;\n\n  private options: Options<Model>;\n\n  private _result?: Model;\n\n  constructor(store: WebsocketStore<Model, any>, options: Options<Model>) {\n    super(store);\n    this.options = options;\n  }\n\n  /* options */\n\n  limit(newLimit: number): Promise<this> {\n    if (this._idCursor) throw new Error('Cursor already created');\n    this.options.limit = newLimit;\n    return Promise.resolve(this);\n  }\n\n  /* results */\n\n  _create() {\n    if (this._idCursor) throw new Error('Cursor already created');\n    return this.store.connection\n      .emit('createCursor', this.options)\n      .then((idCursor: number) => {\n        if (!idCursor) return;\n        this._idCursor = idCursor;\n      });\n  }\n\n  emit(type: string, ...args: Array<any>): Promise<any> {\n    if (!this._idCursor) {\n      return this._create().then(() => this.emit(type, ...args));\n    }\n\n    return this.store.emit('cursor', { type, id: this._idCursor }, args);\n  }\n\n  advance(count: number) {\n    this.emit('advance', count);\n    return this;\n  }\n\n  next(): Promise<any> {\n    return this.emit('next').then((result) => {\n      this._result = result;\n      this.key = result && result[this._store.keyPath];\n      return this.key;\n    });\n  }\n\n  result(): Promise<Model> {\n    if (!this._result) throw new Error('Cannot call result() before next()');\n    return Promise.resolve(this._result);\n  }\n\n  count(applyLimit: boolean = false) {\n    return this.emit('count', applyLimit);\n  }\n\n  close(): Promise<void> {\n    if (!this._store) return Promise.resolve();\n\n    const closedPromise = this._idCursor\n      ? this.emit('close')\n      : Promise.resolve();\n    this._idCursor = undefined;\n    this._result = undefined;\n    return closedPromise;\n  }\n\n  toArray(): Promise<Array<Model>> {\n    return this.store.emit('cursor toArray', this.options).then((result) => {\n      this.close();\n      return result;\n    });\n  }\n}\n","import { PRODUCTION } from 'pob-babel';\nimport Logger from 'nightingale-logger';\nimport { decode } from 'extended-json';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport WebsocketStore from './WebsocketStore';\n\ntype SubscribeReturn = {\n  cancel: () => void;\n  stop: () => void;\n  then: (cb: any) => Promise<any>;\n};\n\ntype Callback = (err: Error | null, result: any) => void;\n\nconst logger = new Logger('liwi:websocket-client:query');\n\nexport default class Query<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractQuery<WebsocketStore<Model, KeyPath>> {\n  key: string;\n\n  constructor(store: WebsocketStore<Model, KeyPath>, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(onFulfilled?: (value: any) => any): Promise<any> {\n    return this.store.emit('fetch', this.key).then(onFulfilled);\n  }\n\n  _subscribe(\n    callback: Callback,\n    _includeInitial = false,\n    args: Array<any>,\n  ): SubscribeReturn {\n    const eventName = `subscribe:${this.store.restName}.${this.key}`;\n    const listener = (err: Error | null, result?: string) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n    this.store.connection.on(eventName, listener);\n\n    let _stopEmitSubscribe: () => void;\n    let promise: Promise<void> | undefined = this.store\n      .emitSubscribe(\n        _includeInitial ? 'fetchAndSubscribe' : 'subscribe',\n        this.key,\n        eventName,\n        args,\n      )\n      .then((stopEmitSubscribe) => {\n        _stopEmitSubscribe = stopEmitSubscribe;\n        logger.info('subscribed');\n      })\n      .catch((err) => {\n        this.store.connection.off(eventName, listener);\n        throw err;\n      });\n\n    const stop = () => {\n      if (!promise) return;\n      _stopEmitSubscribe();\n      promise.then(() => {\n        promise = undefined;\n        this.store.connection.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: (cb) => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n","import Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { AbstractStore, AbstractConnection } from 'liwi-store';\nimport { BaseModel, Update, Criteria, Sort } from 'liwi-types';\nimport WebsocketCursor from './WebsocketCursor';\nimport Query from './Query';\n\nconst logger = new Logger('liwi:websocket-client');\n\nexport interface WebsocketConnection extends AbstractConnection {\n  emit: (event: string, ...args: any[]) => Promise<any>;\n  isConnected: () => boolean;\n  isDisconnected: () => boolean;\n  on: (event: string, listener: Function) => this;\n  off: (event: string, listener: Function) => this;\n}\n\nexport default class WebsocketStore<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractStore<\n  Model,\n  KeyPath,\n  WebsocketConnection,\n  WebsocketCursor<Model, KeyPath>\n> {\n  restName: string;\n\n  constructor(\n    websocket: WebsocketConnection,\n    restName: string,\n    keyPath: KeyPath,\n  ) {\n    super(websocket, keyPath);\n\n    if (!restName) {\n      throw new Error(`Invalid restName: \"${restName}\"`);\n    }\n\n    this.restName = restName;\n  }\n\n  createQuery(key: string): Query<Model, KeyPath> {\n    logger.debug('createQuery', { key });\n    return new Query(this, key);\n  }\n\n  emitSubscribe(type: string, ...args: Array<any>) {\n    const emit = () => this.emit(type, ...args);\n    const registerOnConnect = () => {\n      this.connection.on('connect', emit);\n      return () => this.connection.off('connect', emit);\n    };\n\n    if (this.connection.isConnected()) {\n      return emit().then(registerOnConnect);\n    }\n\n    return Promise.resolve(registerOnConnect());\n  }\n\n  insertOne(object: Model): Promise<Model> {\n    return this.emit('insertOne', object);\n  }\n\n  replaceOne(object: Model): Promise<Model> {\n    return this.emit('replaceOne', object);\n  }\n\n  upsertOne(object: Model): Promise<Model> {\n    return this.emit('upsertOne', object);\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Update<Model>): Promise<Model> {\n    return this.emit('partialUpdateByKey', key, partialUpdate);\n  }\n\n  partialUpdateOne(\n    object: Model,\n    partialUpdate: Update<Model>,\n  ): Promise<Model> {\n    return this.emit('partialUpdateOne', object, partialUpdate);\n  }\n\n  partialUpdateMany(\n    criteria: Criteria<Model>,\n    partialUpdate: Update<Model>,\n  ): Promise<void> {\n    return this.emit('partialUpdateMany', criteria, partialUpdate);\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    return this.emit('deleteByKey', key);\n  }\n\n  deleteOne(object: Model): Promise<void> {\n    return this.emit('deleteOne', object);\n  }\n\n  cursor(\n    criteria?: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<WebsocketCursor<Model, KeyPath>> {\n    return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n  }\n\n  findByKey(key: any): Promise<Model | undefined> {\n    return this.findOne({ [this.keyPath]: key });\n  }\n\n  findOne(\n    criteria: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<Model | undefined> {\n    return this.emit('findOne', criteria, sort);\n  }\n\n  emit(type: string, ...args: Array<any>) {\n    logger.debug('emit', { type, args });\n    if (this.connection.isDisconnected()) {\n      throw new Error('Websocket is not connected');\n    }\n\n    return this.connection\n      .emit('rest', {\n        type,\n        restName: this.restName,\n        json: encode(args),\n      })\n      .then((result) => result && decode(result));\n  }\n}\n"],"names":["WebsocketCursor","AbstractCursor","constructor","store","options","_idCursor","_result","limit","newLimit","Error","Promise","resolve","_create","connection","emit","then","idCursor","type","args","id","advance","count","next","result","key","_store","keyPath","applyLimit","close","closedPromise","undefined","toArray","logger","Logger","Query","AbstractQuery","fetch","onFulfilled","_subscribe","callback","_includeInitial","eventName","restName","listener","err","decodedResult","decode","debug","on","_stopEmitSubscribe","promise","emitSubscribe","stopEmitSubscribe","info","catch","off","stop","cancel","cb","WebsocketStore","AbstractStore","websocket","createQuery","registerOnConnect","isConnected","insertOne","object","replaceOne","upsertOne","partialUpdateByKey","partialUpdate","partialUpdateOne","partialUpdateMany","criteria","deleteByKey","deleteOne","cursor","sort","findByKey","findOne","isDisconnected","json","encode"],"mappings":"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"}