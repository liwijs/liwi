{"version":3,"file":"index-browser.es.js","sources":["../src/WebsocketCursor.js","../src/Query.js","../src/WebsocketStore.js"],"sourcesContent":["import { AbstractCursor, type ResultType } from 'liwi-store';\nimport WebsocketStore from './WebsocketStore';\n\nexport default class WebsocketCursor extends AbstractCursor<WebsocketStore> {\n  _idCursor: ?number;\n  _options: ?Object;\n  _result: ?Object;\n\n  constructor(store: WebsocketStore, options) {\n    super(store);\n    this._options = options;\n  }\n\n  /* options */\n\n  limit(newLimit: number): Promise<this> {\n    if (this._idCursor) throw new Error('Cursor already created');\n    this._options.limit = newLimit;\n    return Promise.resolve(this);\n  }\n\n  /* results */\n\n  _create() {\n    if (this._idCursor) throw new Error('Cursor already created');\n    return this.store.connection.emit('createCursor', this._options).then(idCursor => {\n      if (!idCursor) return;\n      this._idCursor = idCursor;\n    });\n  }\n\n  emit(type, ...args): Promise<any> {\n    if (!this._idCursor) {\n      return this._create().then(() => this.emit(type, ...args));\n    }\n\n    return this.store.emit('cursor', { type, id: this._idCursor }, args);\n  }\n\n  advance(count: number) {\n    this.emit('advance', count);\n    return this;\n  }\n\n  next(): Promise<?any> {\n    return this.emit('next').then(result => {\n      this._result = result;\n      this.key = result && result[this._store.keyPath];\n      return this.key;\n    });\n  }\n\n  result(): Promise<?ResultType> {\n    return Promise.resolve(this._result);\n  }\n\n  count(applyLimit: boolean = false) {\n    return this.emit('count', applyLimit);\n  }\n\n  close(): Promise<void> {\n    if (!this._store) return Promise.resolve();\n\n    const closedPromise = this._idCursor ? this.emit('close') : Promise.resolve();\n    this._idCursor = null;\n    this._options = null;\n    this._store = undefined;\n    this._result = undefined;\n    return closedPromise;\n  }\n\n  toArray(): Promise<Array<Array<ResultType>>> {\n    return this.store.emit('cursor toArray', this._options).then(result => {\n      this.close();\n      return result;\n    });\n  }\n}\n","import Logger from 'nightingale-logger';\nimport { decode } from 'extended-json';\nimport { AbstractQuery } from 'liwi-store';\nimport WebsocketStore from './WebsocketStore';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nconst logger = new Logger('liwi:websocket-client:query');\n\nexport default class Query extends AbstractQuery<WebsocketStore> {\n  constructor(store: WebsocketStore, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(callback: ?Function): Promise<any> {\n    return this.store.emit('fetch', this.key).then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    const eventName = `subscribe:${this.store.restName}.${this.key}`;\n    const listener = (err, result) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n    this.store.connection.on(eventName, listener);\n\n    let _stopEmitSubscribe;\n    let promise = this.store\n      .emitSubscribe(_includeInitial ? 'fetchAndSubscribe' : 'subscribe', this.key, eventName, args)\n      .then(stopEmitSubscribe => {\n        _stopEmitSubscribe = stopEmitSubscribe;\n        logger.info('subscribed');\n      })\n      .catch(err => {\n        this.store.connection.off(eventName, listener);\n        throw err;\n      });\n\n    const stop = () => {\n      if (!promise) return;\n      _stopEmitSubscribe();\n      promise.then(() => {\n        promise = null;\n        this.store.connection.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: cb => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n","import Logger from 'nightingale-logger/src';\nimport { encode, decode } from 'extended-json';\nimport { AbstractStore } from 'liwi-store';\nimport WebsocketCursor from './WebsocketCursor';\nimport Query from './Query';\n\nconst logger = new Logger('liwi:websocket-client');\n\ntype WebsocketConnectionType = {\n  emit: Function,\n  isConnected: Function,\n};\n\nexport default class WebsocketStore<ModelType> extends AbstractStore<WebsocketConnectionType> {\n  keyPath = 'id';\n\n  constructor(websocket: WebsocketConnectionType, restName: string) {\n    super(websocket);\n\n    if (!restName) {\n      throw new Error(`Invalid restName: \"${restName}\"`);\n    }\n\n    this.restName = restName;\n  }\n\n  createQuery(key: string) {\n    logger.debug('createQuery', { key });\n    return new Query(this, key);\n  }\n\n  emit(type, ...args) {\n    logger.debug('emit', { type, args });\n    if (this.connection.isDisconnected()) {\n      throw new Error('Websocket is not connected');\n    }\n\n    return this.connection\n      .emit('rest', {\n        type,\n        restName: this.restName,\n        json: encode(args),\n      })\n      .then(result => result && decode(result));\n  }\n\n  emitSubscribe(type, ...args) {\n    const emit = () => this.emit(type, ...args);\n    const registerOnConnect = () => {\n      this.connection.on('connect', emit);\n      return () => this.connection.off('connect', emit);\n    };\n\n    if (this.connection.isConnected()) {\n      return emit().then(registerOnConnect);\n    }\n\n    return Promise.resolve(registerOnConnect());\n  }\n\n  insertOne(object: ModelType): Promise<ModelType> {\n    return this.emit('insertOne', object);\n  }\n\n  updateOne(object: ModelType): Promise<ModelType> {\n    return this.emit('updateOne', object);\n  }\n\n  updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>> {\n    return this.emit('updateSeveral', objects);\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Object): Promise<ModelType> {\n    return this.emit('partialUpdateByKey', key, partialUpdate);\n  }\n\n  partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType> {\n    return this.emit('partialUpdateOne', object, partialUpdate);\n  }\n\n  partialUpdateMany(criteria, partialUpdate: Object): Promise<void> {\n    return this.emit('partialUpdateMany', criteria, partialUpdate);\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    return this.emit('deleteByKey', key);\n  }\n\n  deleteOne(object: ModelType): Promise<void> {\n    return this.emit('deleteOne', object);\n  }\n\n  cursor(criteria: ?Object, sort: ?Object): Promise<WebsocketCursor<ModelType>> {\n    return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n  }\n\n  findByKey(key: any) {\n    return this.findOne({ id: key });\n  }\n\n  findOne(criteria: Object, sort: ?Object): Promise<Object> {\n    return this.emit('findOne', criteria, sort);\n  }\n}\n"],"names":["WebsocketCursor","store","options","_options","newLimit","_idCursor","Error","limit","Promise","resolve","connection","emit","then","idCursor","type","args","_create","id","count","_result","result","key","_store","keyPath","applyLimit","closedPromise","undefined","close","AbstractCursor","logger","Logger","Query","callback","_includeInitial","eventName","restName","listener","err","decodedResult","decode","on","_stopEmitSubscribe","promise","emitSubscribe","stopEmitSubscribe","info","catch","off","stop","cb","AbstractQuery","WebsocketStore","websocket","debug","isDisconnected","encode","registerOnConnect","isConnected","object","objects","partialUpdate","criteria","sort","findOne","AbstractStore"],"mappings":"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"}