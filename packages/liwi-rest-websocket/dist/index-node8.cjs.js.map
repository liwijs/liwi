{"version":3,"file":"index-node8.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { RestService } from 'liwi-rest';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user: any;\n  }\n}\n\nexport default function init(io: Server, restService: RestService) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'rest',\n      (\n        {\n          type,\n          restName,\n          json,\n        }: { json: string; restName: string; type: string },\n        callback: Callback,\n      ) => {\n        try {\n          const args = decode(json);\n          if (!Array.isArray(args)) {\n            logger.debug('args', { args });\n\n            if (callback) {\n              throw new Error('Invalid args');\n            }\n          }\n\n          const restResource = restService.get(restName);\n\n          logger.info('rest', { type, restName, args });\n          switch (type) {\n            case 'cursor toArray': {\n              const [options] = args as Array<any>;\n              return restService\n                .createCursor(restResource, socket.user, options)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n            }\n\n            case 'insertOne':\n            case 'replaceOne':\n            case 'replaceSeveral':\n            case 'upsertOneWithInfo':\n            case 'partialUpdateByKey':\n            case 'partialUpdateOne':\n            case 'partialUpdateMany':\n            case 'deleteByKey':\n            case 'deleteMany':\n            case 'findOne':\n              try {\n                if (!PRODUCTION && !restResource[type]) {\n                  throw new Error(`rest: ${restName}.${type} is not available`);\n                }\n\n                // eslint-disable-next-line prettier/prettier\n                return restResource[type](socket.user, ...args)\n                  .then((result: any) => callback(null, encode(result)))\n                  .catch((err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  });\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const [key, eventName, otherArgs = []] = args;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = restResource.queries[key]; // todo pass connected user\n                if (!query) {\n                  throw new Error(\n                    `rest: ${restName}.${type}.${key} is not available`,\n                  );\n                }\n\n                if (type === 'fetch') {\n                  return query[type](\n                    (result: any) => callback(null, result && encode(result)),\n                    ...otherArgs,\n                  ).catch((err: any) => {\n                    logger.error(type, { err });\n                    callback(err.message || err);\n                  });\n                } else {\n                  const watcher = query[type]((err: Error, result: any) => {\n                    if (err) {\n                      logger.error(type, { err });\n                    }\n\n                    socket.emit(eventName, err, result && encode(result));\n                  });\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","restService","on","socket","openWatchers","Set","forEach","watcher","stop","type","restName","json","callback","args","decode","Array","isArray","debug","Error","restResource","get","info","options","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","result","key","eventName","otherArgs","startsWith","query","queries","emit","add","warn"],"mappings":"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"}