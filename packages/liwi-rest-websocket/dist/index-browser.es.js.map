{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { RestService } from 'liwi-rest';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user: any;\n  }\n}\n\nexport default function init(io: Server, restService: RestService) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'rest',\n      (\n        {\n          type,\n          restName,\n          json,\n        }: { json: string; restName: string; type: string },\n        callback: Callback,\n      ) => {\n        try {\n          const args = decode(json);\n          if (!Array.isArray(args)) {\n            logger.debug('args', { args });\n\n            if (callback) {\n              throw new Error('Invalid args');\n            }\n          }\n\n          const restResource = restService.get(restName);\n\n          logger.info('rest', { type, restName, args });\n          switch (type) {\n            case 'cursor toArray': {\n              const [options] = args as Array<any>;\n              return restService\n                .createCursor(restResource, socket.user, options)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n            }\n\n            case 'insertOne':\n            case 'replaceOne':\n            case 'replaceSeveral':\n            case 'upsertOneWithInfo':\n            case 'partialUpdateByKey':\n            case 'partialUpdateOne':\n            case 'partialUpdateMany':\n            case 'deleteByKey':\n            case 'deleteMany':\n            case 'findOne':\n              try {\n                if (!PRODUCTION && !restResource[type]) {\n                  throw new Error(`rest: ${restName}.${type} is not available`);\n                }\n\n                // eslint-disable-next-line prettier/prettier\n                return restResource[type](socket.user, ...args)\n                  .then((result: any) => callback(null, encode(result)))\n                  .catch((err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  });\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const [key, eventName, otherArgs = []] = args;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = restResource.queries[key]; // todo pass connected user\n                if (!query) {\n                  throw new Error(\n                    `rest: ${restName}.${type}.${key} is not available`,\n                  );\n                }\n\n                if (type === 'fetch') {\n                  return query[type](\n                    (result: any) => callback(null, result && encode(result)),\n                    ...otherArgs,\n                  ).catch((err: any) => {\n                    logger.error(type, { err });\n                    callback(err.message || err);\n                  });\n                } else {\n                  const watcher = query[type]((err: Error, result: any) => {\n                    if (err) {\n                      logger.error(type, { err });\n                    }\n\n                    socket.emit(eventName, err, result && encode(result));\n                  });\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","restService","on","socket","openWatchers","Set","forEach","watcher","stop","callback","type","restName","json","options","key","eventName","otherArgs","args","decode","Array","isArray","debug","Error","restResource","get","info","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","result","startsWith","query","queries","emit","add","warn"],"mappings":"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"}