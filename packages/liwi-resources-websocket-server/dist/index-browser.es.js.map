{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["import type http from \"node:http\";\nimport type net from \"node:net\";\nimport { decode, encode } from \"extended-json\";\nimport type { ExtendedJsonValue } from \"extended-json\";\nimport type {\n  AckError,\n  ResourcesServerService,\n  SubscriptionCallback,\n  ToClientMessage,\n  ToServerMessage,\n} from \"liwi-resources-server\";\nimport {\n  ResourcesServerError,\n  createMessageHandler,\n} from \"liwi-resources-server\";\nimport { Logger } from \"nightingale-logger\";\nimport type { WebSocket } from \"ws\";\nimport { WebSocketServer } from \"ws\";\n\ntype GetAuthenticatedUser<AuthenticatedUser> = (\n  request: http.IncomingMessage,\n) => AuthenticatedUser | Promise<AuthenticatedUser | null> | null;\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport interface ResourcesWebsocketServer {\n  wss: WebSocketServer;\n  close: () => void;\n}\n\nconst logger = new Logger(\"liwi:resources-websocket-server\");\n\nexport const createWsServer = <AuthenticatedUser>(\n  server: http.Server,\n  path: string,\n  resourcesServerService: ResourcesServerService,\n  getAuthenticatedUser: GetAuthenticatedUser<AuthenticatedUser>,\n  // eslint-disable-next-line @typescript-eslint/max-params\n): ResourcesWebsocketServer => {\n  const wss = new WebSocketServer({ noServer: true });\n\n  wss.on(\n    \"connection\",\n    (ws: ExtendedWebSocket, authenticatedUser: AuthenticatedUser | null) => {\n      ws.isAlive = true;\n\n      const sendMessage = (\n        type: ToClientMessage[0],\n        id: ToClientMessage[1],\n        error: ToClientMessage[2],\n        result: ToClientMessage[3],\n        // eslint-disable-next-line @typescript-eslint/max-params\n      ): void => {\n        if (!id) throw new Error(\"Invalid id\");\n        logger.debug(\"sendMessage\", { type, id, error, result });\n        ws.send(encode([type, id, error, result]));\n      };\n\n      const createSafeError = (error: Error): AckError => {\n        if (error instanceof ResourcesServerError) {\n          return { code: error.code, message: error.message };\n        }\n\n        logger.error(error);\n\n        return {\n          code: \"INTERNAL_SERVER_ERROR\",\n          message: \"Internal Server Error\",\n        };\n      };\n\n      const sendAck = (\n        id: number,\n        error: Error | null,\n        result?: ExtendedJsonValue,\n      ): void => {\n        sendMessage(\"ack\", id, error && createSafeError(error), result);\n      };\n\n      const sendSubscriptionMessage: SubscriptionCallback = (\n        subscriptionId: number,\n        error: Error | null,\n        result: ExtendedJsonValue,\n      ): void => {\n        sendMessage(\n          \"subscription\",\n          subscriptionId,\n          error && createSafeError(error),\n          result,\n        );\n      };\n\n      const { messageHandler, close } = createMessageHandler(\n        resourcesServerService,\n        authenticatedUser,\n        true,\n      );\n\n      const handleDecodedMessage = (\n        message: ToServerMessage,\n      ): Promise<void> => {\n        if (message.id == null) {\n          return messageHandler(message, sendSubscriptionMessage).then(\n            () => {},\n          );\n        } else {\n          return messageHandler(message, sendSubscriptionMessage)\n            .then((result) => {\n              sendAck(message.id, null, result as ExtendedJsonValue);\n            })\n            .catch((error: unknown) => {\n              sendAck(message.id, error as Error);\n            });\n        }\n      };\n\n      ws.on(\"pong\", () => {\n        ws.isAlive = true;\n      });\n\n      ws.on(\"close\", (code, data) => {\n        const reason = data.toString();\n        logger.debug(\"closed\", { code, reason });\n        close();\n      });\n\n      ws.on(\"error\", (error) => {\n        logger.error(\"ws error\", { error });\n      });\n\n      ws.on(\"message\", (data, isBinary): void => {\n        if (isBinary) return;\n\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        const message = data.toString();\n\n        if (message === \"close\") return;\n\n        if (typeof message !== \"string\") {\n          logger.warn(\"got non string message\");\n          return;\n        }\n\n        const decoded =\n          decode<\n            [\n              ToServerMessage[\"type\"],\n              ToServerMessage[\"id\"],\n              ToServerMessage[\"payload\"],\n            ]\n          >(message);\n        try {\n          const [type, id, payload] = decoded;\n          logger.debug(\"received\", { type, id, payload });\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handleDecodedMessage({ type, id, payload } as ToServerMessage);\n        } catch {\n          logger.notice(\"invalid message\", { decoded });\n        }\n      });\n\n      ws.send(\"connection-ack\");\n    },\n  );\n\n  // https://www.npmjs.com/package/ws#how-to-detect-and-close-broken-connections\n  const interval = setInterval(() => {\n    wss.clients.forEach((ws: WebSocket) => {\n      const extWs = ws as ExtendedWebSocket;\n\n      if (!extWs.isAlive) {\n        ws.terminate();\n        return;\n      }\n\n      extWs.isAlive = false;\n      ws.ping(null, undefined);\n    });\n  }, 60 * 1000);\n\n  const handleUpgrade = (\n    request: http.IncomingMessage,\n    socket: net.Socket,\n    upgradeHead: Buffer,\n  ): void => {\n    if (request.url !== path) return;\n\n    const authenticatedUserPromise: Promise<AuthenticatedUser | null> =\n      Promise.resolve(getAuthenticatedUser(request));\n    wss.handleUpgrade(request, socket, upgradeHead, (ws) => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      authenticatedUserPromise\n        .catch((error: unknown) => {\n          logger.warn(\n            \"getAuthenticatedUser threw an error, return null instead.\",\n            { error },\n          );\n          return null;\n        })\n        .then((authenticatedUser) => {\n          wss.emit(\"connection\", ws, authenticatedUser);\n        });\n    });\n  };\n\n  server.on(\"upgrade\", handleUpgrade);\n\n  return {\n    wss,\n    close(): void {\n      wss.close();\n      for (const ws of wss.clients) {\n        ws.terminate();\n      }\n      server.removeListener(\"upgrade\", handleUpgrade);\n      clearInterval(interval);\n    },\n  };\n};\n"],"names":[],"mappings":";;;;;AAgCA,MAAM,MAAA,GAAS,IAAI,MAAA,CAAO,iCAAiC,CAAA;AAEpD,MAAM,cAAA,GAAiB,CAC5B,MAAA,EACA,IAAA,EACA,wBACA,oBAAA,KAE6B;AAC7B,EAAA,MAAM,MAAM,IAAI,eAAA,CAAgB,EAAE,QAAA,EAAU,MAAM,CAAA;AAElD,EAAA,GAAA,CAAI,EAAA;AAAA,IACF,YAAA;AAAA,IACA,CAAC,IAAuB,iBAAA,KAAgD;AACtE,MAAA,EAAA,CAAG,OAAA,GAAU,IAAA;AAEb,MAAA,MAAM,WAAA,GAAc,CAClB,IAAA,EACA,EAAA,EACA,OACA,MAAA,KAES;AACT,QAAA,IAAI,CAAC,EAAA,EAAI,MAAM,IAAI,MAAM,YAAY,CAAA;AACrC,QAAA,MAAA,CAAO,MAAM,aAAA,EAAe,EAAE,MAAM,EAAA,EAAI,KAAA,EAAO,QAAQ,CAAA;AACvD,QAAA,EAAA,CAAG,IAAA,CAAK,OAAO,CAAC,IAAA,EAAM,IAAI,KAAA,EAAO,MAAM,CAAC,CAAC,CAAA;AAAA,OAC3C;AAEA,MAAA,MAAM,eAAA,GAAkB,CAAC,KAAA,KAA2B;AAClD,QAAA,IAAI,iBAAiB,oBAAA,EAAsB;AACzC,UAAA,OAAO,EAAE,IAAA,EAAM,KAAA,CAAM,IAAA,EAAM,OAAA,EAAS,MAAM,OAAA,EAAQ;AAAA;AAGpD,QAAA,MAAA,CAAO,MAAM,KAAK,CAAA;AAElB,QAAA,OAAO;AAAA,UACL,IAAA,EAAM,uBAAA;AAAA,UACN,OAAA,EAAS;AAAA,SACX;AAAA,OACF;AAEA,MAAA,MAAM,OAAA,GAAU,CACd,EAAA,EACA,KAAA,EACA,MAAA,KACS;AACT,QAAA,WAAA,CAAY,OAAO,EAAA,EAAI,KAAA,IAAS,eAAA,CAAgB,KAAK,GAAG,MAAM,CAAA;AAAA,OAChE;AAEA,MAAA,MAAM,uBAAA,GAAgD,CACpD,cAAA,EACA,KAAA,EACA,MAAA,KACS;AACT,QAAA,WAAA;AAAA,UACE,cAAA;AAAA,UACA,cAAA;AAAA,UACA,KAAA,IAAS,gBAAgB,KAAK,CAAA;AAAA,UAC9B;AAAA,SACF;AAAA,OACF;AAEA,MAAA,MAAM,EAAE,cAAA,EAAgB,KAAA,EAAM,GAAI,oBAAA;AAAA,QAChC,sBAAA;AAAA,QACA,iBAAA;AAAA,QACA;AAAA,OACF;AAEA,MAAA,MAAM,oBAAA,GAAuB,CAC3B,OAAA,KACkB;AAClB,QAAA,IAAI,OAAA,CAAQ,MAAM,IAAA,EAAM;AACtB,UAAA,OAAO,cAAA,CAAe,OAAA,EAAS,uBAAuB,CAAA,CAAE,IAAA;AAAA,YACtD,MAAM;AAAA;AAAC,WACT;AAAA,SACF,MAAO;AACL,UAAA,OAAO,eAAe,OAAA,EAAS,uBAAuB,CAAA,CACnD,IAAA,CAAK,CAAC,MAAA,KAAW;AAChB,YAAA,OAAA,CAAQ,OAAA,CAAQ,EAAA,EAAI,IAAA,EAAM,MAA2B,CAAA;AAAA,WACtD,CAAA,CACA,KAAA,CAAM,CAAC,KAAA,KAAmB;AACzB,YAAA,OAAA,CAAQ,OAAA,CAAQ,IAAI,KAAc,CAAA;AAAA,WACnC,CAAA;AAAA;AACL,OACF;AAEA,MAAA,EAAA,CAAG,EAAA,CAAG,QAAQ,MAAM;AAClB,QAAA,EAAA,CAAG,OAAA,GAAU,IAAA;AAAA,OACd,CAAA;AAED,MAAA,EAAA,CAAG,EAAA,CAAG,OAAA,EAAS,CAAC,IAAA,EAAM,IAAA,KAAS;AAC7B,QAAA,MAAM,MAAA,GAAS,KAAK,QAAA,EAAS;AAC7B,QAAA,MAAA,CAAO,KAAA,CAAM,QAAA,EAAU,EAAE,IAAA,EAAM,QAAQ,CAAA;AACvC,QAAA,KAAA,EAAM;AAAA,OACP,CAAA;AAED,MAAA,EAAA,CAAG,EAAA,CAAG,OAAA,EAAS,CAAC,KAAA,KAAU;AACxB,QAAA,MAAA,CAAO,KAAA,CAAM,UAAA,EAAY,EAAE,KAAA,EAAO,CAAA;AAAA,OACnC,CAAA;AAED,MAAA,EAAA,CAAG,EAAA,CAAG,SAAA,EAAW,CAAC,IAAA,EAAM,QAAA,KAAmB;AACzC,QAAA,IAAI,QAAA,EAAU;AAGd,QAAA,MAAM,OAAA,GAAU,KAAK,QAAA,EAAS;AAE9B,QAAA,IAAI,YAAY,OAAA,EAAS;AAEzB,QAAA,IAAI,OAAO,YAAY,QAAA,EAAU;AAC/B,UAAA,MAAA,CAAO,KAAK,wBAAwB,CAAA;AACpC,UAAA;AAAA;AAGF,QAAA,MAAM,OAAA,GACJ,OAME,OAAO,CAAA;AACX,QAAA,IAAI;AACF,UAAA,MAAM,CAAC,IAAA,EAAM,EAAA,EAAI,OAAO,CAAA,GAAI,OAAA;AAC5B,UAAA,MAAA,CAAO,MAAM,UAAA,EAAY,EAAE,IAAA,EAAM,EAAA,EAAI,SAAS,CAAA;AAE9C,UAAA,oBAAA,CAAqB,EAAE,IAAA,EAAM,EAAA,EAAI,OAAA,EAA4B,CAAA;AAAA,SAC/D,CAAA,MAAQ;AACN,UAAA,MAAA,CAAO,MAAA,CAAO,iBAAA,EAAmB,EAAE,OAAA,EAAS,CAAA;AAAA;AAC9C,OACD,CAAA;AAED,MAAA,EAAA,CAAG,KAAK,gBAAgB,CAAA;AAAA;AAC1B,GACF;AAGA,EAAA,MAAM,QAAA,GAAW,YAAY,MAAM;AACjC,IAAA,GAAA,CAAI,OAAA,CAAQ,OAAA,CAAQ,CAAC,EAAA,KAAkB;AACrC,MAAA,MAAM,KAAA,GAAQ,EAAA;AAEd,MAAA,IAAI,CAAC,MAAM,OAAA,EAAS;AAClB,QAAA,EAAA,CAAG,SAAA,EAAU;AACb,QAAA;AAAA;AAGF,MAAA,KAAA,CAAM,OAAA,GAAU,KAAA;AAChB,MAAA,EAAA,CAAG,IAAA,CAAK,MAAM,MAAS,CAAA;AAAA,KACxB,CAAA;AAAA,GACH,EAAG,KAAK,GAAI,CAAA;AAEZ,EAAA,MAAM,aAAA,GAAgB,CACpB,OAAA,EACA,MAAA,EACA,WAAA,KACS;AACT,IAAA,IAAI,OAAA,CAAQ,QAAQ,IAAA,EAAM;AAE1B,IAAA,MAAM,wBAAA,GACJ,OAAA,CAAQ,OAAA,CAAQ,oBAAA,CAAqB,OAAO,CAAC,CAAA;AAC/C,IAAA,GAAA,CAAI,aAAA,CAAc,OAAA,EAAS,MAAA,EAAQ,WAAA,EAAa,CAAC,EAAA,KAAO;AAEtD,MAAA,wBAAA,CACG,KAAA,CAAM,CAAC,KAAA,KAAmB;AACzB,QAAA,MAAA,CAAO,IAAA;AAAA,UACL,2DAAA;AAAA,UACA,EAAE,KAAA;AAAM,SACV;AACA,QAAA,OAAO,IAAA;AAAA,OACR,CAAA,CACA,IAAA,CAAK,CAAC,iBAAA,KAAsB;AAC3B,QAAA,GAAA,CAAI,IAAA,CAAK,YAAA,EAAc,EAAA,EAAI,iBAAiB,CAAA;AAAA,OAC7C,CAAA;AAAA,KACJ,CAAA;AAAA,GACH;AAEA,EAAA,MAAA,CAAO,EAAA,CAAG,WAAW,aAAa,CAAA;AAElC,EAAA,OAAO;AAAA,IACL,GAAA;AAAA,IACA,KAAA,GAAc;AACZ,MAAA,GAAA,CAAI,KAAA,EAAM;AACV,MAAA,KAAA,MAAW,EAAA,IAAM,IAAI,OAAA,EAAS;AAC5B,QAAA,EAAA,CAAG,SAAA,EAAU;AAAA;AAEf,MAAA,MAAA,CAAO,cAAA,CAAe,WAAW,aAAa,CAAA;AAC9C,MAAA,aAAA,CAAc,QAAQ,CAAA;AAAA;AACxB,GACF;AACF;;;;"}