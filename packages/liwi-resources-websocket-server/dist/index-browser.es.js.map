{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { ResourcesServerService } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\nexport default function init(\n  io: Server,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Set","forEach","watcher","stop","callback","type","resourceName","json","key","params","eventName","value","decode","resource","getCursorResource","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","startsWith","Error","query","queries","fetch","result","emit","add","operation","operations","warn"],"mappings":"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"}