{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type http from 'http';\nimport type net from 'net';\nimport { encode, decode } from 'extended-json';\nimport type { ExtendedJsonValue } from 'extended-json/src/ExtendedJsonValue';\nimport type {\n  AckError,\n  ToServerMessage,\n  ToClientMessage,\n  ResourcesServerService,\n  SubscriptionCallback,\n} from 'liwi-resources-server';\nimport {\n  ResourcesServerError,\n  createMessageHandler,\n} from 'liwi-resources-server';\nimport { Logger } from 'nightingale-logger';\nimport type { WebSocket } from 'ws';\nimport { WebSocketServer } from 'ws';\n\ntype GetAuthenticatedUser<AuthenticatedUser> = (\n  request: http.IncomingMessage,\n) => AuthenticatedUser | null | Promise<AuthenticatedUser | null>;\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport interface ResourcesWebsocketServer {\n  wss: WebSocketServer;\n  close: () => void;\n}\n\nconst logger = new Logger('liwi:resources-websocket-server');\n\nexport const createWsServer = <AuthenticatedUser>(\n  server: http.Server,\n  path: string,\n  resourcesServerService: ResourcesServerService,\n  getAuthenticatedUser: GetAuthenticatedUser<AuthenticatedUser>,\n): ResourcesWebsocketServer => {\n  const wss = new WebSocketServer({ noServer: true });\n\n  wss.on(\n    'connection',\n    (ws: ExtendedWebSocket, authenticatedUser: AuthenticatedUser | null) => {\n      ws.isAlive = true;\n\n      const sendMessage = (\n        type: ToClientMessage[0],\n        id: ToClientMessage[1],\n        error: ToClientMessage[2],\n        result: ToClientMessage[3],\n      ): void => {\n        if (!id) throw new Error('Invalid id');\n        logger.debug('sendMessage', { type, id, error, result });\n        ws.send(encode([type, id, error, result]));\n      };\n\n      const createSafeError = (error: Error): AckError => {\n        if (error instanceof ResourcesServerError) {\n          return { code: error.code, message: error.message };\n        }\n\n        logger.error(error);\n\n        return {\n          code: 'INTERNAL_SERVER_ERROR',\n          message: 'Internal Server Error',\n        };\n      };\n\n      const sendAck = (\n        id: number,\n        error: null | Error,\n        result?: ExtendedJsonValue,\n      ): void => {\n        sendMessage('ack', id, error && createSafeError(error), result);\n      };\n\n      const sendSubscriptionMessage: SubscriptionCallback = (\n        subscriptionId: number,\n        error: null | Error,\n        result: ExtendedJsonValue,\n      ): void => {\n        sendMessage(\n          'subscription',\n          subscriptionId,\n          error && createSafeError(error),\n          result,\n        );\n      };\n\n      const { messageHandler, close } = createMessageHandler(\n        resourcesServerService,\n        authenticatedUser,\n        true,\n      );\n\n      const handleDecodedMessage = (\n        message: ToServerMessage,\n      ): Promise<void> => {\n        if (message.id == null) {\n          return messageHandler(message, sendSubscriptionMessage).then(\n            () => {},\n          );\n        } else {\n          return messageHandler(message, sendSubscriptionMessage)\n            .then((result) => {\n              sendAck(message.id, null, result as ExtendedJsonValue);\n            })\n            .catch((err) => {\n              sendAck(message.id, err as Error);\n            });\n        }\n      };\n\n      ws.on('pong', () => {\n        ws.isAlive = true;\n      });\n\n      ws.on('close', (code, data) => {\n        const reason = data.toString();\n        logger.debug('closed', { code, reason });\n        close();\n      });\n\n      ws.on('error', (error) => {\n        logger.error('ws error', { error });\n      });\n\n      ws.on('message', (data, isBinary): void => {\n        if (isBinary) return;\n\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        const message = data.toString();\n\n        if (message === 'close') return;\n\n        if (typeof message !== 'string') {\n          logger.warn('got non string message');\n          return;\n        }\n\n        const decoded =\n          decode<\n            [\n              ToServerMessage['type'],\n              ToServerMessage['id'],\n              ToServerMessage['payload'],\n            ]\n          >(message);\n        try {\n          const [type, id, payload] = decoded;\n          logger.debug('received', { type, id, payload });\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handleDecodedMessage({ type, id, payload } as ToServerMessage);\n        } catch {\n          logger.notice('invalid message', { decoded });\n        }\n      });\n\n      ws.send('connection-ack');\n    },\n  );\n\n  // https://www.npmjs.com/package/ws#how-to-detect-and-close-broken-connections\n  const interval = setInterval(() => {\n    wss.clients.forEach((ws: WebSocket) => {\n      const extWs = ws as ExtendedWebSocket;\n\n      if (!extWs.isAlive) {\n        ws.terminate();\n        return;\n      }\n\n      extWs.isAlive = false;\n      ws.ping(null, undefined);\n    });\n  }, 60 * 1000);\n\n  const handleUpgrade = (\n    request: http.IncomingMessage,\n    socket: net.Socket,\n    upgradeHead: Buffer,\n  ): void => {\n    if (request.url !== path) return;\n\n    const authenticatedUserPromise: Promise<AuthenticatedUser | null> =\n      Promise.resolve(getAuthenticatedUser(request));\n    wss.handleUpgrade(request, socket, upgradeHead, (ws) => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      authenticatedUserPromise\n        .catch((err) => {\n          logger.warn(\n            'getAuthenticatedUser threw an error, return null instead.',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            { err },\n          );\n          return null;\n        })\n        .then((authenticatedUser) => {\n          wss.emit('connection', ws, authenticatedUser);\n        });\n    });\n  };\n\n  server.on('upgrade', handleUpgrade);\n\n  return {\n    wss,\n    close(): void {\n      wss.close();\n      for (const ws of wss.clients) {\n        ws.terminate();\n      }\n      server.removeListener('upgrade', handleUpgrade);\n      clearInterval(interval);\n    },\n  };\n};\n"],"names":["logger","Logger","createWsServer","server","path","resourcesServerService","getAuthenticatedUser","wss","WebSocketServer","noServer","on","ws","authenticatedUser","isAlive","sendMessage","type","id","error","result","Error","debug","send","encode","createSafeError","ResourcesServerError","code","message","sendAck","sendSubscriptionMessage","subscriptionId","createMessageHandler","messageHandler","close","handleDecodedMessage","then","err","data","reason","toString","isBinary","payload","warn","decoded","decode","notice","interval","setInterval","clients","forEach","extWs","terminate","ping","undefined","handleUpgrade","request","socket","upgradeHead","url","authenticatedUserPromise","Promise","resolve","emit","removeListener","clearInterval"],"mappings":"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"}