{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n      params,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user, params);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcherKey = `${resourceName}__${key}`;\n                  if (openWatchers.has(watcherKey)) {\n                    logger.warn(\n                      'Already have a watcher for this key. Cannot add a new one',\n                      { watcherKey, key },\n                    );\n                    callback(\n                      'Already have a watcher for this key. Cannot add a new one',\n                    );\n                    return;\n                  }\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  const subscribeHook =\n                    resource.subscribeHooks && resource.subscribeHooks[key];\n                  openWatchers.set(watcherKey, {\n                    watcher,\n                    subscribeHook,\n                    params: subscribeHook ? params : undefined,\n                  });\n                  if (subscribeHook) {\n                    subscribeHook.subscribed(socket.user, params);\n                  }\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'unsubscribe': {\n              const [key] = value;\n              const watcherKey = `${resourceName}__${key}`;\n              const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n              if (!watcherAndSubscribeHook) {\n                logger.warn('tried to unsubscribe non existing watcher', {\n                  key,\n                });\n                return callback(null);\n              }\n\n              openWatchers.delete(watcherKey);\n              unsubscribeWatcher(watcherAndSubscribeHook);\n              callback(null);\n              break;\n            }\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result && encode(result)),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","params","stop","unsubscribed","user","forEach","callback","type","resourceName","json","key","eventName","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","startsWith","Error","query","queries","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","undefined","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}