{"version":3,"file":"index-browser-dev.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n      params,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user, params);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      async (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): Promise<void> => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = await resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcherKey = `${resourceName}__${key}`;\n                  if (openWatchers.has(watcherKey)) {\n                    logger.warn(\n                      'Already have a watcher for this key. Cannot add a new one',\n                      { watcherKey, key },\n                    );\n                    callback(\n                      'Already have a watcher for this key. Cannot add a new one',\n                    );\n                    return;\n                  }\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  const subscribeHook =\n                    resource.subscribeHooks && resource.subscribeHooks[key];\n                  openWatchers.set(watcherKey, {\n                    watcher,\n                    subscribeHook,\n                    params: subscribeHook ? params : undefined,\n                  });\n                  if (subscribeHook) {\n                    subscribeHook.subscribed(socket.user, params);\n                  }\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'unsubscribe': {\n              const [key] = value;\n              const watcherKey = `${resourceName}__${key}`;\n              const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n              if (!watcherAndSubscribeHook) {\n                logger.warn('tried to unsubscribe non existing watcher', {\n                  key,\n                });\n                return callback(null);\n              }\n\n              openWatchers.delete(watcherKey);\n              unsubscribeWatcher(watcherAndSubscribeHook);\n              callback(null);\n              break;\n            }\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result && encode(result)),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","params","stop","unsubscribed","user","forEach","callback","type","resourceName","json","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","key","eventName","startsWith","Error","queries","query","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","undefined","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}