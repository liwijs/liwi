{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { ResourcesServerService } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\nexport default function init(\n  io: Server,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ) => {\n        try {\n          const value = json && decode(json);\n\n          const resource = resourcesService.get(resourceName);\n\n          logger.info('resource', { type, resourceName, value });\n          switch (type) {\n            case 'cursor toArray': {\n              return resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const [key, eventName, otherArgs] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const queryOptions = resource.queries[key];\n                // TODO resource.criteria(queryOptions.criteria) & co ?\n                if (!queryOptions) {\n                  throw new Error(\n                    `rest: ${resourceName}.${type}.${key} is not available`,\n                  );\n                }\n                const query = resource.store.createQuery(queryOptions); // todo pass connected user\n\n                if (type === 'fetch') {\n                  return query\n                    .fetch(\n                      (result: any) => callback(null, result && encode(result)),\n                      ...otherArgs,\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcher = query[type]((err: Error, result: any) => {\n                    if (err) {\n                      logger.error(type, { err });\n                    }\n\n                    socket.emit(eventName, err, result && encode(result));\n                  });\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'do': {\n              try {\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Set","forEach","watcher","stop","type","resourceName","json","callback","value","decode","resource","get","info","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","key","eventName","otherArgs","startsWith","Error","queryOptions","queries","query","store","createQuery","fetch","result","emit","add","params","operation","operations","warn"],"mappings":"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"}