{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n      params,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user, params);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        (async (): Promise<void> => {\n          try {\n            const value = json && decode(json);\n\n            switch (type) {\n              case 'cursor toArray': {\n                const resource = resourcesService.getCursorResource(\n                  resourceName,\n                );\n                resourcesService\n                  .createCursor(resource, socket.user, value)\n                  .then((cursor) => cursor.toArray())\n                  .then((results) => callback(null, encode(results)))\n                  .catch((err) => {\n                    logger.error(type, err);\n                    callback(err.message);\n                  });\n                break;\n              }\n\n              case 'fetch':\n              case 'subscribe':\n              case 'fetchAndSubscribe':\n                try {\n                  const resource = resourcesService.getServiceResource(\n                    resourceName,\n                  );\n                  logger.info('resource', { type, resourceName, value });\n\n                  const [key, params, eventName] = value;\n\n                  if (!key.startsWith('query')) {\n                    throw new Error('Invalid query key');\n                  }\n\n                  const query = await resource.queries[key](\n                    params,\n                    socket.user,\n                  );\n\n                  if (type === 'fetch') {\n                    query\n                      .fetch((result: any) =>\n                        callback(null, result && encode(result)),\n                      )\n                      .catch((err: any) => {\n                        logger.error(type, { err });\n                        callback(err.message || err);\n                      });\n                  } else {\n                    const watcherKey = `${resourceName}__${key}`;\n                    if (openWatchers.has(watcherKey)) {\n                      logger.warn(\n                        'Already have a watcher for this key. Cannot add a new one',\n                        { watcherKey, key },\n                      );\n                      callback(\n                        'Already have a watcher for this key. Cannot add a new one',\n                      );\n                      return;\n                    }\n                    const watcher = query[type](\n                      (err: Error | null, result: any) => {\n                        if (err) {\n                          logger.error(type, { err });\n                        }\n\n                        socket.emit(eventName, err, result && encode(result));\n                      },\n                    );\n\n                    watcher.then(\n                      () => callback(null),\n                      (err: Error) => {\n                        logger.error(type, { err });\n                        callback(err.message);\n                      },\n                    );\n\n                    const subscribeHook =\n                      resource.subscribeHooks && resource.subscribeHooks[key];\n                    openWatchers.set(watcherKey, {\n                      watcher,\n                      subscribeHook,\n                      params: subscribeHook ? params : undefined,\n                    });\n                    if (subscribeHook) {\n                      subscribeHook.subscribed(socket.user, params);\n                    }\n                  }\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n                break;\n\n              case 'unsubscribe': {\n                const [key] = value;\n                const watcherKey = `${resourceName}__${key}`;\n                const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n                if (!watcherAndSubscribeHook) {\n                  logger.warn('tried to unsubscribe non existing watcher', {\n                    key,\n                  });\n                  return callback(null);\n                }\n\n                openWatchers.delete(watcherKey);\n                unsubscribeWatcher(watcherAndSubscribeHook);\n                callback(null);\n                break;\n              }\n\n              case 'do': {\n                try {\n                  const resource = resourcesService.getServiceResource(\n                    resourceName,\n                  );\n                  logger.info('resource', { type, resourceName, value });\n\n                  const [key, params] = value;\n\n                  const operation = resource.operations[key];\n\n                  if (!operation) {\n                    throw new Error('Operation not found');\n                  }\n\n                  operation(params, socket.user).then(\n                    (result) => callback(null, result && encode(result)),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n                break;\n              }\n\n              default:\n                try {\n                  logger.warn('Unknown command', { type });\n                  callback(`rest: unknown command \"${type}\"`);\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n            }\n          } catch (err) {\n            logger.warn('rest error', { err });\n            callback(err.message || err);\n          }\n        })();\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","params","stop","unsubscribed","user","forEach","type","resourceName","json","callback","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","key","eventName","startsWith","Error","query","queries","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","undefined","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}