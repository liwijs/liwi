{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import type http from 'http';\nimport type net from 'net';\nimport { encode, decode } from 'extended-json';\nimport type {\n  AckError,\n  ToServerMessage,\n  ToClientMessage,\n  ResourcesServerService,\n  SubscriptionCallback,\n} from 'liwi-resources-server';\nimport {\n  ResourcesServerError,\n  createMessageHandler,\n} from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport WebSocket from 'ws';\n\nexport type WebsocketServer = WebSocket.Server;\n\ntype GetAuthenticatedUser<AuthenticatedUser> = (\n  request: http.IncomingMessage,\n) => AuthenticatedUser | null | Promise<AuthenticatedUser | null>;\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport interface ResourcesWebsocketServer {\n  wss: WebSocket.Server;\n  close: () => void;\n}\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\nexport const createWsServer = <AuthenticatedUser>(\n  server: http.Server,\n  path = '/ws',\n  resourcesServerService: ResourcesServerService,\n  getAuthenticatedUser: GetAuthenticatedUser<AuthenticatedUser>,\n): ResourcesWebsocketServer => {\n  const wss = new WebSocket.Server({ noServer: true });\n\n  wss.on(\n    'connection',\n    (ws: ExtendedWebSocket, authenticatedUser: AuthenticatedUser | null) => {\n      ws.isAlive = true;\n\n      const sendMessage = (\n        type: ToClientMessage[0],\n        id: ToClientMessage[1],\n        error: ToClientMessage[2],\n        result: ToClientMessage[3],\n      ): void => {\n        if (!id) throw new Error('Invalid id');\n        logger.debug('sendMessage', { type, id, error, result });\n        ws.send(encode([type, id, error, result]));\n      };\n\n      const createSafeError = (error: Error): AckError => {\n        if (error instanceof ResourcesServerError) {\n          return { code: error.code, message: error.message };\n        }\n        return {\n          code: 'INTERNAL_SERVER_ERROR',\n          message: 'Internal Server Error',\n        };\n      };\n\n      const sendAck = (id: number, error: null | Error, result?: any): void => {\n        sendMessage('ack', id, error && createSafeError(error), result);\n      };\n\n      const sendSubscriptionMessage: SubscriptionCallback = (\n        subscriptionId: number,\n        error: null | Error,\n        result: any,\n      ): void => {\n        sendMessage(\n          'subscription',\n          subscriptionId,\n          error && createSafeError(error),\n          result,\n        );\n      };\n\n      const { messageHandler, close } = createMessageHandler(\n        resourcesServerService,\n        authenticatedUser,\n        true,\n      );\n\n      const handleDecodedMessage = (\n        message: ToServerMessage,\n      ): Promise<void> => {\n        if (message.id == null) {\n          return messageHandler(\n            message,\n            sendSubscriptionMessage,\n          ).then(() => {});\n        } else {\n          return messageHandler(message, sendSubscriptionMessage)\n            .then((result) => sendAck(message.id, null, result))\n            .catch((err) => sendAck(message.id, err));\n        }\n      };\n\n      ws.on('pong', () => {\n        ws.isAlive = true;\n      });\n\n      ws.on('close', () => {\n        close();\n      });\n\n      ws.on('message', (message: string): void => {\n        if (message === 'close') return;\n\n        if (typeof message !== 'string') {\n          logger.warn('got non string message');\n          return;\n        }\n\n        const decoded = decode<\n          [\n            ToServerMessage['type'],\n            ToServerMessage['id'],\n            ToServerMessage['payload'],\n          ]\n        >(message);\n        try {\n          const [type, id, payload] = decoded;\n          logger.debug('received', { type, id, payload });\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handleDecodedMessage({ type, id, payload } as ToServerMessage);\n        } catch {\n          logger.notice('invalid message', { decoded });\n        }\n      });\n\n      ws.send('connection-ack');\n    },\n  );\n\n  // https://www.npmjs.com/package/ws#how-to-detect-and-close-broken-connections\n  const interval = setInterval(() => {\n    wss.clients.forEach((ws: WebSocket) => {\n      const extWs = ws as ExtendedWebSocket;\n\n      if (!extWs.isAlive) return ws.terminate();\n\n      extWs.isAlive = false;\n      ws.ping(null, undefined);\n    });\n  }, 60 * 1000);\n\n  const handleUpgrade = (\n    request: http.IncomingMessage,\n    socket: net.Socket,\n    upgradeHead: Buffer,\n  ): void => {\n    if (request.url !== path) return;\n\n    const authenticatedUserPromise: Promise<AuthenticatedUser | null> = Promise.resolve(\n      getAuthenticatedUser(request),\n    );\n    wss.handleUpgrade(request, socket, upgradeHead, (ws) => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      authenticatedUserPromise\n        .catch((err) => {\n          logger.warn(\n            'getAuthenticatedUser threw an error, return null instead.',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            { err },\n          );\n          return null;\n        })\n        .then((authenticatedUser) => {\n          wss.emit('connection', ws, authenticatedUser);\n        });\n    });\n  };\n\n  server.on('upgrade', handleUpgrade);\n\n  return {\n    wss,\n    close(): void {\n      wss.close();\n      server.removeListener('upgrade', handleUpgrade);\n      clearInterval(interval);\n    },\n  };\n};\n"],"names":["logger","Logger","createWsServer","server","path","resourcesServerService","getAuthenticatedUser","wss","WebSocket","Server","noServer","on","ws","authenticatedUser","isAlive","sendMessage","type","id","error","result","Error","debug","send","encode","createSafeError","ResourcesServerError","code","message","sendAck","sendSubscriptionMessage","subscriptionId","createMessageHandler","messageHandler","close","handleDecodedMessage","then","catch","err","warn","decoded","decode","payload","notice","interval","setInterval","clients","forEach","extWs","terminate","ping","undefined","handleUpgrade","request","socket","upgradeHead","url","authenticatedUserPromise","Promise","resolve","emit","removeListener","clearInterval"],"mappings":"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"}