{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcherKey = `${resourceName}__${key}`;\n                  if (openWatchers.has(watcherKey)) {\n                    logger.warn(\n                      'Already have a watcher for this key. Cannot add a new one',\n                      { watcherKey, key },\n                    );\n                    callback(\n                      'Already have a watcher for this key. Cannot add a new one',\n                    );\n                    return;\n                  }\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  const subscribeHook =\n                    resource.subscribeHooks && resource.subscribeHooks[key];\n                  openWatchers.set(watcherKey, { watcher, subscribeHook });\n                  if (subscribeHook) {\n                    subscribeHook.subscribed(socket.user);\n                  }\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'unsubscribe': {\n              const [key] = value;\n              const watcherKey = `${resourceName}__${key}`;\n              const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n              if (!watcherAndSubscribeHook) {\n                logger.warn('tried to unsubscribe non existing watcher', {\n                  key,\n                });\n                return;\n              }\n\n              openWatchers.delete(watcherKey);\n              unsubscribeWatcher(watcherAndSubscribeHook);\n              break;\n            }\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","stop","unsubscribed","user","forEach","callback","type","resourceName","json","key","params","eventName","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","startsWith","Error","query","queries","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}