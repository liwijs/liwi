{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n      params,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user, params);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        (async (): Promise<void> => {\n          try {\n            const value = json && decode(json);\n\n            switch (type) {\n              case 'cursor toArray': {\n                const resource = resourcesService.getCursorResource(\n                  resourceName,\n                );\n                resourcesService\n                  .createCursor(resource, socket.user, value)\n                  .then((cursor) => cursor.toArray())\n                  .then((results) => callback(null, encode(results)))\n                  .catch((err) => {\n                    logger.error(type, err);\n                    callback(err.message);\n                  });\n                break;\n              }\n\n              case 'fetch':\n              case 'subscribe':\n              case 'fetchAndSubscribe':\n                try {\n                  const resource = resourcesService.getServiceResource(\n                    resourceName,\n                  );\n                  logger.info('resource', { type, resourceName, value });\n\n                  const [key, params, eventName] = value;\n\n                  if (!key.startsWith('query')) {\n                    throw new Error('Invalid query key');\n                  }\n\n                  const query = await resource.queries[key](\n                    params,\n                    socket.user,\n                  );\n\n                  if (type === 'fetch') {\n                    query\n                      .fetch((result: any) =>\n                        callback(null, result && encode(result)),\n                      )\n                      .catch((err: any) => {\n                        logger.error(type, { err });\n                        callback(err.message || err);\n                      });\n                  } else {\n                    const watcherKey = `${resourceName}__${key}`;\n                    if (openWatchers.has(watcherKey)) {\n                      logger.warn(\n                        'Already have a watcher for this key. Cannot add a new one',\n                        { watcherKey, key },\n                      );\n                      callback(\n                        'Already have a watcher for this key. Cannot add a new one',\n                      );\n                      return;\n                    }\n                    const watcher = query[type](\n                      (err: Error | null, result: any) => {\n                        if (err) {\n                          logger.error(type, { err });\n                        }\n\n                        socket.emit(eventName, err, result && encode(result));\n                      },\n                    );\n\n                    watcher.then(\n                      () => callback(null),\n                      (err: Error) => {\n                        logger.error(type, { err });\n                        callback(err.message);\n                      },\n                    );\n\n                    const subscribeHook =\n                      resource.subscribeHooks && resource.subscribeHooks[key];\n                    openWatchers.set(watcherKey, {\n                      watcher,\n                      subscribeHook,\n                      params: subscribeHook ? params : undefined,\n                    });\n                    if (subscribeHook) {\n                      subscribeHook.subscribed(socket.user, params);\n                    }\n                  }\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n                break;\n\n              case 'unsubscribe': {\n                const [key] = value;\n                const watcherKey = `${resourceName}__${key}`;\n                const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n                if (!watcherAndSubscribeHook) {\n                  logger.warn('tried to unsubscribe non existing watcher', {\n                    key,\n                  });\n                  return callback(null);\n                }\n\n                openWatchers.delete(watcherKey);\n                unsubscribeWatcher(watcherAndSubscribeHook);\n                callback(null);\n                break;\n              }\n\n              case 'do': {\n                try {\n                  const resource = resourcesService.getServiceResource(\n                    resourceName,\n                  );\n                  logger.info('resource', { type, resourceName, value });\n\n                  const [key, params] = value;\n\n                  const operation = resource.operations[key];\n\n                  if (!operation) {\n                    throw new Error('Operation not found');\n                  }\n\n                  operation(params, socket.user).then(\n                    (result) => callback(null, result && encode(result)),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n                break;\n              }\n\n              default:\n                try {\n                  logger.warn('Unknown command', { type });\n                  callback(`rest: unknown command \"${type}\"`);\n                } catch (err) {\n                  logger.error(type, { err });\n                  callback(err.message || err);\n                }\n            }\n          } catch (err) {\n            logger.warn('rest error', { err });\n            callback(err.message || err);\n          }\n        })();\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","params","stop","unsubscribed","user","forEach","callback","type","resourceName","json","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","key","eventName","startsWith","Error","queries","query","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","undefined","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}