{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Namespace, Server, Socket } from 'socket.io';\nimport { ResourcesServerService, SubscribeHook } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\nimport { SubscribeResult } from 'liwi-store';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\ninterface WatcherAndSubscribeHook {\n  watcher: SubscribeResult<any>;\n  subscribeHook?: SubscribeHook<any>;\n}\n\nexport default function init(\n  io: Server | Namespace,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Map<string, WatcherAndSubscribeHook>();\n\n    const unsubscribeWatcher = ({\n      watcher,\n      subscribeHook,\n    }: WatcherAndSubscribeHook) => {\n      watcher.stop();\n      if (subscribeHook) {\n        subscribeHook.unsubscribed(socket.user);\n      }\n    };\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach(unsubscribeWatcher);\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcherKey = `${resourceName}__${key}`;\n                  if (openWatchers.has(watcherKey)) {\n                    logger.warn(\n                      'Already have a watcher for this key. Cannot add a new one',\n                      { watcherKey, key },\n                    );\n                    callback(\n                      'Already have a watcher for this key. Cannot add a new one',\n                    );\n                    return;\n                  }\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  const subscribeHook =\n                    resource.subscribeHooks && resource.subscribeHooks[key];\n                  openWatchers.set(watcherKey, { watcher, subscribeHook });\n                  if (subscribeHook) {\n                    subscribeHook.subscribed(socket.user);\n                  }\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'unsubscribe': {\n              const [key] = value;\n              const watcherKey = `${resourceName}__${key}`;\n              const watcherAndSubscribeHook = openWatchers.get(watcherKey);\n              if (!watcherAndSubscribeHook) {\n                logger.warn('tried to unsubscribe non existing watcher', {\n                  key,\n                });\n                return;\n              }\n\n              openWatchers.delete(watcherKey);\n              unsubscribeWatcher(watcherAndSubscribeHook);\n              break;\n            }\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Map","unsubscribeWatcher","watcher","subscribeHook","stop","unsubscribed","user","forEach","type","resourceName","json","callback","value","decode","resource","getCursorResource","createCursor","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","key","params","eventName","startsWith","Error","query","queries","fetch","result","watcherKey","has","warn","emit","subscribeHooks","set","subscribed","watcherAndSubscribeHook","get","delete","operation","operations"],"mappings":"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"}