{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { ResourcesServerService } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\nexport default function init(\n  io: Server,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ): void => {\n        try {\n          const value = json && decode(json);\n\n          switch (type) {\n            case 'cursor toArray': {\n              const resource = resourcesService.getCursorResource(resourceName);\n              resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n              break;\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params, eventName] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const query = resource.queries[key](params, socket.user);\n\n                if (type === 'fetch') {\n                  query\n                    .fetch((result: any) =>\n                      callback(null, result && encode(result)),\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcher = query[type](\n                    (err: Error | null, result: any) => {\n                      if (err) {\n                        logger.error(type, { err });\n                      }\n\n                      socket.emit(eventName, err, result && encode(result));\n                    },\n                  );\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'do': {\n              try {\n                const resource = resourcesService.getServiceResource(\n                  resourceName,\n                );\n                logger.info('resource', { type, resourceName, value });\n\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Set","forEach","watcher","stop","type","resourceName","json","callback","value","decode","resource","getCursorResource","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","getServiceResource","info","key","params","eventName","startsWith","Error","query","queries","fetch","result","emit","add","operation","operations","warn"],"mappings":"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"}