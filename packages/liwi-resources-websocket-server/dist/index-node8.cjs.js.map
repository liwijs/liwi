{"version":3,"file":"index-node8.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { ResourcesService, ResourceOperationKey } from 'liwi-resources';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { QueryOptions } from 'liwi-types';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\nexport default function init(io: Server, resourcesService: ResourcesService) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'resource',\n      (\n        {\n          type,\n          resourceName,\n          json,\n        }: { json: string; resourceName: string; type: ResourceOperationKey },\n        callback: Callback,\n      ) => {\n        try {\n          const args = decode(json);\n          if (!Array.isArray(args)) {\n            logger.debug('args', { args });\n\n            if (callback) {\n              throw new Error('Invalid args');\n            }\n          }\n\n          const resource = resourcesService.get(resourceName);\n\n          logger.info('resource', { type, resourceName, args });\n          switch (type) {\n            case 'cursor toArray': {\n              const [options]: [QueryOptions<any>] = args;\n              return resourcesService\n                .createCursor(resource, socket.user, options)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n            }\n\n            case 'findByKey':\n            case 'findOne':\n            case 'insertOne':\n            case 'replaceOne':\n            case 'replaceSeveral':\n            case 'upsertOneWithInfo':\n            case 'partialUpdateByKey':\n            case 'partialUpdateMany':\n            case 'deleteByKey':\n            case 'deleteMany':\n              callback('TODO: to implement');\n              break;\n            // try {\n            //   if (!PRODUCTION && !resource[type]) {\n            //     throw new Error(\n            //       `rest: ${resourceName}.${type} is not available`,\n            //     );\n            //   }\n            //\n            //   // eslint-disable-next-line prettier/prettier\n            //   return resource[type](socket.user, ...args)\n            //     .then((result: any) => callback(null, encode(result)))\n            //     .catch((err: Error) => {\n            //       logger.error(type, { err });\n            //       callback(err.message);\n            //     });\n            // } catch (err) {\n            //   logger.error(type, { err });\n            //   callback(err.message || err);\n            // }\n            // break;\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const [key, eventName, otherArgs = []] = args;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const queryOptions = resource.queries[key];\n                // TODO resource.criteria(queryOptions.criteria) & co ?\n                if (!queryOptions) {\n                  throw new Error(\n                    `rest: ${resourceName}.${type}.${key} is not available`,\n                  );\n                }\n                console.log(queryOptions);\n                const query = resource.store.createQuery(queryOptions); // todo pass connected user\n\n                if (type === 'fetch') {\n                  return query\n                    .fetch(\n                      (result: any) => callback(null, result && encode(result)),\n                      ...otherArgs,\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcher = query[type]((err: Error, result: any) => {\n                    if (err) {\n                      logger.error(type, { err });\n                    }\n\n                    socket.emit(eventName, err, result && encode(result));\n                  });\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Set","forEach","watcher","stop","type","resourceName","json","callback","args","decode","Array","isArray","debug","Error","resource","get","info","options","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","key","eventName","otherArgs","startsWith","queryOptions","queries","console","log","query","store","createQuery","fetch","result","emit","add","warn"],"mappings":"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"}