{"version":3,"file":"index-browsermodern.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport type http from 'http';\nimport type net from 'net';\nimport { encode, decode } from 'extended-json';\nimport type { ExtendedJsonValue } from 'extended-json/src/ExtendedJsonValue';\nimport type {\n  AckError,\n  ToServerMessage,\n  ToClientMessage,\n  ResourcesServerService,\n  SubscriptionCallback,\n} from 'liwi-resources-server';\nimport {\n  ResourcesServerError,\n  createMessageHandler,\n} from 'liwi-resources-server';\nimport { Logger } from 'nightingale-logger';\nimport type { WebSocket } from 'ws';\nimport { WebSocketServer } from 'ws';\n\ntype GetAuthenticatedUser<AuthenticatedUser> = (\n  request: http.IncomingMessage,\n) => AuthenticatedUser | null | Promise<AuthenticatedUser | null>;\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport interface ResourcesWebsocketServer {\n  wss: WebSocketServer;\n  close: () => void;\n}\n\nconst logger = new Logger('liwi:resources-websocket-server');\n\nexport const createWsServer = <AuthenticatedUser>(\n  server: http.Server,\n  path: string,\n  resourcesServerService: ResourcesServerService,\n  getAuthenticatedUser: GetAuthenticatedUser<AuthenticatedUser>,\n): ResourcesWebsocketServer => {\n  const wss = new WebSocketServer({ noServer: true });\n\n  wss.on(\n    'connection',\n    (ws: ExtendedWebSocket, authenticatedUser: AuthenticatedUser | null) => {\n      ws.isAlive = true;\n\n      const sendMessage = (\n        type: ToClientMessage[0],\n        id: ToClientMessage[1],\n        error: ToClientMessage[2],\n        result: ToClientMessage[3],\n      ): void => {\n        if (!id) throw new Error('Invalid id');\n        logger.debug('sendMessage', { type, id, error, result });\n        ws.send(encode([type, id, error, result]));\n      };\n\n      const createSafeError = (error: Error): AckError => {\n        if (error instanceof ResourcesServerError) {\n          return { code: error.code, message: error.message };\n        }\n\n        logger.error(error);\n\n        return {\n          code: 'INTERNAL_SERVER_ERROR',\n          message: 'Internal Server Error',\n        };\n      };\n\n      const sendAck = (\n        id: number,\n        error: null | Error,\n        result?: ExtendedJsonValue,\n      ): void => {\n        sendMessage('ack', id, error && createSafeError(error), result);\n      };\n\n      const sendSubscriptionMessage: SubscriptionCallback = (\n        subscriptionId: number,\n        error: null | Error,\n        result: ExtendedJsonValue,\n      ): void => {\n        sendMessage(\n          'subscription',\n          subscriptionId,\n          error && createSafeError(error),\n          result,\n        );\n      };\n\n      const { messageHandler, close } = createMessageHandler(\n        resourcesServerService,\n        authenticatedUser,\n        true,\n      );\n\n      const handleDecodedMessage = (\n        message: ToServerMessage,\n      ): Promise<void> => {\n        if (message.id == null) {\n          return messageHandler(message, sendSubscriptionMessage).then(\n            () => {},\n          );\n        } else {\n          return messageHandler(message, sendSubscriptionMessage)\n            .then((result) => {\n              sendAck(message.id, null, result as ExtendedJsonValue);\n            })\n            .catch((err) => {\n              sendAck(message.id, err as Error);\n            });\n        }\n      };\n\n      ws.on('pong', () => {\n        ws.isAlive = true;\n      });\n\n      ws.on('close', (code, data) => {\n        const reason = data.toString();\n        logger.debug('closed', { code, reason });\n        close();\n      });\n\n      ws.on('error', (error) => {\n        logger.error('ws error', { error });\n      });\n\n      ws.on('message', (data, isBinary): void => {\n        if (isBinary) return;\n\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        const message = data.toString();\n\n        if (message === 'close') return;\n\n        if (typeof message !== 'string') {\n          logger.warn('got non string message');\n          return;\n        }\n\n        const decoded =\n          decode<\n            [\n              ToServerMessage['type'],\n              ToServerMessage['id'],\n              ToServerMessage['payload'],\n            ]\n          >(message);\n        try {\n          const [type, id, payload] = decoded;\n          logger.debug('received', { type, id, payload });\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handleDecodedMessage({ type, id, payload } as ToServerMessage);\n        } catch {\n          logger.notice('invalid message', { decoded });\n        }\n      });\n\n      ws.send('connection-ack');\n    },\n  );\n\n  // https://www.npmjs.com/package/ws#how-to-detect-and-close-broken-connections\n  const interval = setInterval(() => {\n    wss.clients.forEach((ws: WebSocket) => {\n      const extWs = ws as ExtendedWebSocket;\n\n      if (!extWs.isAlive) {\n        ws.terminate();\n        return;\n      }\n\n      extWs.isAlive = false;\n      ws.ping(null, undefined);\n    });\n  }, 60 * 1000);\n\n  const handleUpgrade = (\n    request: http.IncomingMessage,\n    socket: net.Socket,\n    upgradeHead: Buffer,\n  ): void => {\n    if (request.url !== path) return;\n\n    const authenticatedUserPromise: Promise<AuthenticatedUser | null> =\n      Promise.resolve(getAuthenticatedUser(request));\n    wss.handleUpgrade(request, socket, upgradeHead, (ws) => {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      authenticatedUserPromise\n        .catch((err) => {\n          logger.warn(\n            'getAuthenticatedUser threw an error, return null instead.',\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            { err },\n          );\n          return null;\n        })\n        .then((authenticatedUser) => {\n          wss.emit('connection', ws, authenticatedUser);\n        });\n    });\n  };\n\n  server.on('upgrade', handleUpgrade);\n\n  return {\n    wss,\n    close(): void {\n      wss.close();\n      for (const ws of wss.clients) {\n        ws.terminate();\n      }\n      server.removeListener('upgrade', handleUpgrade);\n      clearInterval(interval);\n    },\n  };\n};\n"],"names":["logger","Logger","createWsServer","server","path","resourcesServerService","getAuthenticatedUser","wss","WebSocketServer","noServer","on","ws","authenticatedUser","isAlive","sendMessage","type","id","error","result","Error","debug","send","encode","createSafeError","ResourcesServerError","code","message","sendAck","sendSubscriptionMessage","subscriptionId","messageHandler","close","createMessageHandler","handleDecodedMessage","then","catch","err","data","reason","toString","isBinary","warn","decoded","decode","payload","notice","interval","setInterval","clients","forEach","extWs","terminate","ping","undefined","handleUpgrade","request","socket","upgradeHead","url","authenticatedUserPromise","Promise","resolve","emit","removeListener","clearInterval"],"mappings":"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"}