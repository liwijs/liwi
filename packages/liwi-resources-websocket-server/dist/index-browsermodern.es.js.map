{"version":3,"file":"index-browsermodern.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity, max-lines */\nimport http from 'http';\nimport net from 'net';\nimport { PRODUCTION } from 'pob-babel';\nimport { encode, decode } from 'extended-json';\nimport {\n  AckError,\n  Query,\n  QuerySubscription,\n  SubscribeHook,\n  ToServerMessage,\n  ToClientMessage,\n  ToServerQueryPayload,\n  ToServerSubscribeQueryPayload,\n  ResourcesServerService,\n  ServiceResource,\n  ResourcesServerError,\n} from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport WebSocket from 'ws';\n\nexport type WebsocketServer = WebSocket.Server;\n\ntype GetAuthenticatedUser<AuthenticatedUser> = (\n  request: http.IncomingMessage,\n) => AuthenticatedUser | null | Promise<AuthenticatedUser | null>;\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive: boolean;\n}\n\nexport interface ResourcesWebsocketServer {\n  wss: WebSocket.Server;\n  close(): void;\n}\n\ninterface SubscriptionAndSubscribeHook {\n  subscription: QuerySubscription;\n  subscribeHook?: SubscribeHook<any>;\n  params?: any;\n}\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\nexport const createWsServer = <AuthenticatedUser>(\n  server: http.Server,\n  path = '/ws',\n  resourcesServerService: ResourcesServerService,\n  getAuthenticatedUser: GetAuthenticatedUser<AuthenticatedUser>,\n): ResourcesWebsocketServer => {\n  const wss = new WebSocket.Server({ noServer: true });\n\n  const getResource = (payload: {\n    resourceName: string;\n  }): ServiceResource<any, any> => {\n    logger.debug('resource', {\n      resourceName: payload.resourceName,\n    });\n    const resource = resourcesServerService.getServiceResource(\n      payload.resourceName,\n    );\n    return resource;\n  };\n\n  const createQuery = (\n    payload: ToServerQueryPayload,\n    resource: ServiceResource<any, any>,\n    authenticatedUser: AuthenticatedUser | null,\n  ): Query<any, any> => {\n    if (!payload.key.startsWith('query')) {\n      throw new Error('Invalid query key');\n    }\n\n    return resource.queries[payload.key](payload.params, authenticatedUser);\n  };\n\n  wss.on(\n    'connection',\n    (ws: ExtendedWebSocket, authenticatedUser: AuthenticatedUser | null) => {\n      ws.isAlive = true;\n      const openSubscriptions = new Map<number, SubscriptionAndSubscribeHook>();\n\n      const sendMessage = (\n        type: ToClientMessage[0],\n        id: ToClientMessage[1],\n        error: ToClientMessage[2],\n        result: ToClientMessage[3],\n      ): void => {\n        if (!id) throw new Error('Invalid id');\n        logger.debug('sendMessage', { type, id, error, result });\n        ws.send(encode([type, id, error, result]));\n      };\n\n      const createSafeError = (error: Error): AckError => {\n        if (error instanceof ResourcesServerError) {\n          return { code: error.code, message: error.message };\n        }\n        return {\n          code: 'INTERNAL_SERVER_ERROR',\n          message: 'Internal Server Error',\n        };\n      };\n\n      const sendAck = (id: number, error: null | Error, result?: any): void => {\n        sendMessage('ack', id, error && createSafeError(error), result);\n      };\n\n      const logUnexpectedError = (\n        error: Error,\n        message: string,\n        payload: any,\n      ): void => {\n        if (!PRODUCTION || !(error instanceof ResourcesServerError)) {\n          logger.error(message, {\n            error,\n            payload: PRODUCTION ? 'redacted' : payload,\n          });\n        }\n      };\n\n      const logUnexpectedErrorAndSendAck = (\n        message: ToServerMessage,\n        error: Error,\n      ): void => {\n        logUnexpectedError(error, message.type, message.payload);\n        sendAck(message.id, error);\n      };\n\n      const sendSubscriptionMessage = (\n        subscriptionId: number,\n        error: null | Error,\n        result: any,\n      ): void => {\n        sendMessage(\n          'subscription',\n          subscriptionId,\n          error && createSafeError(error),\n          result,\n        );\n      };\n\n      const createSubscription = (\n        type: 'fetchAndSubscribe' | 'subscribe',\n        id: number,\n        payload: ToServerSubscribeQueryPayload,\n        resource: ServiceResource<any, any>,\n        query: Query<any, any>,\n      ): void => {\n        const { subscriptionId } = payload;\n        if (openSubscriptions.has(subscriptionId)) {\n          const error =\n            'Already have a watcher for this id. Cannot add a new one';\n          logger.warn(error, { subscriptionId, key: payload.key });\n          throw new ResourcesServerError('ALREADY_HAVE_WATCHER', error);\n        }\n\n        const subscription = query[type]((error: Error | null, result: any) => {\n          if (error) {\n            logUnexpectedError(error, type, payload);\n          }\n          sendSubscriptionMessage(subscriptionId, error, result);\n        });\n\n        subscription.then(\n          () => sendAck(id, null),\n          (err: Error) => {\n            logger.error(type, { err });\n            sendAck(id, err);\n          },\n        );\n\n        const subscribeHook =\n          resource.subscribeHooks && resource.subscribeHooks[payload.key];\n        openSubscriptions.set(subscriptionId, {\n          subscription,\n          subscribeHook,\n          params: subscribeHook ? payload.params : undefined,\n        });\n        if (subscribeHook) {\n          subscribeHook.subscribed(authenticatedUser, payload.params);\n        }\n      };\n\n      const unsubscribeSubscription = ({\n        subscription,\n        subscribeHook,\n        params,\n      }: SubscriptionAndSubscribeHook): void => {\n        subscription.stop();\n        if (subscribeHook) {\n          subscribeHook.unsubscribed(authenticatedUser, params);\n        }\n      };\n\n      const handleDecodedMessage = async (\n        message: ToServerMessage,\n      ): Promise<void> => {\n        switch (message.type) {\n          case 'fetch': {\n            try {\n              const resource = getResource(message.payload);\n              const query = createQuery(\n                message.payload,\n                resource,\n                authenticatedUser,\n              );\n              await query.fetch((result: any) =>\n                sendAck(message.id, null, result),\n              );\n            } catch (err) {\n              logUnexpectedErrorAndSendAck(message, err);\n            }\n            break;\n          }\n          case 'fetchAndSubscribe': {\n            try {\n              const resource = getResource(message.payload);\n              const query = createQuery(\n                message.payload,\n                resource,\n                authenticatedUser,\n              );\n              createSubscription(\n                'fetchAndSubscribe',\n                message.id,\n                message.payload,\n                resource,\n                query,\n              );\n            } catch (err) {\n              logUnexpectedErrorAndSendAck(message, err);\n            }\n            break;\n          }\n          case 'subscribe': {\n            try {\n              const resource = getResource(message.payload);\n              const query = createQuery(\n                message.payload,\n                resource,\n                authenticatedUser,\n              );\n              createSubscription(\n                'subscribe',\n                message.id,\n                message.payload,\n                resource,\n                query,\n              );\n            } catch (err) {\n              logUnexpectedErrorAndSendAck(message, err);\n            }\n            break;\n          }\n          // case 'subscribe:changePayload': {\n          //   break;\n          // }\n          case 'subscribe:close': {\n            try {\n              const { subscriptionId } = message.payload;\n              const SubscriptionAndSubscribeHook = openSubscriptions.get(\n                subscriptionId,\n              );\n              if (!SubscriptionAndSubscribeHook) {\n                logger.warn('tried to unsubscribe non existing watcher', {\n                  subscriptionId,\n                });\n              } else {\n                openSubscriptions.delete(subscriptionId);\n                unsubscribeSubscription(SubscriptionAndSubscribeHook);\n              }\n            } catch (err) {\n              logUnexpectedError(err, message.type, message.payload);\n            }\n            break;\n          }\n          case 'do': {\n            try {\n              const resource = getResource(message.payload);\n              const { operationKey, params } = message.payload;\n\n              const operation = resource.operations[operationKey];\n\n              if (!operation) {\n                throw new ResourcesServerError(\n                  'OPERATION_NOT_FOUND',\n                  `Operation not found: ${operationKey}`,\n                );\n              }\n\n              operation(params, authenticatedUser).then(\n                (result: any) => sendAck(message.id, null, result),\n                (err: Error) => {\n                  logUnexpectedErrorAndSendAck(message, err);\n                },\n              );\n            } catch (err) {\n              logUnexpectedErrorAndSendAck(message, err);\n            }\n            break;\n          }\n        }\n      };\n\n      ws.on('pong', () => {\n        ws.isAlive = true;\n      });\n\n      ws.on('close', () => {\n        openSubscriptions.forEach(unsubscribeSubscription);\n      });\n\n      ws.on('message', (message: string): void => {\n        if (message === 'close') return;\n\n        if (typeof message !== 'string') {\n          logger.warn('got non string message');\n          return;\n        }\n\n        const decoded = decode<\n          [\n            ToServerMessage['type'],\n            ToServerMessage['id'],\n            ToServerMessage['payload'],\n          ]\n        >(message);\n        try {\n          const [type, id, payload] = decoded;\n          logger.debug('received', { type, id, payload });\n          handleDecodedMessage({ type, id, payload } as ToServerMessage);\n        } catch (err) {\n          logger.notice('invalid message', { decoded });\n        }\n      });\n\n      ws.send('connection-ack');\n    },\n  );\n\n  // https://www.npmjs.com/package/ws#how-to-detect-and-close-broken-connections\n  const interval = setInterval(() => {\n    wss.clients.forEach((ws: WebSocket) => {\n      const extWs = ws as ExtendedWebSocket;\n\n      if (!extWs.isAlive) return ws.terminate();\n\n      extWs.isAlive = false;\n      ws.ping(null, undefined);\n    });\n  }, 60000);\n\n  const handleUpgrade = (\n    request: http.IncomingMessage,\n    socket: net.Socket,\n    upgradeHead: Buffer,\n  ): void => {\n    if (request.url !== path) return;\n\n    const authenticatedUserPromise: Promise<AuthenticatedUser | null> = Promise.resolve(\n      getAuthenticatedUser(request),\n    );\n    wss.handleUpgrade(request, socket, upgradeHead, (ws) => {\n      authenticatedUserPromise\n        .catch((err) => {\n          logger.warn(\n            'getAuthenticatedUser threw an error, return null instead.',\n            { err },\n          );\n          return null;\n        })\n        .then((authenticatedUser) => {\n          wss.emit('connection', ws, authenticatedUser);\n        });\n    });\n  };\n\n  server.on('upgrade', handleUpgrade);\n\n  return {\n    wss,\n    close(): void {\n      wss.close();\n      server.removeListener('upgrade', handleUpgrade);\n      clearInterval(interval);\n    },\n  };\n};\n"],"names":["logger","Logger","createWsServer","server","path","resourcesServerService","getAuthenticatedUser","wss","WebSocket","Server","noServer","getResource","payload","debug","resourceName","resource","getServiceResource","createQuery","authenticatedUser","key","startsWith","Error","queries","params","on","ws","isAlive","openSubscriptions","Map","sendMessage","type","id","error","result","send","encode","createSafeError","ResourcesServerError","code","message","sendAck","logUnexpectedError","logUnexpectedErrorAndSendAck","sendSubscriptionMessage","subscriptionId","createSubscription","query","has","warn","subscription","then","err","subscribeHook","subscribeHooks","set","undefined","subscribed","unsubscribeSubscription","stop","unsubscribed","handleDecodedMessage","fetch","SubscriptionAndSubscribeHook","get","delete","operationKey","operation","operations","forEach","decoded","decode","notice","interval","setInterval","clients","extWs","terminate","ping","handleUpgrade","request","socket","upgradeHead","url","authenticatedUserPromise","Promise","resolve","catch","emit","close","removeListener","clearInterval"],"mappings":"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"}