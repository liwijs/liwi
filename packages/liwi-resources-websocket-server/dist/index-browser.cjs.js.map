{"version":3,"file":"index-browser.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n// import { PRODUCTION } from 'pob-babel';\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { Server, Socket } from 'socket.io';\nimport { ResourcesServerService } from 'liwi-resources-server';\nimport Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { ResourceOperationKey } from 'liwi-types';\n\nconst logger = new Logger('liwi:rest-websocket');\n\ntype Callback = (err: null | string, result?: string | undefined) => void;\n\ndeclare module 'socket.io' {\n  interface Socket {\n    // user added in alp-auth\n    user?: any;\n  }\n}\n\ninterface EventResourceParams {\n  type: ResourceOperationKey;\n  json: string;\n  resourceName: string;\n}\n\nexport default function init(\n  io: Server,\n  resourcesService: ResourcesServerService,\n) {\n  io.on('connection', (socket: Socket) => {\n    const openWatchers = new Set();\n\n    socket.on('disconnect', () => {\n      openWatchers.forEach((watcher) => watcher.stop());\n    });\n\n    socket.on(\n      'resource',\n      (\n        { type, resourceName, json }: EventResourceParams,\n        callback: Callback,\n      ) => {\n        try {\n          const value = json && decode(json);\n\n          const resource = resourcesService.get(resourceName);\n\n          logger.info('resource', { type, resourceName, value });\n          switch (type) {\n            case 'cursor toArray': {\n              return resourcesService\n                .createCursor(resource, socket.user, value)\n                .then((cursor) => cursor.toArray())\n                .then((results) => callback(null, encode(results)))\n                .catch((err) => {\n                  logger.error(type, err);\n                  callback(err.message);\n                });\n            }\n\n            case 'fetch':\n            case 'subscribe':\n            case 'fetchAndSubscribe':\n              try {\n                const [key, eventName, otherArgs] = value;\n\n                if (!key.startsWith('query')) {\n                  throw new Error('Invalid query key');\n                }\n\n                const queryOptions = resource.queries[key];\n                // TODO resource.criteria(queryOptions.criteria) & co ?\n                if (!queryOptions) {\n                  throw new Error(\n                    `rest: ${resourceName}.${type}.${key} is not available`,\n                  );\n                }\n                const query = resource.store.createQuery(queryOptions); // todo pass connected user\n\n                if (type === 'fetch') {\n                  return query\n                    .fetch(\n                      (result: any) => callback(null, result && encode(result)),\n                      ...otherArgs,\n                    )\n                    .catch((err: any) => {\n                      logger.error(type, { err });\n                      callback(err.message || err);\n                    });\n                } else {\n                  const watcher = query[type]((err: Error, result: any) => {\n                    if (err) {\n                      logger.error(type, { err });\n                    }\n\n                    socket.emit(eventName, err, result && encode(result));\n                  });\n                  watcher.then(\n                    () => callback(null),\n                    (err: Error) => {\n                      logger.error(type, { err });\n                      callback(err.message);\n                    },\n                  );\n\n                  openWatchers.add(watcher);\n                }\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n\n            case 'do': {\n              try {\n                const [key, params] = value;\n\n                const operation = resource.operations[key];\n\n                if (!operation) {\n                  throw new Error('Operation not found');\n                }\n\n                operation(params, socket.user).then(\n                  (result) => callback(null, result),\n                  (err: Error) => {\n                    logger.error(type, { err });\n                    callback(err.message);\n                  },\n                );\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n              break;\n            }\n\n            default:\n              try {\n                logger.warn('Unknown command', { type });\n                callback(`rest: unknown command \"${type}\"`);\n              } catch (err) {\n                logger.error(type, { err });\n                callback(err.message || err);\n              }\n          }\n        } catch (err) {\n          logger.warn('rest error', { err });\n          callback(err.message || err);\n        }\n      },\n    );\n  });\n}\n"],"names":["logger","Logger","init","io","resourcesService","on","socket","openWatchers","Set","forEach","watcher","stop","callback","type","resourceName","json","key","eventName","otherArgs","params","value","decode","resource","get","info","createCursor","user","then","cursor","toArray","results","encode","catch","err","error","message","startsWith","Error","queryOptions","queries","query","store","createQuery","fetch","result","emit","add","operation","operations","warn"],"mappings":"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"}