{"version":3,"file":"index-node8-dev.es.js","sources":["../src/RestCursor.ts","../src/RestService.ts"],"sourcesContent":["export default class RestCursor<R extends any> {\n  private restResource: any;\n\n  private connectedUser: any;\n\n  private cursor: any;\n\n  constructor(restResource: R, connectedUser?: any, cursor?: any) {\n    this.restResource = restResource;\n    this.connectedUser = connectedUser;\n    this.cursor = cursor;\n  }\n\n  toArray() {\n    return this.cursor\n      .toArray()\n      .then(\n        (results?: Array<any>) =>\n          results &&\n          results.map((result) =>\n            this.restResource.transform(result, this.connectedUser),\n          ),\n      );\n  }\n}\n","import { Criteria, Sort } from 'liwi-types';\nimport RestCursor from './RestCursor';\n\nexport interface CreateCursorOptions<Model> {\n  criteria?: Criteria<Model>;\n  sort?: Sort<Model>;\n  limit?: number;\n}\n\nexport default class RestService {\n  restResources: Map<string, any>;\n\n  constructor(restResources: Map<string, any>) {\n    this.restResources = restResources;\n  }\n\n  addRestResource(key: string, restResource: any) {\n    this.restResources.set(key, restResource);\n  }\n\n  get(key: string) {\n    const restResource = this.restResources.get(key);\n    if (!restResource) throw new Error(`Invalid rest resource: \"${key}\"`);\n    return restResource;\n  }\n\n  async createCursor<Model, R extends any>(\n    restResource: R,\n    connectedUser: any,\n    { criteria, sort, limit }: CreateCursorOptions<Model>,\n  ): Promise<RestCursor<R>> {\n    // TODO: restResource.query(connectedUser, criteria || {}, sort).cursor()\n    criteria = restResource.criteria(connectedUser, criteria || {});\n    sort = restResource.sort(connectedUser, sort);\n    const cursor = await restResource.store.cursor(criteria, sort);\n    limit = restResource.limit(limit);\n    if (limit) cursor.limit(connectedUser, limit);\n    return new RestCursor(restResource, connectedUser, cursor);\n  }\n}\n"],"names":["RestCursor","constructor","restResource","connectedUser","cursor","toArray","then","results","map","result","transform","RestService","restResources","addRestResource","key","set","get","Error","createCursor","criteria","sort","limit","store"],"mappings":"AAAe,MAAMA,UAAN,CAAgC;EAO7CC,WAAW,CAACC,YAAD,EAAkBC,aAAlB,EAAuCC,MAAvC,EAAqD;SANxDF,YAMwD;SAJxDC,aAIwD;SAFxDC,MAEwD;SACzDF,YAAL,GAAoBA,YAApB;SACKC,aAAL,GAAqBA,aAArB;SACKC,MAAL,GAAcA,MAAd;;;EAGFC,OAAO,GAAG;WACD,KAAKD,MAAL,CACJC,OADI,GAEJC,IAFI,CAGFC,OAAD,IACEA,OAAO,IACPA,OAAO,CAACC,GAAR,CAAaC,MAAD,IACV,KAAKP,YAAL,CAAkBQ,SAAlB,CAA4BD,MAA5B,EAAoC,KAAKN,aAAzC,CADF,CALC,CAAP;;;;;ACLW,MAAMQ,WAAN,CAAkB;EAG/BV,WAAW,CAACW,aAAD,EAAkC;SAF7CA,aAE6C;SACtCA,aAAL,GAAqBA,aAArB;;;EAGFC,eAAe,CAACC,GAAD,EAAcZ,YAAd,EAAiC;SACzCU,aAAL,CAAmBG,GAAnB,CAAuBD,GAAvB,EAA4BZ,YAA5B;;;EAGFc,GAAG,CAACF,GAAD,EAAc;UACTZ,YAAY,GAAG,KAAKU,aAAL,CAAmBI,GAAnB,CAAuBF,GAAvB,CAArB;QACI,CAACZ,YAAL,EAAmB,MAAM,IAAIe,KAAJ,CAAW,2BAA0BH,GAAI,GAAzC,CAAN;WACZZ,YAAP;;;QAGIgB,YAAN,CACEhB,YADF,EAEEC,aAFF,EAGE;IAAEgB,QAAF;IAAYC,IAAZ;IAAkBC;GAHpB,EAI0B;;IAExBF,QAAQ,GAAGjB,YAAY,CAACiB,QAAb,CAAsBhB,aAAtB,EAAqCgB,QAAQ,IAAI,EAAjD,CAAX;IACAC,IAAI,GAAGlB,YAAY,CAACkB,IAAb,CAAkBjB,aAAlB,EAAiCiB,IAAjC,CAAP;UACMhB,MAAM,GAAG,MAAMF,YAAY,CAACoB,KAAb,CAAmBlB,MAAnB,CAA0Be,QAA1B,EAAoCC,IAApC,CAArB;IACAC,KAAK,GAAGnB,YAAY,CAACmB,KAAb,CAAmBA,KAAnB,CAAR;QACIA,KAAJ,EAAWjB,MAAM,CAACiB,KAAP,CAAalB,aAAb,EAA4BkB,KAA5B;WACJ,IAAIrB,UAAJ,CAAeE,YAAf,EAA6BC,aAA7B,EAA4CC,MAA5C,CAAP;;;;;;;"}