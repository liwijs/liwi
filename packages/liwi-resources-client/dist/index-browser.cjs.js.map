{"version":3,"file":"index-browser.cjs.js","sources":["../src/ClientQuery.ts","../src/createResourceClientService.ts"],"sourcesContent":["import type {\n  Query,\n  QuerySubscription,\n  SubscribeCallback,\n  QueryParams,\n  QueryResult,\n  ToServerQueryPayload,\n} from 'liwi-resources';\nimport { Logger } from 'nightingale-logger';\nimport type { TransportClient } from './TransportClient';\n\nconst logger = new Logger('liwi:resources:query');\n\nexport class ClientQuery<Result, Params extends QueryParams<Params>>\n  implements Query<Result, Params>\n{\n  private readonly resourceName: string;\n\n  private readonly transportClient: TransportClient;\n\n  key: string;\n\n  private params: Params;\n\n  constructor(\n    resourceName: string,\n    transportClient: TransportClient,\n    key: string,\n    params: Params,\n  ) {\n    this.resourceName = resourceName;\n    this.transportClient = transportClient;\n    this.key = key;\n    this.params = params;\n  }\n\n  changeParams(params: Params): void {\n    this.params = params;\n  }\n\n  changePartialParams(\n    params: Params extends undefined ? never : Partial<Params>,\n  ): void {\n    this.params = { ...this.params, ...params };\n  }\n\n  private getTransportPayload(): ToServerQueryPayload {\n    return {\n      resourceName: this.resourceName,\n      key: this.key,\n      params: this.params,\n    };\n  }\n\n  fetch<T>(onFulfilled?: (result: QueryResult<Result>) => T): Promise<T> {\n    logger.debug('fetch', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n    return this.transportClient\n      .send<'fetch', QueryResult<Result>>('fetch', this.getTransportPayload())\n      .then(onFulfilled);\n  }\n\n  fetchAndSubscribe(\n    callback: SubscribeCallback<any, Result>,\n  ): QuerySubscription {\n    logger.debug('fetchAndSubscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'fetchAndSubscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n\n  subscribe(callback: SubscribeCallback<any, Result>): QuerySubscription {\n    logger.debug('subscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'subscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n}\n","import type { ServiceInterface as ClientServiceInterface } from 'liwi-resources';\nimport { ClientQuery } from './ClientQuery';\nimport type { TransportClient } from './TransportClient';\n\nconst getKeys = <T extends Record<keyof T, unknown>>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\ninterface CreateResourceClientOptions<\n  QueryKeys extends keyof any,\n  OperationKeys extends keyof any,\n> {\n  queries: Record<QueryKeys, null>;\n  operations: Record<OperationKeys, null>;\n}\n\nexport const createResourceClientService = <\n  Service extends ClientServiceInterface<\n    Service['queries'],\n    Service['operations']\n  >,\n>(\n  resourceName: string,\n  options: CreateResourceClientOptions<\n    keyof Service['queries'],\n    keyof Service['operations']\n  >,\n) => {\n  return (transportClient: TransportClient): Service => {\n    const queries: Partial<Service['queries']> = {};\n    const operations: Partial<Service['operations']> = {};\n\n    getKeys(options.queries).forEach((queryKey) => {\n      queries[queryKey] = ((params: any) =>\n        new ClientQuery(\n          resourceName,\n          transportClient,\n          queryKey as string,\n          params,\n        )) as any;\n    });\n\n    getKeys(options.operations).forEach((operationKey) => {\n      operations[operationKey] = ((params: any) =>\n        transportClient.send('do', {\n          resourceName,\n          operationKey: operationKey as string,\n          params,\n        })) as any;\n    });\n\n    return {\n      queries,\n      operations,\n    } as unknown as Service;\n  };\n};\n"],"names":["logger","Logger","ClientQuery","resourceName","transportClient","key","params","changeParams","changePartialParams","_extends","getTransportPayload","fetch","onFulfilled","debug","send","then","fetchAndSubscribe","callback","subscribe","getKeys","o","Object","keys","createResourceClientService","options","queries","operations","forEach","queryKey","operationKey"],"mappings":";;;;;;;;;;;;AAWA,IAAMA,MAAM,GAAG,IAAIC,wBAAJ,CAAW,sBAAX,CAAf,CAAA;AAEA,IAAaC,WAAb,gBAAA,YAAA;AAWE,EAAA,SAAA,WAAA,CACEC,YADF,EAEEC,eAFF,EAGEC,GAHF,EAIEC,MAJF,EAKE;IACA,IAAKH,CAAAA,YAAL,GAAoBA,YAApB,CAAA;IACA,IAAKC,CAAAA,eAAL,GAAuBA,eAAvB,CAAA;IACA,IAAKC,CAAAA,GAAL,GAAWA,GAAX,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACD,GAAA;;AArBH,EAAA,IAAA,MAAA,GAAA,WAAA,CAAA,SAAA,CAAA;;AAAA,EAAA,MAAA,CAuBEC,YAvBF,GAuBE,SAAaD,YAAAA,CAAAA,MAAb,EAAmC;IACjC,IAAKA,CAAAA,MAAL,GAAcA,MAAd,CAAA;GAxBJ,CAAA;;AAAA,EAAA,MAAA,CA2BEE,mBA3BF,GA2BE,SACEF,mBAAAA,CAAAA,MADF,EAEQ;AACN,IAAA,IAAA,CAAKA,MAAL,GAAAG,iBAAA,CAAA,EAAA,EAAmB,IAAKH,CAAAA,MAAxB,EAAmCA,MAAnC,CAAA,CAAA;GA9BJ,CAAA;;EAAA,MAiCUI,CAAAA,mBAjCV,GAiCE,SAAoD,mBAAA,GAAA;IAClD,OAAO;MACLP,YAAY,EAAE,KAAKA,YADd;MAELE,GAAG,EAAE,KAAKA,GAFL;AAGLC,MAAAA,MAAM,EAAE,IAAKA,CAAAA,MAAAA;KAHf,CAAA;GAlCJ,CAAA;;AAAA,EAAA,MAAA,CAyCEK,KAzCF,GAyCE,SAASC,KAAAA,CAAAA,WAAT,EAAuE;AACrEZ,IAAAA,MAAM,CAACa,KAAP,CAAa,OAAb,EAAsB;MACpBV,YAAY,EAAE,KAAKA,YADC;AAEpBE,MAAAA,GAAG,EAAE,IAAKA,CAAAA,GAAAA;KAFZ,CAAA,CAAA;AAIA,IAAA,OAAO,IAAKD,CAAAA,eAAL,CACJU,IADI,CAC+B,OAD/B,EACwC,IAAKJ,CAAAA,mBAAL,EADxC,CAAA,CAEJK,IAFI,CAECH,WAFD,CAAP,CAAA;GA9CJ,CAAA;;AAAA,EAAA,MAAA,CAmDEI,iBAnDF,GAmDE,SACEC,iBAAAA,CAAAA,QADF,EAEqB;AACnBjB,IAAAA,MAAM,CAACa,KAAP,CAAa,mBAAb,EAAkC;MAChCV,YAAY,EAAE,KAAKA,YADa;AAEhCE,MAAAA,GAAG,EAAE,IAAKA,CAAAA,GAAAA;KAFZ,CAAA,CAAA;AAKA,IAAA,OAAO,IAAKD,CAAAA,eAAL,CAAqBc,SAArB,CACL,mBADK,EAEL,IAAA,CAAKR,mBAAL,EAFK,EAGLO,QAHK,CAAP,CAAA;GA3DJ,CAAA;;AAAA,EAAA,MAAA,CAkEEC,SAlEF,GAkEE,SAAUD,SAAAA,CAAAA,QAAV,EAAuE;AACrEjB,IAAAA,MAAM,CAACa,KAAP,CAAa,WAAb,EAA0B;MACxBV,YAAY,EAAE,KAAKA,YADK;AAExBE,MAAAA,GAAG,EAAE,IAAKA,CAAAA,GAAAA;KAFZ,CAAA,CAAA;AAKA,IAAA,OAAO,IAAKD,CAAAA,eAAL,CAAqBc,SAArB,CACL,WADK,EAEL,IAAA,CAAKR,mBAAL,EAFK,EAGLO,QAHK,CAAP,CAAA;GAxEJ,CAAA;;AAAA,EAAA,OAAA,WAAA,CAAA;AAAA,CAAA,EAAA;;ACTA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAqCC,CAArC,EAAA;AAAA,EAAA,OACdC,MAAM,CAACC,IAAP,CAAYF,CAAZ,CADc,CAAA;AAAA,CAAhB,CAAA;;AAWO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CAMzCpB,YANyC,EAOzCqB,OAPyC,EAWtC;EACH,OAAO,UAACpB,eAAD,EAA+C;IACpD,IAAMqB,OAAoC,GAAG,EAA7C,CAAA;IACA,IAAMC,UAA0C,GAAG,EAAnD,CAAA;IAEAP,OAAO,CAACK,OAAO,CAACC,OAAT,CAAP,CAAyBE,OAAzB,CAAiC,UAACC,QAAD,EAAc;AAC7CH,MAAAA,OAAO,CAACG,QAAD,CAAP,GAAqB,UAACtB,MAAD,EAAA;QAAA,OACnB,IAAIJ,WAAJ,CACEC,YADF,EAEEC,eAFF,EAGEwB,QAHF,EAIEtB,MAJF,CADmB,CAAA;OAArB,CAAA;KADF,CAAA,CAAA;IAUAa,OAAO,CAACK,OAAO,CAACE,UAAT,CAAP,CAA4BC,OAA5B,CAAoC,UAACE,YAAD,EAAkB;AACpDH,MAAAA,UAAU,CAACG,YAAD,CAAV,GAA4B,UAACvB,MAAD,EAAA;AAAA,QAAA,OAC1BF,eAAe,CAACU,IAAhB,CAAqB,IAArB,EAA2B;AACzBX,UAAAA,YAAY,EAAZA,YADyB;AAEzB0B,UAAAA,YAAY,EAAEA,YAFW;AAGzBvB,UAAAA,MAAM,EAANA,MAAAA;AAHyB,SAA3B,CAD0B,CAAA;OAA5B,CAAA;KADF,CAAA,CAAA;IASA,OAAO;AACLmB,MAAAA,OAAO,EAAPA,OADK;AAELC,MAAAA,UAAU,EAAVA,UAAAA;KAFF,CAAA;GAvBF,CAAA;AA4BD;;;;;"}