{"version":3,"file":"index-browser.es.js","sources":["../src/ClientQuery.ts","../src/createResourceClientService.ts"],"sourcesContent":["import type {\n  Query,\n  QuerySubscription,\n  SubscribeCallback,\n  QueryParams,\n  QueryResult,\n  ToServerQueryPayload,\n} from 'liwi-resources';\nimport { Logger } from 'nightingale-logger';\nimport type { TransportClient } from './TransportClient';\n\nconst logger = new Logger('liwi:resources:query');\n\nexport class ClientQuery<Result, Params extends QueryParams<Params>>\n  implements Query<Result, Params>\n{\n  private readonly resourceName: string;\n\n  private readonly transportClient: TransportClient;\n\n  key: string;\n\n  private params: Params;\n\n  constructor(\n    resourceName: string,\n    transportClient: TransportClient,\n    key: string,\n    params: Params,\n  ) {\n    this.resourceName = resourceName;\n    this.transportClient = transportClient;\n    this.key = key;\n    this.params = params;\n  }\n\n  changeParams(params: Params): void {\n    this.params = params;\n  }\n\n  changePartialParams(\n    params: Params extends undefined ? never : Partial<Params>,\n  ): void {\n    this.params = { ...this.params, ...params };\n  }\n\n  private getTransportPayload(): ToServerQueryPayload {\n    return {\n      resourceName: this.resourceName,\n      key: this.key,\n      params: this.params,\n    };\n  }\n\n  fetch<T>(onFulfilled?: (result: QueryResult<Result>) => T): Promise<T> {\n    logger.debug('fetch', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n    return this.transportClient\n      .send<'fetch', QueryResult<Result>>('fetch', this.getTransportPayload())\n      .then(onFulfilled);\n  }\n\n  fetchAndSubscribe(\n    callback: SubscribeCallback<any, Result>,\n  ): QuerySubscription {\n    logger.debug('fetchAndSubscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'fetchAndSubscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n\n  subscribe(callback: SubscribeCallback<any, Result>): QuerySubscription {\n    logger.debug('subscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'subscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n}\n","import type { ServiceInterface as ClientServiceInterface } from 'liwi-resources';\nimport { ClientQuery } from './ClientQuery';\nimport type { TransportClient } from './TransportClient';\n\nconst getKeys = <T extends Record<keyof T, unknown>>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\ninterface CreateResourceClientOptions<\n  QueryKeys extends keyof any,\n  OperationKeys extends keyof any,\n> {\n  queries: Record<QueryKeys, null>;\n  operations: Record<OperationKeys, null>;\n}\n\nexport const createResourceClientService = <\n  Service extends ClientServiceInterface<\n    Service['queries'],\n    Service['operations']\n  >,\n>(\n  resourceName: string,\n  options: CreateResourceClientOptions<\n    keyof Service['queries'],\n    keyof Service['operations']\n  >,\n) => {\n  return (transportClient: TransportClient): Service => {\n    const queries: Partial<Service['queries']> = {};\n    const operations: Partial<Service['operations']> = {};\n\n    getKeys(options.queries).forEach((queryKey) => {\n      queries[queryKey] = ((params: any) =>\n        new ClientQuery(\n          resourceName,\n          transportClient,\n          queryKey as string,\n          params,\n        )) as any;\n    });\n\n    getKeys(options.operations).forEach((operationKey) => {\n      operations[operationKey] = ((params: any) =>\n        transportClient.send('do', {\n          resourceName,\n          operationKey: operationKey as string,\n          params,\n        })) as any;\n    });\n\n    return {\n      queries,\n      operations,\n    } as unknown as Service;\n  };\n};\n"],"names":["logger","Logger","ClientQuery","resourceName","transportClient","key","params","changeParams","changePartialParams","getTransportPayload","fetch","onFulfilled","debug","send","then","fetchAndSubscribe","callback","subscribe","getKeys","o","Object","keys","createResourceClientService","options","queries","operations","forEach","queryKey","operationKey"],"mappings":"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"}