{"version":3,"file":"index-browsermodern.es.js","sources":["../src/ClientQuery.ts","../src/createResourceClientService.ts"],"sourcesContent":["import type {\n  Query,\n  QuerySubscription,\n  SubscribeCallback,\n  QueryParams,\n  QueryResult,\n  ToServerQueryPayload,\n} from 'liwi-resources';\nimport { Logger } from 'nightingale-logger';\nimport type { TransportClient } from './TransportClient';\n\nconst logger = new Logger('liwi:resources:query');\n\nexport class ClientQuery<Result, Params extends QueryParams<Params>>\n  implements Query<Result, Params>\n{\n  private readonly resourceName: string;\n\n  private readonly transportClient: TransportClient;\n\n  key: string;\n\n  private params: Params;\n\n  constructor(\n    resourceName: string,\n    transportClient: TransportClient,\n    key: string,\n    params: Params,\n  ) {\n    this.resourceName = resourceName;\n    this.transportClient = transportClient;\n    this.key = key;\n    this.params = params;\n  }\n\n  changeParams(params: Params): void {\n    this.params = params;\n  }\n\n  changePartialParams(\n    params: Params extends undefined ? never : Partial<Params>,\n  ): void {\n    this.params = { ...this.params, ...params };\n  }\n\n  private getTransportPayload(): ToServerQueryPayload {\n    return {\n      resourceName: this.resourceName,\n      key: this.key,\n      params: this.params,\n    };\n  }\n\n  fetch<T>(onFulfilled?: (result: QueryResult<Result>) => T): Promise<T> {\n    logger.debug('fetch', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n    return this.transportClient\n      .send<'fetch', QueryResult<Result>>('fetch', this.getTransportPayload())\n      .then(onFulfilled);\n  }\n\n  fetchAndSubscribe(\n    callback: SubscribeCallback<any, Result>,\n  ): QuerySubscription {\n    logger.debug('fetchAndSubscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'fetchAndSubscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n\n  subscribe(callback: SubscribeCallback<any, Result>): QuerySubscription {\n    logger.debug('subscribe', {\n      resourceName: this.resourceName,\n      key: this.key,\n    });\n\n    return this.transportClient.subscribe(\n      'subscribe',\n      this.getTransportPayload(),\n      callback,\n    );\n  }\n}\n","import type { ServiceInterface as ClientServiceInterface } from 'liwi-resources';\nimport { ClientQuery } from './ClientQuery';\nimport type { TransportClient } from './TransportClient';\n\nconst getKeys = <T extends Record<keyof T, unknown>>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n\ninterface CreateResourceClientOptions<\n  QueryKeys extends keyof any,\n  OperationKeys extends keyof any,\n> {\n  queries: Record<QueryKeys, null>;\n  operations: Record<OperationKeys, null>;\n}\n\nexport const createResourceClientService = <\n  Service extends ClientServiceInterface<\n    Service['queries'],\n    Service['operations']\n  >,\n>(\n  resourceName: string,\n  options: CreateResourceClientOptions<\n    keyof Service['queries'],\n    keyof Service['operations']\n  >,\n) => {\n  return (transportClient: TransportClient): Service => {\n    const queries: Partial<Service['queries']> = {};\n    const operations: Partial<Service['operations']> = {};\n\n    getKeys(options.queries).forEach((queryKey) => {\n      queries[queryKey] = ((params: any) =>\n        new ClientQuery(\n          resourceName,\n          transportClient,\n          queryKey as string,\n          params,\n        )) as any;\n    });\n\n    getKeys(options.operations).forEach((operationKey) => {\n      operations[operationKey] = ((params: any) =>\n        transportClient.send('do', {\n          resourceName,\n          operationKey: operationKey as string,\n          params,\n        })) as any;\n    });\n\n    return {\n      queries,\n      operations,\n    } as unknown as Service;\n  };\n};\n"],"names":["logger","Logger","ClientQuery","constructor","resourceName","transportClient","key","params","changeParams","changePartialParams","getTransportPayload","fetch","onFulfilled","debug","send","then","fetchAndSubscribe","callback","subscribe","getKeys","o","Object","keys","createResourceClientService","options","queries","operations","forEach","queryKey","operationKey"],"mappings":"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"}