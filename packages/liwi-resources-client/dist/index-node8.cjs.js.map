{"version":3,"file":"index-node8.cjs.js","sources":["../src/ClientQuery.ts","../src/AbstractClient.ts","../src/index.ts"],"sourcesContent":["import { PRODUCTION } from 'pob-babel';\nimport Logger from 'nightingale-logger';\nimport { decode } from 'extended-json';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport AbstractClient from './AbstractClient';\n\ninterface SubscribeReturn {\n  cancel: () => void;\n  stop: () => void;\n  then: (cb: any) => Promise<any>;\n}\n\ntype UnsubscribeEmitOnConnectCallback = () => void;\ntype Callback = (err: Error | null, result: any) => void;\n\nconst logger = new Logger('liwi:resources:query');\n\nexport default class ClientQuery<\n  Model extends BaseModel,\n  KeyPath extends string,\n  Value = Model\n> extends AbstractQuery<Value> {\n  client: AbstractClient<Model, KeyPath>;\n\n  key: string;\n\n  private readonly params: any;\n\n  constructor(\n    client: AbstractClient<Model, KeyPath>,\n    key: string,\n    params?: any,\n  ) {\n    super();\n    this.client = client;\n    this.key = key;\n    this.params = params;\n  }\n\n  fetch(onFulfilled?: (value: any) => any): Promise<any> {\n    logger.debug('fetch', {\n      resourceName: this.client.resourceName,\n      key: this.key,\n    });\n    return this.client\n      .send('fetch', [this.key, this.params, undefined])\n      .then(onFulfilled);\n  }\n\n  _subscribe(callback: Callback, _includeInitial = false): SubscribeReturn {\n    const eventName = `subscribe:${this.client.resourceName}.${this.key}`;\n    logger.debug('subscribe', { eventName });\n    const listener = (err: Error | null, result?: string) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n\n    this.client.on(eventName, listener);\n\n    let _stopEmitSubscribeOnConnect: UnsubscribeEmitOnConnectCallback;\n    let promise: Promise<void> | undefined = this.client\n      .emitSubscribe(_includeInitial ? 'fetchAndSubscribe' : 'subscribe', [\n        this.key,\n        this.params,\n        eventName,\n      ])\n      .then(\n        (stopEmitSubscribe: UnsubscribeEmitOnConnectCallback) => {\n          _stopEmitSubscribeOnConnect = stopEmitSubscribe;\n          logger.debug('subscribed', {\n            resourceName: this.client.resourceName,\n            key: this.key,\n          });\n        },\n        (err: Error) => {\n          this.client.off(eventName, listener);\n          throw err;\n        },\n      );\n\n    const stop = () => {\n      if (!promise) return;\n      promise.then(() => {\n        logger.debug('unsubscribe', {\n          resourceName: this.client.resourceName,\n          key: this.key,\n        });\n        _stopEmitSubscribeOnConnect();\n        this.client.send('unsubscribe', [this.key]);\n        promise = undefined;\n        this.client.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: (cb) => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n","import { InternalCommonStoreClient } from 'liwi-store';\nimport {\n  BaseModel,\n  Update,\n  QueryOptions,\n  ResourceOperationKey,\n  Criteria,\n} from 'liwi-types';\nimport ClientCursor from './ClientCursor';\nimport ClientQuery from './ClientQuery';\n\ntype UnsubscribeEmitOnConnectCallback = () => void;\n\nexport default abstract class AbstractClient<\n  Model extends BaseModel,\n  KeyPath extends string\n>\n  implements\n    InternalCommonStoreClient<\n      Model,\n      KeyPath,\n      ClientCursor<Model, KeyPath, any>\n    > {\n  readonly resourceName: string;\n\n  readonly keyPath: KeyPath;\n\n  constructor(resourceName: string, keyPath: KeyPath) {\n    this.resourceName = resourceName;\n\n    if (!resourceName) {\n      throw new Error(`Invalid resourceName: \"${resourceName}\"`);\n    }\n\n    this.keyPath = keyPath;\n  }\n\n  createQuery(key: string, params?: any): ClientQuery<Model, KeyPath> {\n    return new ClientQuery(this, key, params);\n  }\n\n  abstract createCursor(options: QueryOptions<Model>): Promise<number>;\n\n  abstract send<T>(key: ResourceOperationKey, value: any[]): Promise<T>;\n\n  abstract on(event: string, listener: Function): void;\n\n  abstract off(event: string, listener: Function): void;\n\n  abstract emitSubscribe(\n    type: string,\n    args: any[],\n  ): Promise<UnsubscribeEmitOnConnectCallback>;\n\n  // cursor(\n  //   criteria?: Criteria<Model>,\n  //   sort?: Sort<Model>,\n  // ): Promise<ClientCursor<Model, KeyPath>> {\n  //   return Promise.resolve(new ClientCursor(this, { criteria, sort }));\n  // }\n\n  findByKey(key: any): Promise<Model | undefined> {\n    throw new Error('Use operations instead');\n  }\n\n  replaceOne(object: Model): Promise<Model> {\n    throw new Error('Use operations instead');\n  }\n\n  partialUpdateByKey(\n    key: any,\n    partialUpdate: Update<Model>,\n    criteria?: Criteria<Model>,\n  ): Promise<Model> {\n    throw new Error('Use operations instead');\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    throw new Error('Use operations instead');\n  }\n}\n","import { BaseModel } from 'liwi-types';\nimport { QueryDescriptions, OperationDescriptions } from 'liwi-resources';\nimport ClientQuery from './ClientQuery';\nimport AbstractClient from './AbstractClient';\n\nexport { default as AbstractClient } from './AbstractClient';\n\nexport type ResourcesClientQueries<\n  Queries extends QueryDescriptions,\n  KeyPath extends string = '_id'\n> = {\n  [P in keyof Queries]: (\n    params: Queries[P]['params'],\n  ) => ClientQuery<Queries[P]['value'], KeyPath>;\n};\n\nexport type ResourcesClientOperations<\n  Operations extends OperationDescriptions\n> = {\n  [P in keyof Operations]: (\n    params: Operations[P]['params'],\n  ) => Promise<Operations[P]['result']>;\n};\n\nexport interface ResourcesClientService<\n  Queries extends QueryDescriptions,\n  Operations extends OperationDescriptions = {}\n> {\n  queries: ResourcesClientQueries<Queries>;\n  operations: ResourcesClientOperations<Operations>;\n}\n\ninterface CreateResourceClientOptions<QueryKeys, OperationKeys> {\n  queries: QueryKeys[];\n  operations: OperationKeys[];\n}\n\nexport const createResourceClientService = <\n  Queries extends QueryDescriptions<keyof Queries>,\n  Operations extends OperationDescriptions<keyof Operations>,\n  Model extends BaseModel,\n  KeyPath extends string = '_id'\n>(\n  client: AbstractClient<Model, KeyPath>,\n  options: CreateResourceClientOptions<keyof Queries, keyof Operations>,\n): ResourcesClientService<Queries, Operations> => {\n  const queries: Partial<ResourcesClientQueries<Queries, KeyPath>> = {};\n  const operations: Partial<ResourcesClientOperations<Operations>> = {};\n\n  options.queries.forEach((queryKey) => {\n    queries[queryKey] = (params: any) =>\n      client.createQuery(queryKey as string, params);\n  });\n\n  options.operations.forEach((operationKey: keyof Operations) => {\n    operations[operationKey] = (params: any) =>\n      client.send('do', [operationKey, params]);\n  });\n\n  return {\n    queries: queries as ResourcesClientQueries<Queries>,\n    operations: operations as ResourcesClientOperations<Operations>,\n  };\n};\n\n/** @deprecated use createResourceClientService instead */\nexport const createResourceClient = createResourceClientService;\n"],"names":["logger","Logger","ClientQuery","AbstractQuery","constructor","client","key","params","fetch","onFulfilled","debug","resourceName","send","undefined","then","_subscribe","callback","_includeInitial","eventName","listener","err","result","decodedResult","decode","on","_stopEmitSubscribeOnConnect","promise","emitSubscribe","stopEmitSubscribe","off","stop","cancel","cb","Promise","resolve","AbstractClient","keyPath","Error","createQuery","findByKey","replaceOne","object","partialUpdateByKey","partialUpdate","criteria","deleteByKey","createResourceClientService","options","queries","operations","forEach","queryKey","operationKey","createResourceClient"],"mappings":"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"}