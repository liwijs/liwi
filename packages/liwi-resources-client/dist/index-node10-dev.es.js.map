{"version":3,"file":"index-node10-dev.es.js","sources":["../src/ClientCursor.ts","../src/ClientQuery.ts","../src/AbstractClient.ts"],"sourcesContent":["import { AbstractCursor } from 'liwi-store';\nimport { BaseModel, QueryOptions } from 'liwi-types';\nimport AbstractClient from './AbstractClient';\n\nexport default class ClientCursor<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractCursor<Model, KeyPath, AbstractClient<Model, KeyPath>> {\n  _idCursor?: number;\n\n  private options: QueryOptions<Model>;\n\n  private _result?: Model;\n\n  constructor(\n    client: AbstractClient<Model, KeyPath>,\n    options: QueryOptions<Model>,\n  ) {\n    super(client);\n    this.options = options;\n  }\n\n  /* options */\n\n  limit(newLimit: number): Promise<this> {\n    if (this._idCursor) throw new Error('Cursor already created');\n    this.options.limit = newLimit;\n    return Promise.resolve(this);\n  }\n\n  /* results */\n\n  _create() {\n    if (this._idCursor) throw new Error('Cursor already created');\n    return super.store.createCursor(this.options).then((idCursor: number) => {\n      if (!idCursor) return;\n      this._idCursor = idCursor;\n    });\n  }\n\n  emit(type: string, ...args: any[]): Promise<any> {\n    if (!this._idCursor) {\n      return this._create().then(() => this.emit(type, ...args));\n    }\n\n    return super.store.send('cursor', { type, id: this._idCursor }, args);\n  }\n\n  advance(count: number) {\n    this.emit('advance', count);\n    return this;\n  }\n\n  async next(): Promise<any> {\n    const result = await this.emit('next');\n    this._result = result;\n    super.key = result && result[super.store.keyPath];\n    return super.key;\n  }\n\n  result(): Promise<Model> {\n    if (!this._result) throw new Error('Cannot call result() before next()');\n    return Promise.resolve(this._result);\n  }\n\n  count(applyLimit: boolean = false) {\n    return this.emit('count', applyLimit);\n  }\n\n  close(): Promise<void> {\n    if (!super.store) return Promise.resolve();\n\n    const closedPromise = this._idCursor\n      ? this.emit('close')\n      : Promise.resolve();\n    this._idCursor = undefined;\n    this._result = undefined;\n    return closedPromise;\n  }\n\n  toArray(): Promise<Model[]> {\n    if (this._idCursor) throw new Error('Cursor created, cannot call toArray');\n    return super.store.send('cursor toArray', this.options);\n  }\n}\n","import { PRODUCTION } from 'pob-babel';\nimport Logger from 'nightingale-logger';\nimport { decode } from 'extended-json';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport AbstractClient from './AbstractClient';\n\ninterface SubscribeReturn {\n  cancel: () => void;\n  stop: () => void;\n  then: (cb: any) => Promise<any>;\n}\n\ntype UnsubscribeCallback = () => void;\ntype Callback = (err: Error | null, result: any) => void;\n\nconst logger = new Logger('liwi:resources:query');\n\nexport default class Query<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractQuery<Model> {\n  client: AbstractClient<Model, KeyPath>;\n\n  key: string;\n\n  constructor(client: AbstractClient<Model, KeyPath>, key: string) {\n    super();\n    this.client = client;\n    this.key = key;\n  }\n\n  fetch(onFulfilled?: (value: any) => any): Promise<any> {\n    return this.client.send('fetch', this.key).then(onFulfilled);\n  }\n\n  _subscribe(\n    callback: Callback,\n    _includeInitial = false,\n    args: any[],\n  ): SubscribeReturn {\n    const eventName = `subscribe:${this.client.resourceName}.${this.key}`;\n    const listener = (err: Error | null, result?: string) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n\n    this.client.on(eventName, listener);\n\n    let _stopEmitSubscribe: UnsubscribeCallback;\n    let promise: Promise<void> | undefined = this.client\n      .emitSubscribe(\n        _includeInitial ? 'fetchAndSubscribe' : 'subscribe',\n        this.key,\n        eventName,\n        args,\n      )\n      .then((stopEmitSubscribe: UnsubscribeCallback) => {\n        _stopEmitSubscribe = stopEmitSubscribe;\n        logger.info('subscribed');\n      })\n      .catch((err: Error) => {\n        this.client.off(eventName, listener);\n        throw err;\n      });\n\n    const stop = () => {\n      if (!promise) return;\n      _stopEmitSubscribe();\n      promise.then(() => {\n        promise = undefined;\n        this.client.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: (cb) => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n","import { InternalCommonStoreClient, UpsertResult } from 'liwi-store';\nimport {\n  BaseModel,\n  Criteria,\n  InsertType,\n  Sort,\n  Update,\n  QueryOptions,\n  ResourceOperationKey,\n} from 'liwi-types';\nimport ClientCursor from './ClientCursor';\nimport ClientQuery from './ClientQuery';\n\ntype UnsubscribeCallback = () => void;\n\nexport default abstract class AbstractClient<\n  Model extends BaseModel,\n  KeyPath extends string\n>\n  implements\n    InternalCommonStoreClient<Model, KeyPath, ClientCursor<Model, KeyPath>> {\n  readonly resourceName: string;\n\n  readonly keyPath: KeyPath;\n\n  constructor(resourceName: string, keyPath: KeyPath) {\n    this.resourceName = resourceName;\n\n    if (!resourceName) {\n      throw new Error(`Invalid resourceName: \"${resourceName}\"`);\n    }\n\n    this.keyPath = keyPath;\n  }\n\n  createQuery(key: string): ClientQuery<Model, KeyPath> {\n    return new ClientQuery(this, key);\n  }\n\n  abstract createCursor(options: QueryOptions<Model>): Promise<number>;\n\n  abstract send<T>(key: ResourceOperationKey, ...args: any[]): Promise<T>;\n\n  abstract on(event: string, listener: Function): void;\n\n  abstract off(event: string, listener: Function): void;\n\n  abstract emitSubscribe(\n    type: string,\n    ...args: any[]\n  ): Promise<UnsubscribeCallback>;\n\n  cursor(\n    criteria?: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<ClientCursor<Model, KeyPath>> {\n    return Promise.resolve(new ClientCursor(this, { criteria, sort }));\n  }\n\n  findAll(criteria?: Criteria<Model>, sort?: Sort<Model>): Promise<any[]> {\n    return this.send('cursor toArray', { criteria, sort });\n  }\n\n  findByKey(key: any): Promise<Model | undefined> {\n    return this.send('findByKey', key);\n  }\n\n  findOne(\n    criteria: Criteria<Model>,\n    sort?: Sort<Model>,\n  ): Promise<Model | undefined> {\n    return this.send('findOne', criteria, sort);\n  }\n\n  upsertOne(object: InsertType<Model, KeyPath>): Promise<Model> {\n    return this.send('upsertOne', object);\n  }\n\n  insertOne(object: Model): Promise<Model> {\n    return this.send('insertOne', object);\n  }\n\n  replaceOne(object: Model): Promise<Model> {\n    return this.send('replaceOne', object);\n  }\n\n  replaceSeveral(objects: Model[]): Promise<Model[]> {\n    return this.send('replaceSeveral', objects);\n  }\n\n  upsertOneWithInfo(\n    object: InsertType<Model, KeyPath>,\n  ): Promise<UpsertResult<Model>> {\n    return this.send('upsertOneWithInfo', object);\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Update<Model>): Promise<Model> {\n    return this.send('partialUpdateByKey', key, partialUpdate);\n  }\n\n  partialUpdateOne(\n    object: Model,\n    partialUpdate: Update<Model>,\n  ): Promise<Model> {\n    return this.partialUpdateByKey(object[this.keyPath], partialUpdate);\n  }\n\n  partialUpdateMany(\n    criteria: Criteria<Model>,\n    partialUpdate: Update<Model>,\n  ): Promise<void> {\n    return this.send('partialUpdateMany', criteria, partialUpdate);\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    return this.send('deleteByKey', key);\n  }\n\n  deleteOne(object: Model): Promise<void> {\n    return this.send('deleteByKey', object[this.keyPath]);\n  }\n\n  deleteMany(criteria: Criteria<Model>): Promise<void> {\n    return this.send('deleteMany', criteria);\n  }\n}\n"],"names":["ClientCursor","AbstractCursor","constructor","client","options","limit","newLimit","_idCursor","Error","Promise","resolve","_create","store","createCursor","then","idCursor","emit","type","args","send","id","advance","count","next","result","_result","key","keyPath","applyLimit","close","closedPromise","undefined","toArray","logger","Logger","Query","AbstractQuery","fetch","onFulfilled","_subscribe","callback","_includeInitial","eventName","resourceName","listener","err","decodedResult","decode","debug","on","_stopEmitSubscribe","promise","emitSubscribe","stopEmitSubscribe","info","catch","off","stop","cancel","cb","AbstractClient","createQuery","ClientQuery","cursor","criteria","sort","findAll","findByKey","findOne","upsertOne","object","insertOne","replaceOne","replaceSeveral","objects","upsertOneWithInfo","partialUpdateByKey","partialUpdate","partialUpdateOne","partialUpdateMany","deleteByKey","deleteOne","deleteMany"],"mappings":"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"}