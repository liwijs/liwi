{"version":3,"file":"index-browser.es.js","sources":["../src/createSimpleWebsocketClient.ts","../src/createWebsocketTransportClient.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport Backoff from 'backo2';\nimport type { ConnectionStates } from 'liwi-resources-client';\n\nexport type StateChangeListener = (newState: ConnectionStates) => void;\n\nexport type StateChangeListenerCreator = (\n  listener: StateChangeListener,\n) => () => void;\n\nexport interface SimpleWebsocketClientOptions {\n  url: string;\n  protocols?: string[] | string;\n  timeout?: number;\n  reconnection?: boolean;\n  reconnectionDelayMin?: number;\n  reconnectionDelayMax?: number;\n  reconnectionAttempts?: number;\n  inactivityTimeout?: number;\n  thirdWebsocketArgument?: unknown;\n  onMessage: (message: MessageEvent) => void;\n  onError?: (event: Event) => void;\n}\n\ntype Message = Parameters<WebSocket['send']>[0];\n\nexport interface WebsocketTransport {\n  connect: () => void;\n  close: () => void;\n  isConnected: () => boolean;\n  sendMessage: (message: Message) => void;\n  listenStateChange: StateChangeListenerCreator;\n}\n\ntype Timeouts = 'inactivity' | 'maxConnect' | 'tryReconnect';\n\nexport default function createSimpleWebsocketClient({\n  url,\n  protocols,\n  reconnection = true,\n  reconnectionDelayMin = 1000,\n  reconnectionDelayMax = 30 * 1000,\n  reconnectionAttempts = Infinity,\n  thirdWebsocketArgument,\n  onMessage,\n  onError,\n}: SimpleWebsocketClientOptions): WebsocketTransport {\n  let ws: WebSocket | null = null;\n  let currentState: ConnectionStates = 'closed';\n  let isConnected = false;\n  const stateChangeListeners = new Set<StateChangeListener>();\n\n  const backoff = new Backoff({\n    min: reconnectionDelayMin,\n    max: reconnectionDelayMax,\n    factor: 1.2,\n  });\n\n  const timeouts: Record<Timeouts, ReturnType<typeof setTimeout> | null> = {\n    maxConnect: null,\n    tryReconnect: null,\n    inactivity: null,\n  };\n\n  const setCurrentState = (newState: ConnectionStates): void => {\n    if (currentState === newState) return;\n    currentState = newState;\n    isConnected = currentState === 'connected';\n    stateChangeListeners.forEach((listener) => {\n      listener(newState);\n    });\n  };\n\n  const clearInternalTimeout = (timeoutKey: Timeouts): void => {\n    const timeout = timeouts[timeoutKey];\n    if (timeout) {\n      clearTimeout(timeout);\n      timeouts[timeoutKey] = null;\n    }\n  };\n\n  const closeWebsocket = (): void => {\n    clearInternalTimeout('inactivity');\n    if (ws) {\n      clearInternalTimeout('maxConnect');\n      clearInternalTimeout('tryReconnect');\n      ws = null;\n      setCurrentState('closed');\n    }\n  };\n\n  let tryReconnect: (() => void) | undefined;\n\n  const connect = (): void => {\n    const webSocket = thirdWebsocketArgument\n      ? // @ts-expect-error third argument for react-native\n        new WebSocket(url, protocols, thirdWebsocketArgument)\n      : new WebSocket(url, protocols);\n    ws = webSocket;\n    clearInternalTimeout('maxConnect');\n    setCurrentState('connecting');\n\n    webSocket.addEventListener('open', (): void => {\n      backoff.reset();\n      clearInternalTimeout('maxConnect');\n    });\n\n    const handleCloseOrError = (): void => {\n      if (currentState === 'closed') return;\n      if (!tryReconnect) {\n        closeWebsocket();\n      } else if (document.visibilityState === 'hidden') {\n        setCurrentState('wait-for-visibility');\n      } else {\n        tryReconnect();\n      }\n    };\n\n    webSocket.addEventListener('close', handleCloseOrError);\n\n    webSocket.addEventListener('message', (message): void => {\n      if (message.data === 'connection-ack') {\n        setCurrentState('connected');\n      } else {\n        onMessage(message);\n      }\n    });\n\n    webSocket.addEventListener('error', (event): void => {\n      if (onError) {\n        onError(event);\n      } else {\n        console.error('ws error', event);\n      }\n      handleCloseOrError();\n    });\n  };\n\n  if (reconnection) {\n    tryReconnect = () => {\n      if (backoff.attempts >= reconnectionAttempts) {\n        return;\n      }\n\n      if (currentState === 'reconnect-scheduled') {\n        return;\n      }\n\n      setCurrentState('reconnect-scheduled');\n      clearInternalTimeout('tryReconnect');\n      const delay = backoff.duration();\n      timeouts.tryReconnect = setTimeout(() => {\n        connect();\n      }, delay);\n    };\n  }\n\n  const visibilityChangeHandler: (() => void) | undefined = !tryReconnect\n    ? undefined\n    : () => {\n        if (document.visibilityState === 'hidden') {\n          if (currentState === 'reconnect-scheduled') {\n            setCurrentState('wait-for-visibility');\n            if (timeouts.tryReconnect !== null) {\n              clearTimeout(timeouts.tryReconnect);\n            }\n          }\n          return;\n        }\n        if (currentState !== 'wait-for-visibility') return;\n\n        if (tryReconnect) {\n          backoff.reset();\n          tryReconnect();\n        }\n      };\n\n  if (visibilityChangeHandler) {\n    window.addEventListener('visibilitychange', visibilityChangeHandler);\n  }\n  const wsTransport: WebsocketTransport = {\n    connect,\n\n    close() {\n      if (ws) {\n        if (currentState === 'connected') {\n          ws.send('close');\n        }\n        closeWebsocket();\n      }\n      if (visibilityChangeHandler) {\n        window.removeEventListener('visibilitychange', visibilityChangeHandler);\n      }\n    },\n\n    isConnected() {\n      return isConnected;\n    },\n\n    sendMessage(message): void {\n      if (!ws) throw new Error('Cannot send message');\n      ws.send(message);\n    },\n\n    listenStateChange: (listener) => {\n      stateChangeListeners.add(listener);\n      return (): void => {\n        stateChangeListeners.delete(listener);\n      };\n    },\n  };\n\n  return wsTransport;\n}\n","/* eslint-disable max-lines */\nimport type { ExtendedJsonValue } from 'extended-json';\nimport { encode, decode } from 'extended-json';\nimport { ResourcesServerError } from 'liwi-resources-client';\nimport type {\n  TransportClient,\n  TransportClientSubscribeCallback,\n  TransportClientSubscribeResult,\n  ToClientMessage,\n  ToServerMessages,\n  ToServerSubscribeMessages,\n  AckError,\n} from 'liwi-resources-client';\nimport { Logger } from 'nightingale-logger';\nimport type { SimpleWebsocketClientOptions } from './createSimpleWebsocketClient';\nimport createSimpleWebsocketClient from './createSimpleWebsocketClient';\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\ntype Resolve<T> = (result: T) => void;\ntype Reject = (reason?: any) => void;\n\ninterface Ack<T> {\n  reject: Reject;\n  resolve: Resolve<T>;\n}\n\ninterface Subscription<\n  T extends keyof ToServerSubscribeMessages<any>,\n  U,\n  Message extends { payload: any } = any,\n> extends Ack<U> {\n  type: T;\n  message: Message;\n  callback: TransportClientSubscribeCallback<U>;\n}\n\nexport type WebsocketTransportClientOptions = Omit<\n  SimpleWebsocketClientOptions,\n  'onMessage' | 'url'\n> &\n  Partial<Pick<SimpleWebsocketClientOptions, 'url'>>;\n\ntype PromiseExecutor<T> = (\n  resolve: (value: PromiseLike<T> | T) => void,\n  reject: (reason?: any) => void,\n) => void;\n\ntype Handler<T> = (id: number, error: AckError | null, result: T) => void;\n\nclass SubscribeResultPromise<\n  Result,\n  Payload extends Record<string & keyof Payload, ExtendedJsonValue | undefined>,\n> implements\n    TransportClientSubscribeResult<Result, Payload>,\n    PromiseLike<Result>\n{\n  private readonly promise: Promise<Result>;\n\n  readonly stop: TransportClientSubscribeResult<Result, Payload>['stop'];\n\n  readonly cancel: TransportClientSubscribeResult<Result, Payload>['cancel'];\n\n  // readonly changePayload: TransportClientSubscribeResult<\n  //   Result,\n  //   Payload\n  // >['changePayload'];\n\n  constructor({\n    executor,\n    stop,\n  }: {\n    executor: PromiseExecutor<Result>;\n    stop: TransportClientSubscribeResult<Result, Payload>['stop'];\n    // changePayload: TransportClientSubscribeResult<\n    //   Result,\n    //   Payload\n    // >['changePayload'];\n  }) {\n    this.promise = new Promise<Result>((resolve, reject) => {\n      executor(resolve, reject);\n    });\n    this.stop = stop;\n    this.cancel = stop;\n    // this.changePayload = changePayload;\n  }\n\n  then<TResult1 = Result, TResult2 = never>(\n    onfulfilled?:\n      | ((value: Result) => PromiseLike<TResult1> | TResult1)\n      | null\n      | undefined,\n    onrejected?:\n      | ((reason: any) => PromiseLike<TResult2> | TResult2)\n      | null\n      | undefined,\n  ): PromiseLike<TResult1 | TResult2> {\n    return this.promise.then(onfulfilled, onrejected);\n  }\n\n  catch<TResult2 = never>(\n    onrejected?:\n      | ((reason: any) => PromiseLike<TResult2> | TResult2)\n      | null\n      | undefined,\n  ): PromiseLike<Result | TResult2> {\n    return this.promise.catch(onrejected);\n  }\n}\n\n// TODO handle resubscriptions after reconnect (or in useEffect ?)\n// TODO handle send before connected\n// TODO reject on connection close OR keep promise hang ?\n\nconst createSafeError = (error: AckError): ResourcesServerError => {\n  return new ResourcesServerError(error.code, error.message);\n};\n\nexport default function createResourcesWebsocketClient({\n  url,\n  ...options\n}: WebsocketTransportClientOptions): TransportClient {\n  const isSSR = typeof window === 'undefined';\n\n  if (isSSR) {\n    return {\n      connect: () => {},\n      close: () => {},\n      listenStateChange: () => {\n        return () => {};\n      },\n      send: (type, message) => {\n        throw new Error('Cannot work on SSR.');\n      },\n\n      subscribe: (type, messageWithoutSubscriptionId, callback) => {\n        throw new Error('Cannot work on SSR.');\n      },\n    };\n  }\n\n  let currentId = 1;\n  let currentSubscriptionId = 1;\n  const acks = new Map<number, Ack<any>>(); // TODO in progress / unsent / sending => find better name\n  const subscriptions = new Map<number, Subscription<any, any>>();\n\n  if (!url) {\n    url = `ws${window.location.protocol === 'https:' ? 's' : ''}://${\n      window.location.host\n    }/ws`;\n  }\n  logger.info('create', { url });\n\n  const handlers: Record<ToClientMessage[0], Handler<any>> = {\n    ack: (id, error, result) => {\n      logger.debug('ack', { id });\n      const ack = acks.get(id);\n      if (!ack) {\n        logger.warn('no ack found', { id });\n      } else if (error) {\n        ack.reject(createSafeError(error));\n      } else {\n        ack.resolve(result);\n      }\n    },\n    subscription: (id, error, result) => {\n      logger.debug('subscription', { id });\n      const subscription = subscriptions.get(id);\n      if (!subscription) {\n        if (id < currentSubscriptionId) {\n          logger.warn('subscription previously closed', { id });\n        } else {\n          logger.warn('no subscription found', { id });\n        }\n      } else if (error) {\n        subscription.callback(createSafeError(error), null);\n      } else {\n        subscription.callback(null, result);\n      }\n    },\n  };\n\n  const wsClient = createSimpleWebsocketClient({\n    ...options,\n    url,\n    onMessage: (event) => {\n      logger.debug('message', { data: event.data });\n      const [type, id, error, result] = decode<ToClientMessage>(\n        event.data as string,\n      );\n      const handler = handlers[type];\n\n      if (handler) {\n        handler(id, error, result);\n      }\n    },\n  });\n\n  const sendMessage = <T extends keyof ToServerMessages>(\n    type: T,\n    id: number | null,\n    payload: ToServerMessages[T][0],\n  ): void => {\n    wsClient.sendMessage(encode([type, id, payload as any]));\n  };\n\n  const sendWithAck = <T extends keyof ToServerMessages>(\n    type: T,\n    message: ToServerMessages[T][0],\n  ): Promise<ToServerMessages[T][1]> => {\n    return new Promise((resolve, reject) => {\n      const id = currentId++;\n      acks.set(id, {\n        resolve: (result) => {\n          acks.delete(id);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          resolve(result);\n        },\n        reject: (err) => {\n          acks.delete(id);\n          reject(err);\n        },\n      });\n      sendMessage(type, id, message);\n    });\n  };\n\n  const sendThrowNotConnected = (): never => {\n    const error = new Error('Websocket not connected');\n    error.name = 'NetworkError';\n    throw error;\n  };\n\n  const resourcesClient: TransportClient = {\n    connect: () => {\n      logger.debug('connect');\n      wsClient.connect();\n    },\n    close: () => {\n      logger.debug('close');\n      wsClient.close();\n    },\n    listenStateChange: wsClient.listenStateChange,\n    send: sendThrowNotConnected,\n\n    subscribe: <\n      T extends keyof ToServerSubscribeMessages<Payload>,\n      Payload extends Record<string & keyof Payload, ExtendedJsonValue>,\n      Result,\n      V extends ToServerSubscribeMessages<Payload>[T][2],\n    >(\n      type: T,\n      messageWithoutSubscriptionId: Omit<\n        ToServerSubscribeMessages<Payload, Result>[T][0],\n        'subscriptionId'\n      >,\n      callback: TransportClientSubscribeCallback<V>,\n    ): TransportClientSubscribeResult<Result, Payload> => {\n      if (isSSR) throw new Error('subscribing is not allowed in SSR');\n      const id = currentId++;\n      const subscriptionId = currentSubscriptionId++;\n      const message = { ...messageWithoutSubscriptionId, subscriptionId };\n\n      return new SubscribeResultPromise<Result, Payload>({\n        executor: (resolve, reject) => {\n          subscriptions.set(subscriptionId, {\n            type,\n            message,\n            resolve,\n            reject,\n            callback,\n          });\n          if (wsClient.isConnected()) {\n            // TODO reject should remove subscription ?\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            sendWithAck(type, message).then(resolve as any, reject);\n          }\n        },\n        stop: (): void => {\n          acks.delete(id);\n          subscriptions.delete(subscriptionId);\n          // TODO what if reconnect (backend keeps subscription) and closed at this time ?\n          if (wsClient.isConnected()) {\n            sendMessage('subscribe:close', null, { subscriptionId });\n          }\n        },\n\n        // changePayload: (payload: Payload): Promise<void> => {\n        //   return new Promise((resolve, reject) => {\n        //     const subscription = subscriptions.get(subscriptionId);\n        //     if (!subscription) return reject(new Error('Invalid subscription'));\n        //     subscription.message.payload = payload;\n        //     if (wsClient.isConnected()) {\n        //       sendWithAck('subscribe:changePayload', payload).then(\n        //         resolve,\n        //         reject,\n        //       );\n        //     } else {\n        //       return reject(new Error('Not connected'));\n        //     }\n        //   });\n        // },\n      });\n    },\n  };\n\n  wsClient.listenStateChange((newState) => {\n    logger.info('newState', { newState });\n    if (newState === 'connected') {\n      resourcesClient.send = sendWithAck as TransportClient['send'];\n      subscriptions.forEach((subscription, subscriptionId) => {\n        sendWithAck(subscription.type, subscription.message).then(\n          subscription.resolve,\n          subscription.reject,\n        );\n      });\n    } else {\n      resourcesClient.send = sendThrowNotConnected;\n      acks.forEach((ack) => {\n        ack.reject(\n          new Error(`Failed to get ack, connection state is now ${newState}`),\n        );\n      });\n      acks.clear();\n\n      if (newState === 'closed') {\n        subscriptions.forEach((subscription) => {\n          subscription.reject(new Error('Subscription closed'));\n        });\n      }\n    }\n  });\n\n  return resourcesClient;\n}\n"],"names":["createSimpleWebsocketClient","_ref","url","protocols","_ref$reconnection","reconnection","_ref$reconnectionDela","reconnectionDelayMin","_ref$reconnectionDela2","reconnectionDelayMax","_ref$reconnectionAtte","reconnectionAttempts","Infinity","thirdWebsocketArgument","onMessage","onError","ws","currentState","isConnected","stateChangeListeners","Set","backoff","Backoff","min","max","factor","timeouts","maxConnect","tryReconnect","inactivity","setCurrentState","newState","forEach","listener","clearInternalTimeout","timeoutKey","timeout","clearTimeout","closeWebsocket","connect","webSocket","WebSocket","addEventListener","reset","handleCloseOrError","document","visibilityState","message","data","event","console","error","attempts","delay","duration","setTimeout","visibilityChangeHandler","undefined","window","close","send","removeEventListener","sendMessage","Error","listenStateChange","add","delete","logger","Logger","SubscribeResultPromise","executor","stop","promise","Promise","resolve","reject","cancel","_proto","prototype","then","onfulfilled","onrejected","catch","_catch","createSafeError","ResourcesServerError","code","createResourcesWebsocketClient","_ref2","options","_objectWithoutPropertiesLoose","_excluded","isSSR","subscribe","currentId","currentSubscriptionId","acks","Map","subscriptions","location","protocol","host","info","handlers","ack","id","result","debug","get","warn","subscription","callback","wsClient","_extends","_decode","decode","type","handler","payload","encode","sendWithAck","set","_resolve","apply","arguments","toString","_reject","err","sendThrowNotConnected","name","resourcesClient","messageWithoutSubscriptionId","subscriptionId","clear"],"mappings":"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"}