{"version":3,"file":"index-node14.mjs","sources":["../src/createSimpleWebsocketClient.ts","../src/createWebsocketTransportClient.ts"],"sourcesContent":["/* eslint-disable max-lines */\nimport Backoff from 'backo2';\nimport type { ConnectionStates } from 'liwi-resources-client';\n\nexport type StateChangeListener = (newState: ConnectionStates) => void;\n\nexport type StateChangeListenerCreator = (\n  listener: StateChangeListener,\n) => () => void;\n\nexport interface SimpleWebsocketClientOptions {\n  url: string;\n  protocols?: string | string[];\n  timeout?: number;\n  reconnection?: boolean;\n  reconnectionDelayMin?: number;\n  reconnectionDelayMax?: number;\n  reconnectionAttempts?: number;\n  inactivityTimeout?: number;\n  thirdWebsocketArgument?: unknown;\n  onMessage: (message: MessageEvent) => void;\n  onError?: (event: Event) => void;\n}\n\ntype Message = Parameters<WebSocket['send']>[0];\n\nexport interface WebsocketTransport {\n  connect: () => void;\n  close: () => void;\n  isConnected: () => boolean;\n  sendMessage: (message: Message) => void;\n  listenStateChange: StateChangeListenerCreator;\n}\n\ntype Timeouts = 'maxConnect' | 'tryReconnect' | 'inactivity';\n\nexport default function createSimpleWebsocketClient({\n  url,\n  protocols,\n  reconnection = true,\n  reconnectionDelayMin = 1000,\n  reconnectionDelayMax = 30 * 1000,\n  reconnectionAttempts = Infinity,\n  thirdWebsocketArgument,\n  onMessage,\n  onError,\n}: SimpleWebsocketClientOptions): WebsocketTransport {\n  let ws: WebSocket | null = null;\n  let currentState: ConnectionStates = 'closed';\n  let isConnected = false;\n  const stateChangeListeners = new Set<StateChangeListener>();\n\n  const backoff = new Backoff({\n    min: reconnectionDelayMin,\n    max: reconnectionDelayMax,\n    factor: 1.2,\n  });\n\n  const timeouts: Record<Timeouts, null | ReturnType<typeof setTimeout>> = {\n    maxConnect: null,\n    tryReconnect: null,\n    inactivity: null,\n  };\n\n  const setCurrentState = (newState: ConnectionStates): void => {\n    if (currentState === newState) return;\n    currentState = newState;\n    isConnected = currentState === 'connected';\n    stateChangeListeners.forEach((listener) => {\n      listener(newState);\n    });\n  };\n\n  const clearInternalTimeout = (timeoutKey: Timeouts): void => {\n    const timeout = timeouts[timeoutKey];\n    if (timeout) {\n      clearTimeout(timeout);\n      timeouts[timeoutKey] = null;\n    }\n  };\n\n  const closeWebsocket = (): void => {\n    clearInternalTimeout('inactivity');\n    if (ws) {\n      clearInternalTimeout('maxConnect');\n      clearInternalTimeout('tryReconnect');\n      ws = null;\n      setCurrentState('closed');\n    }\n  };\n\n  let tryReconnect: (() => void) | undefined;\n\n  const connect = (): void => {\n    const webSocket = thirdWebsocketArgument\n      ? // @ts-expect-error third argument for react-native\n        new WebSocket(url, protocols, thirdWebsocketArgument)\n      : new WebSocket(url, protocols);\n    ws = webSocket;\n    clearInternalTimeout('maxConnect');\n    setCurrentState('connecting');\n\n    webSocket.addEventListener('open', (): void => {\n      backoff.reset();\n      clearInternalTimeout('maxConnect');\n    });\n\n    const handleCloseOrError = (): void => {\n      if (currentState === 'closed') return;\n      if (!tryReconnect) {\n        closeWebsocket();\n      } else if (document.visibilityState === 'hidden') {\n        setCurrentState('wait-for-visibility');\n      } else {\n        tryReconnect();\n      }\n    };\n\n    webSocket.addEventListener('close', handleCloseOrError);\n\n    webSocket.addEventListener('message', (message): void => {\n      if (message.data === 'connection-ack') {\n        setCurrentState('connected');\n      } else {\n        onMessage(message);\n      }\n    });\n\n    webSocket.addEventListener('error', (event): void => {\n      if (onError) {\n        onError(event);\n      } else {\n        console.error('ws error', event);\n      }\n      handleCloseOrError();\n    });\n  };\n\n  if (reconnection) {\n    tryReconnect = () => {\n      if (backoff.attempts >= reconnectionAttempts) {\n        return;\n      }\n\n      if (currentState === 'reconnect-scheduled') {\n        return;\n      }\n\n      setCurrentState('reconnect-scheduled');\n      clearInternalTimeout('tryReconnect');\n      const delay = backoff.duration();\n      timeouts.tryReconnect = setTimeout(() => {\n        connect();\n      }, delay);\n    };\n  }\n\n  const visibilityChangeHandler: (() => void) | undefined = !tryReconnect\n    ? undefined\n    : () => {\n        if (document.visibilityState === 'hidden') {\n          if (currentState === 'reconnect-scheduled') {\n            setCurrentState('wait-for-visibility');\n            if (timeouts.tryReconnect !== null) {\n              clearTimeout(timeouts.tryReconnect);\n            }\n          }\n          return;\n        }\n        if (currentState !== 'wait-for-visibility') return;\n\n        if (tryReconnect) {\n          backoff.reset();\n          tryReconnect();\n        }\n      };\n\n  if (visibilityChangeHandler) {\n    window.addEventListener('visibilitychange', visibilityChangeHandler);\n  }\n  const wsTransport: WebsocketTransport = {\n    connect,\n\n    close() {\n      if (ws) {\n        if (currentState === 'connected') {\n          ws.send('close');\n        }\n        closeWebsocket();\n      }\n      if (visibilityChangeHandler) {\n        window.removeEventListener('visibilitychange', visibilityChangeHandler);\n      }\n    },\n\n    isConnected() {\n      return isConnected;\n    },\n\n    sendMessage(message): void {\n      if (!ws) throw new Error('Cannot send message');\n      ws.send(message);\n    },\n\n    listenStateChange: (listener) => {\n      stateChangeListeners.add(listener);\n      return (): void => {\n        stateChangeListeners.delete(listener);\n      };\n    },\n  };\n\n  return wsTransport;\n}\n","/* eslint-disable max-lines */\nimport type { ExtendedJsonValue } from 'extended-json';\nimport { encode, decode } from 'extended-json';\nimport { ResourcesServerError } from 'liwi-resources-client';\nimport type {\n  TransportClient,\n  TransportClientSubscribeCallback,\n  TransportClientSubscribeResult,\n  ToClientMessage,\n  ToServerMessages,\n  ToServerSubscribeMessages,\n  AckError,\n} from 'liwi-resources-client';\nimport { Logger } from 'nightingale-logger';\nimport type { SimpleWebsocketClientOptions } from './createSimpleWebsocketClient';\nimport createSimpleWebsocketClient from './createSimpleWebsocketClient';\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\ntype Resolve<T> = (result: T) => void;\ntype Reject = (reason?: any) => void;\n\ninterface Ack<T> {\n  reject: Reject;\n  resolve: Resolve<T>;\n}\n\ninterface Subscription<\n  T extends keyof ToServerSubscribeMessages<any>,\n  U,\n  Message extends { payload: any } = any,\n> extends Ack<U> {\n  type: T;\n  message: Message;\n  callback: TransportClientSubscribeCallback<U>;\n}\n\nexport type WebsocketTransportClientOptions = Omit<\n  SimpleWebsocketClientOptions,\n  'onMessage' | 'url'\n> &\n  Partial<Pick<SimpleWebsocketClientOptions, 'url'>>;\n\ntype PromiseExecutor<T> = (\n  resolve: (value: T | PromiseLike<T>) => void,\n  reject: (reason?: any) => void,\n) => void;\n\ntype Handler<T> = (id: number, error: AckError | null, result: T) => void;\n\nclass SubscribeResultPromise<\n  Result,\n  Payload extends Record<keyof Payload & string, ExtendedJsonValue | undefined>,\n> implements\n    TransportClientSubscribeResult<Result, Payload>,\n    PromiseLike<Result>\n{\n  private readonly promise: Promise<Result>;\n\n  readonly stop: TransportClientSubscribeResult<Result, Payload>['stop'];\n\n  readonly cancel: TransportClientSubscribeResult<Result, Payload>['cancel'];\n\n  // readonly changePayload: TransportClientSubscribeResult<\n  //   Result,\n  //   Payload\n  // >['changePayload'];\n\n  constructor({\n    executor,\n    stop,\n  }: {\n    executor: PromiseExecutor<Result>;\n    stop: TransportClientSubscribeResult<Result, Payload>['stop'];\n    // changePayload: TransportClientSubscribeResult<\n    //   Result,\n    //   Payload\n    // >['changePayload'];\n  }) {\n    this.promise = new Promise<Result>((resolve, reject) => {\n      executor(resolve, reject);\n    });\n    this.stop = stop;\n    this.cancel = stop;\n    // this.changePayload = changePayload;\n  }\n\n  then<TResult1 = Result, TResult2 = never>(\n    onfulfilled?:\n      | ((value: Result) => TResult1 | PromiseLike<TResult1>)\n      | null\n      | undefined,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | null\n      | undefined,\n  ): PromiseLike<TResult1 | TResult2> {\n    return this.promise.then(onfulfilled, onrejected);\n  }\n\n  catch<TResult2 = never>(\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | null\n      | undefined,\n  ): PromiseLike<Result | TResult2> {\n    return this.promise.catch(onrejected);\n  }\n}\n\n// TODO handle resubscriptions after reconnect (or in useEffect ?)\n// TODO handle send before connected\n// TODO reject on connection close OR keep promise hang ?\n\nconst createSafeError = (error: AckError): ResourcesServerError => {\n  return new ResourcesServerError(error.code, error.message);\n};\n\nexport default function createResourcesWebsocketClient({\n  url,\n  ...options\n}: WebsocketTransportClientOptions): TransportClient {\n  const isSSR = typeof window === 'undefined';\n\n  if (isSSR) {\n    return {\n      connect: () => {},\n      close: () => {},\n      listenStateChange: () => {\n        return () => {};\n      },\n      send: (type, message) => {\n        throw new Error('Cannot work on SSR.');\n      },\n\n      subscribe: (type, messageWithoutSubscriptionId, callback) => {\n        throw new Error('Cannot work on SSR.');\n      },\n    };\n  }\n\n  let currentId = 1;\n  let currentSubscriptionId = 1;\n  const acks = new Map<number, Ack<any>>(); // TODO in progress / unsent / sending => find better name\n  const subscriptions = new Map<number, Subscription<any, any>>();\n\n  if (!url) {\n    url = `ws${window.location.protocol === 'https:' ? 's' : ''}://${\n      window.location.host\n    }/ws`;\n  }\n  logger.info('create', { url });\n\n  const handlers: Record<ToClientMessage[0], Handler<any>> = {\n    ack: (id, error, result) => {\n      logger.debug('ack', { id });\n      const ack = acks.get(id);\n      if (!ack) {\n        logger.warn('no ack found', { id });\n      } else if (error) {\n        ack.reject(createSafeError(error));\n      } else {\n        ack.resolve(result);\n      }\n    },\n    subscription: (id, error, result) => {\n      logger.debug('subscription', { id });\n      const subscription = subscriptions.get(id);\n      if (!subscription) {\n        if (id < currentSubscriptionId) {\n          logger.warn('subscription previously closed', { id });\n        } else {\n          logger.warn('no subscription found', { id });\n        }\n      } else if (error) {\n        subscription.callback(createSafeError(error), null);\n      } else {\n        subscription.callback(null, result);\n      }\n    },\n  };\n\n  const wsClient = createSimpleWebsocketClient({\n    ...options,\n    url,\n    onMessage: (event) => {\n      logger.debug('message', { data: event.data });\n      const [type, id, error, result] = decode<ToClientMessage>(\n        event.data as string,\n      );\n      const handler = handlers[type];\n\n      if (handler) {\n        handler(id, error, result);\n      }\n    },\n  });\n\n  const sendMessage = <T extends keyof ToServerMessages>(\n    type: T,\n    id: number | null,\n    payload: ToServerMessages[T][0],\n  ): void => {\n    wsClient.sendMessage(encode([type, id, payload as any]));\n  };\n\n  const sendWithAck = <T extends keyof ToServerMessages>(\n    type: T,\n    message: ToServerMessages[T][0],\n  ): Promise<ToServerMessages[T][1]> => {\n    return new Promise((resolve, reject) => {\n      const id = currentId++;\n      acks.set(id, {\n        resolve: (result) => {\n          acks.delete(id);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          resolve(result);\n        },\n        reject: (err) => {\n          acks.delete(id);\n          reject(err);\n        },\n      });\n      sendMessage(type, id, message);\n    });\n  };\n\n  const sendThrowNotConnected = (): never => {\n    const error = new Error('Websocket not connected');\n    error.name = 'NetworkError';\n    throw error;\n  };\n\n  const resourcesClient: TransportClient = {\n    connect: () => {\n      logger.debug('connect');\n      wsClient.connect();\n    },\n    close: () => {\n      logger.debug('close');\n      wsClient.close();\n    },\n    listenStateChange: wsClient.listenStateChange,\n    send: sendThrowNotConnected,\n\n    subscribe: <\n      T extends keyof ToServerSubscribeMessages<Payload>,\n      Payload extends Record<keyof Payload & string, ExtendedJsonValue>,\n      Result,\n      V extends ToServerSubscribeMessages<Payload>[T][2],\n    >(\n      type: T,\n      messageWithoutSubscriptionId: Omit<\n        ToServerSubscribeMessages<Payload, Result>[T][0],\n        'subscriptionId'\n      >,\n      callback: TransportClientSubscribeCallback<V>,\n    ): TransportClientSubscribeResult<Result, Payload> => {\n      if (isSSR) throw new Error('subscribing is not allowed in SSR');\n      const id = currentId++;\n      const subscriptionId = currentSubscriptionId++;\n      const message = { ...messageWithoutSubscriptionId, subscriptionId };\n\n      return new SubscribeResultPromise<Result, Payload>({\n        executor: (resolve, reject) => {\n          subscriptions.set(subscriptionId, {\n            type,\n            message,\n            resolve,\n            reject,\n            callback,\n          });\n          if (wsClient.isConnected()) {\n            // TODO reject should remove subscription ?\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            sendWithAck(type, message).then(resolve as any, reject);\n          }\n        },\n        stop: (): void => {\n          acks.delete(id);\n          subscriptions.delete(subscriptionId);\n          // TODO what if reconnect (backend keeps subscription) and closed at this time ?\n          if (wsClient.isConnected()) {\n            sendMessage('subscribe:close', null, { subscriptionId });\n          }\n        },\n\n        // changePayload: (payload: Payload): Promise<void> => {\n        //   return new Promise((resolve, reject) => {\n        //     const subscription = subscriptions.get(subscriptionId);\n        //     if (!subscription) return reject(new Error('Invalid subscription'));\n        //     subscription.message.payload = payload;\n        //     if (wsClient.isConnected()) {\n        //       sendWithAck('subscribe:changePayload', payload).then(\n        //         resolve,\n        //         reject,\n        //       );\n        //     } else {\n        //       return reject(new Error('Not connected'));\n        //     }\n        //   });\n        // },\n      });\n    },\n  };\n\n  wsClient.listenStateChange((newState) => {\n    logger.info('newState', { newState });\n    if (newState === 'connected') {\n      resourcesClient.send = sendWithAck as TransportClient['send'];\n      subscriptions.forEach((subscription, subscriptionId) => {\n        sendWithAck(subscription.type, subscription.message).then(\n          subscription.resolve,\n          subscription.reject,\n        );\n      });\n    } else {\n      resourcesClient.send = sendThrowNotConnected;\n      acks.forEach((ack) => {\n        ack.reject(\n          new Error(`Failed to get ack, connection state is now ${newState}`),\n        );\n      });\n      acks.clear();\n\n      if (newState === 'closed') {\n        subscriptions.forEach((subscription) => {\n          subscription.reject(new Error('Subscription closed'));\n        });\n      }\n    }\n  });\n\n  return resourcesClient;\n}\n"],"names":["createSimpleWebsocketClient","url","protocols","reconnection","reconnectionDelayMin","reconnectionDelayMax","reconnectionAttempts","Infinity","thirdWebsocketArgument","onMessage","onError","ws","currentState","isConnected","stateChangeListeners","Set","backoff","Backoff","min","max","factor","timeouts","maxConnect","tryReconnect","inactivity","setCurrentState","newState","forEach","listener","clearInternalTimeout","timeoutKey","timeout","clearTimeout","closeWebsocket","connect","webSocket","WebSocket","addEventListener","reset","handleCloseOrError","document","visibilityState","message","data","event","console","error","attempts","delay","duration","setTimeout","visibilityChangeHandler","undefined","window","close","send","removeEventListener","sendMessage","Error","listenStateChange","add","delete","logger","Logger","SubscribeResultPromise","constructor","executor","stop","promise","Promise","resolve","reject","cancel","then","onfulfilled","onrejected","catch","createSafeError","ResourcesServerError","code","createResourcesWebsocketClient","options","isSSR","subscribe","currentId","currentSubscriptionId","acks","Map","subscriptions","location","protocol","host","info","handlers","ack","id","result","debug","get","warn","subscription","callback","wsClient","type","decode","handler","payload","encode","sendWithAck","set","err","sendThrowNotConnected","name","resourcesClient","messageWithoutSubscriptionId","subscriptionId","clear"],"mappings":"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"}