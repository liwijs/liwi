{"version":3,"file":"index-browser.cjs.js","sources":["../src/WebsocketClient.ts"],"sourcesContent":["import Logger from 'nightingale-logger';\nimport { encode, decode } from 'extended-json';\nimport { BaseModel, QueryOptions } from 'liwi-types';\nimport { AbstractClient } from 'liwi-resources-client';\n\nconst logger = new Logger('liwi:resources-websocket-client');\n\nexport interface Websocket {\n  emit: (event: string, ...args: any[]) => Promise<any>;\n  isConnected: () => boolean;\n  isDisconnected: () => boolean;\n  on: <T extends Function>(event: string, handler: T) => T;\n  off: (event: string, handler: Function) => void;\n}\n\ntype UnsubscribeCallback = () => void;\n\nexport default class WebsocketClient<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractClient<Model, KeyPath> {\n  readonly resourceName: string;\n\n  private readonly websocket: Websocket;\n\n  // eslint-disable-next-line typescript/member-ordering\n  constructor(websocket: Websocket, resourceName: string, keyPath: KeyPath) {\n    super(resourceName, keyPath);\n    this.websocket = websocket;\n    this.resourceName = resourceName;\n  }\n\n  emitSubscribe(type: string, args: any[]): Promise<UnsubscribeCallback> {\n    const websocket = this.websocket;\n    const emit = () => this.send(type, args);\n    const registerOnConnect = () => {\n      websocket.on('connect', emit);\n      return () => {\n        websocket.off('connect', emit);\n      };\n    };\n\n    if (websocket.isConnected()) {\n      return emit().then(registerOnConnect);\n    }\n\n    return Promise.resolve(registerOnConnect());\n  }\n\n  createCursor(options: QueryOptions<Model>): Promise<number> {\n    return this.websocket.emit('createCursor', options);\n  }\n\n  send(type: string, value: any[]) {\n    logger.debug('emit', { type, value });\n    if (this.websocket.isDisconnected()) {\n      throw new Error('Websocket is not connected');\n    }\n\n    if (!this.resourceName) {\n      throw new Error('Invalid resourceName');\n    }\n\n    return this.websocket\n      .emit('resource', {\n        type,\n        resourceName: this.resourceName,\n        json: encode(value),\n      })\n      .then((result: any) => result && decode(result));\n  }\n\n  on(event: string, handler: Function) {\n    this.websocket.on(event, handler);\n    return handler;\n  }\n\n  off(event: string, handler: Function) {\n    this.websocket.off(event, handler);\n  }\n}\n"],"names":["logger","Logger","WebsocketClient","websocket","resourceName","keyPath","emitSubscribe","type","args","emit","send","registerOnConnect","on","off","isConnected","then","Promise","resolve","createCursor","options","value","debug","isDisconnected","Error","json","encode","result","decode","event","handler","AbstractClient"],"mappings":";;;;;;;;;;;;;;;;AAKA,IAAMA,MAAM,GAAG,IAAIC,MAAJ,CAAW,iCAAX,CAAf;;IAYqBC;;;;;;2BASPC,SAAZ,EAAkCC,YAAlC,EAAwDC,OAAxD,EAA0E;gBACxE,2BAAMD,YAAN,EAAoBC,OAApB,CADwE;;UAEnEF,SAAL,GAAiBA,SAAjB;UACKC,YAAL,GAAoBA,YAApB;;;;;;SAGFE,gBAAA,uBAAcC,IAAd,EAA4BC,IAA5B,EAAuE;;;QAC/DL,SAAS,GAAG,KAAKA,SAAvB;;QACMM,IAAI,GAAG,SAAPA,IAAO;aAAM,MAAI,CAACC,IAAL,CAAUH,IAAV,EAAgBC,IAAhB,CAAN;KAAb;;QACMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;MAC9BR,SAAS,CAACS,EAAV,CAAa,SAAb,EAAwBH,IAAxB;aACO,YAAM;QACXN,SAAS,CAACU,GAAV,CAAc,SAAd,EAAyBJ,IAAzB;OADF;KAFF;;QAOIN,SAAS,CAACW,WAAV,EAAJ,EAA6B;aACpBL,IAAI,GAAGM,IAAP,CAAYJ,iBAAZ,CAAP;;;WAGKK,OAAO,CAACC,OAAR,CAAgBN,iBAAiB,EAAjC,CAAP;;;SAGFO,eAAA,sBAAaC,OAAb,EAA4D;WACnD,KAAKhB,SAAL,CAAeM,IAAf,CAAoB,cAApB,EAAoCU,OAApC,CAAP;;;SAGFT,OAAA,cAAKH,IAAL,EAAmBa,KAAnB,EAAiC;IAC/BpB,MAAM,CAACqB,KAAP,CAAa,MAAb,EAAqB;MAAEd,IAAI,EAAJA,IAAF;MAAQa,KAAK,EAALA;KAA7B;;QACI,KAAKjB,SAAL,CAAemB,cAAf,EAAJ,EAAqC;YAC7B,IAAIC,KAAJ,CAAU,4BAAV,CAAN;;;QAGE,CAAC,KAAKnB,YAAV,EAAwB;YAChB,IAAImB,KAAJ,CAAU,sBAAV,CAAN;;;WAGK,KAAKpB,SAAL,CACJM,IADI,CACC,UADD,EACa;MAChBF,IAAI,EAAJA,IADgB;MAEhBH,YAAY,EAAE,KAAKA,YAFH;MAGhBoB,IAAI,EAAEC,mBAAM,CAACL,KAAD;KAJT,EAMJL,IANI,CAMC,UAACW,MAAD;aAAiBA,MAAM,IAAIC,mBAAM,CAACD,MAAD,CAAjC;KAND,CAAP;;;SASFd,KAAA,YAAGgB,KAAH,EAAkBC,OAAlB,EAAqC;SAC9B1B,SAAL,CAAeS,EAAf,CAAkBgB,KAAlB,EAAyBC,OAAzB;WACOA,OAAP;;;SAGFhB,MAAA,aAAIe,KAAJ,EAAmBC,OAAnB,EAAsC;SAC/B1B,SAAL,CAAeU,GAAf,CAAmBe,KAAnB,EAA0BC,OAA1B;;;;EA1DMC;;;;"}