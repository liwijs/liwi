{"version":3,"file":"users-node16.mjs","sources":["../src/users.ts"],"sourcesContent":["import assert from 'assert';\nimport { MongoConnection, MongoStore } from 'liwi-mongo';\nimport type { MongoInsertType, MongoBaseModel } from 'liwi-mongo';\n\nconst connection = new MongoConnection(\n  new Map([['database', 'liwi-mongo-example']]),\n);\n\ninterface User extends MongoBaseModel {\n  created: Date;\n  updated: Date;\n  firstname: string;\n  lastname: string;\n  groups: string[];\n}\n\nconst users: MongoStore<User> = new MongoStore(connection, 'users');\n\nawait users.deleteMany({});\nconst allUsers = await users.findAll();\n\nassert(allUsers.length === 0, 'Database is not empty');\n\nconst user: MongoInsertType<User> = {\n  firstname: 'John',\n  lastname: 'Doe',\n  groups: [],\n};\nconst insertedUser = await users.insertOne(user);\n\nassert(insertedUser === user);\n\nassert(insertedUser.created);\nassert(insertedUser.updated);\n\nawait users.partialUpdateMany(\n  { firstname: 'John' },\n  { $set: { firstname: 'Johnny' } },\n);\nconst modifiedUser = await users.findOne({ firstname: 'Johnny' });\nassert(modifiedUser?._id === insertedUser._id);\n\nawait users.partialUpdateMany(\n  { firstname: 'Johnny' },\n  { $push: { groups: 'Music' } },\n);\n\nconst modifiedUserWithGroup = await users.findByKey(insertedUser._id);\nassert(modifiedUserWithGroup?.groups.length === 1);\n\nawait connection.close();\n"],"names":["connection","MongoConnection","Map","users","MongoStore","deleteMany","allUsers","findAll","assert","length","user","firstname","lastname","groups","insertedUser","insertOne","created","updated","partialUpdateMany","$set","modifiedUser","findOne","_id","$push","modifiedUserWithGroup","findByKey","close"],"mappings":";;;AAIA,MAAMA,UAAU,GAAG,IAAIC,eAAe,CACpC,IAAIC,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC,CAAC,CAC9C,CAAA;AAUD,MAAMC,KAAuB,GAAG,IAAIC,UAAU,CAACJ,UAAU,EAAE,OAAO,CAAC,CAAA;AAEnE,MAAMG,KAAK,CAACE,UAAU,CAAC,EAAE,CAAC,CAAA;AAC1B,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,OAAO,EAAE,CAAA;AAEtCC,MAAM,CAACF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE,uBAAuB,CAAC,CAAA;AAEtD,MAAMC,IAA2B,GAAG;AAClCC,EAAAA,SAAS,EAAE,MAAM;AACjBC,EAAAA,QAAQ,EAAE,KAAK;AACfC,EAAAA,MAAM,EAAE,EAAA;AACV,CAAC,CAAA;AACD,MAAMC,YAAY,GAAG,MAAMX,KAAK,CAACY,SAAS,CAACL,IAAI,CAAC,CAAA;AAEhDF,MAAM,CAACM,YAAY,KAAKJ,IAAI,CAAC,CAAA;AAE7BF,MAAM,CAACM,YAAY,CAACE,OAAO,CAAC,CAAA;AAC5BR,MAAM,CAACM,YAAY,CAACG,OAAO,CAAC,CAAA;AAE5B,MAAMd,KAAK,CAACe,iBAAiB,CAC3B;AAAEP,EAAAA,SAAS,EAAE,MAAA;AAAO,CAAC,EACrB;AAAEQ,EAAAA,IAAI,EAAE;AAAER,IAAAA,SAAS,EAAE,QAAA;AAAS,GAAA;AAAE,CAAC,CAClC,CAAA;AACD,MAAMS,YAAY,GAAG,MAAMjB,KAAK,CAACkB,OAAO,CAAC;AAAEV,EAAAA,SAAS,EAAE,QAAA;AAAS,CAAC,CAAC,CAAA;AACjEH,MAAM,CAACY,YAAY,EAAEE,GAAG,KAAKR,YAAY,CAACQ,GAAG,CAAC,CAAA;AAE9C,MAAMnB,KAAK,CAACe,iBAAiB,CAC3B;AAAEP,EAAAA,SAAS,EAAE,QAAA;AAAS,CAAC,EACvB;AAAEY,EAAAA,KAAK,EAAE;AAAEV,IAAAA,MAAM,EAAE,OAAA;AAAQ,GAAA;AAAE,CAAC,CAC/B,CAAA;AAED,MAAMW,qBAAqB,GAAG,MAAMrB,KAAK,CAACsB,SAAS,CAACX,YAAY,CAACQ,GAAG,CAAC,CAAA;AACrEd,MAAM,CAACgB,qBAAqB,EAAEX,MAAM,CAACJ,MAAM,KAAK,CAAC,CAAC,CAAA;AAElD,MAAMT,UAAU,CAAC0B,KAAK,EAAE"}