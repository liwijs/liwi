{"version":3,"file":"index-node8-dev.es.js","sources":["../src/Find.js","../src/applyChange.js","../src/FindAndSubscribe.js"],"sourcesContent":["import React, { Component, type Node, type ComponentType } from 'react';\nimport { AbstractQuery } from 'liwi-store';\n\ntype PropsType = {|\n  component: ComponentType,\n  loadingComponent?: ?ComponentType,\n  name: string,\n  query: AbstractQuery,\n|};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  state = {\n    fetched: false,\n    result: undefined,\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      this.setState({\n        fetched: true,\n        result,\n      });\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): Node {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n","import deepEqual from 'deep-equal';\n\ntype ObjectArrayType = Array<Object>;\n\ntype ChangeType = {\n  new_offset?: ?number,\n  new_val?: ?Object,\n  old_offset?: ?number,\n  old_val?: ?Object,\n  state?: ?string,\n  type: string,\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport default (state: ObjectArrayType, change: ChangeType) => {\n  const {\n    type,\n    old_offset: oldOffset,\n    new_offset: newOffset,\n    old_val: oldVal,\n    new_val: newVal,\n  } = change;\n\n  const copy = () => {\n    state = state.slice();\n  };\n\n  switch (type) {\n    case 'remove':\n    case 'uninitial': {\n      copy();\n      // Remove old values from the array\n      if (oldOffset != null) {\n        state.splice(oldOffset, 1);\n      } else {\n        const index = state.findIndex(x => deepEqual(x.id, oldVal.id));\n        if (index === -1) {\n          // Programming error. This should not happen\n          throw new Error(`change couldn't be applied: ${JSON.stringify(change)}`);\n        }\n        state.splice(index, 1);\n      }\n      break;\n    }\n\n    case 'initial': {\n      copy();\n\n      if (newOffset != null) {\n        state[newOffset] = newVal;\n      } else {\n        // If we don't have an offset, find the old val and\n        // replace it with the new val\n        const index = state.findIndex(x => deepEqual(x.id, newVal.id));\n        if (index === -1) {\n          state.push(newVal);\n        } else {\n          state[index] = newVal;\n        }\n      }\n      break;\n    }\n\n    case 'add': {\n      copy();\n      // Add new values to the array\n      if (newOffset != null) {\n        // If we have an offset, put it in the correct location\n        state.splice(newOffset, 0, newVal);\n      } else {\n        // otherwise for unordered results, push it on the end\n        state.push(newVal);\n      }\n      break;\n    }\n\n    case 'change': {\n      copy();\n\n      if (oldOffset === newOffset) {\n        state[newOffset] = newVal;\n        return state;\n      }\n\n      // Modify in place if a change is happening\n      if (oldOffset != null) {\n        // Remove the old document from the results\n        state.splice(oldOffset, 1);\n      }\n\n      if (newOffset != null) {\n        // Splice in the new val if we have an offset\n        state.splice(newOffset, 0, newVal);\n      } else {\n        // If we don't have an offset, find the old val and\n        // replace it with the new val\n        const index = state.findIndex(x => deepEqual(x.id, oldVal.id));\n        if (index === -1) {\n          // indicates a programming bug. The server gives us the\n          // ordering, so if we don't find the id it means something is\n          // buggy.\n          throw new Error(`change couldn't be applied: ${JSON.stringify(change)}`);\n        } else {\n          state[index] = newVal;\n        }\n      }\n      break;\n    }\n    case 'state': {\n      // This gets hit if we have not emitted yet, and should\n      // result in an empty array being output.\n      break;\n    }\n    default:\n      throw new Error(`unrecognized 'type' field from server ${JSON.stringify(change)}`);\n  }\n  return state;\n};\n","import React, { Component, type Node, type ComponentType } from 'react';\nimport { AbstractQuery } from 'liwi-store';\nimport applyChange from './applyChange';\n\ntype Props = {|\n  component: ComponentType,\n  loadingComponent?: ?ComponentType,\n  name: string,\n  query: AbstractQuery,\n|};\n\ntype State = {|\n  fetched: boolean,\n  result: Array<any>,\n|};\n\nexport default class FindAndSubscribeComponent extends Component<Props, State> {\n  state = {\n    fetched: false,\n    result: [],\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._subscribe = query.fetchAndSubscribe((err, change) => {\n      if (err) {\n        // eslint-disable-next-line no-alert\n        alert(`Unexpected error: ${err}`);\n        return;\n      }\n\n      const newResult = applyChange(this.state.result, change);\n\n      if (!this.state.fetched) {\n        this.setState({ fetched: true, result: newResult });\n      } else if (newResult !== this.state.result) {\n        this.setState({ result: newResult });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._subscribe) {\n      this._subscribe.stop();\n      delete this._subscribe;\n    }\n  }\n\n  render(): Node {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n"],"names":["FindComponent","Component","state","undefined","query","props","_find","fetch","result","setState","fetched","loadingComponent","React","createElement","component","name","change","oldOffset","newOffset","oldVal","newVal","copy","slice","type","splice","index","findIndex","x","deepEqual","id","Error","JSON","stringify","push","FindAndSubscribeComponent","_subscribe","fetchAndSubscribe","err","newResult","applyChange","stop"],"mappings":"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"}