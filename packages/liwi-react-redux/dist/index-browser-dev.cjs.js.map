{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/Find.js","../src/applyChange.js","../src/FindAndSubscribe.js"],"sourcesContent":["import React, { Component, type Node, type ComponentType } from 'react';\nimport { AbstractQuery } from 'liwi-store';\n\ntype PropsType = {|\n  component: ComponentType,\n  loadingComponent?: ?ComponentType,\n  name: string,\n  query: AbstractQuery,\n|};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  state = {\n    fetched: false,\n    result: undefined,\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      this.setState({\n        fetched: true,\n        result,\n      });\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): Node {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n","import deepEqual from 'deep-equal';\n\ntype ObjectArrayType = Array<Object>;\n\ntype ChangeType = {\n  new_offset?: ?number,\n  new_val?: ?Object,\n  old_offset?: ?number,\n  old_val?: ?Object,\n  state?: ?string,\n  type: string,\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport default (state: ObjectArrayType, change: ChangeType) => {\n  const {\n    type,\n    old_offset: oldOffset,\n    new_offset: newOffset,\n    old_val: oldVal,\n    new_val: newVal,\n  } = change;\n\n  const copy = () => {\n    state = state.slice();\n  };\n\n  switch (type) {\n    case 'remove':\n    case 'uninitial': {\n      copy();\n      // Remove old values from the array\n      if (oldOffset != null) {\n        state.splice(oldOffset, 1);\n      } else {\n        const index = state.findIndex(x => deepEqual(x.id, oldVal.id));\n        if (index === -1) {\n          // Programming error. This should not happen\n          throw new Error(`change couldn't be applied: ${JSON.stringify(change)}`);\n        }\n        state.splice(index, 1);\n      }\n      break;\n    }\n\n    case 'initial': {\n      copy();\n\n      if (newOffset != null) {\n        state[newOffset] = newVal;\n      } else {\n        // If we don't have an offset, find the old val and\n        // replace it with the new val\n        const index = state.findIndex(x => deepEqual(x.id, newVal.id));\n        if (index === -1) {\n          state.push(newVal);\n        } else {\n          state[index] = newVal;\n        }\n      }\n      break;\n    }\n\n    case 'add': {\n      copy();\n      // Add new values to the array\n      if (newOffset != null) {\n        // If we have an offset, put it in the correct location\n        state.splice(newOffset, 0, newVal);\n      } else {\n        // otherwise for unordered results, push it on the end\n        state.push(newVal);\n      }\n      break;\n    }\n\n    case 'change': {\n      copy();\n\n      if (oldOffset === newOffset) {\n        state[newOffset] = newVal;\n        return state;\n      }\n\n      // Modify in place if a change is happening\n      if (oldOffset != null) {\n        // Remove the old document from the results\n        state.splice(oldOffset, 1);\n      }\n\n      if (newOffset != null) {\n        // Splice in the new val if we have an offset\n        state.splice(newOffset, 0, newVal);\n      } else {\n        // If we don't have an offset, find the old val and\n        // replace it with the new val\n        const index = state.findIndex(x => deepEqual(x.id, oldVal.id));\n        if (index === -1) {\n          // indicates a programming bug. The server gives us the\n          // ordering, so if we don't find the id it means something is\n          // buggy.\n          throw new Error(`change couldn't be applied: ${JSON.stringify(change)}`);\n        } else {\n          state[index] = newVal;\n        }\n      }\n      break;\n    }\n    case 'state': {\n      // This gets hit if we have not emitted yet, and should\n      // result in an empty array being output.\n      break;\n    }\n    default:\n      throw new Error(`unrecognized 'type' field from server ${JSON.stringify(change)}`);\n  }\n  return state;\n};\n","import React, { Component, type Node, type ComponentType } from 'react';\nimport { AbstractQuery } from 'liwi-store';\nimport applyChange from './applyChange';\n\ntype Props = {|\n  component: ComponentType,\n  loadingComponent?: ?ComponentType,\n  name: string,\n  query: AbstractQuery,\n|};\n\ntype State = {|\n  fetched: boolean,\n  result: Array<any>,\n|};\n\nexport default class FindAndSubscribeComponent extends Component<Props, State> {\n  state = {\n    fetched: false,\n    result: [],\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._subscribe = query.fetchAndSubscribe((err, change) => {\n      if (err) {\n        // eslint-disable-next-line no-alert\n        alert(`Unexpected error: ${err}`);\n        return;\n      }\n\n      const newResult = applyChange(this.state.result, change);\n\n      if (!this.state.fetched) {\n        this.setState({ fetched: true, result: newResult });\n      } else if (newResult !== this.state.result) {\n        this.setState({ result: newResult });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._subscribe) {\n      this._subscribe.stop();\n      delete this._subscribe;\n    }\n  }\n\n  render(): Node {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n"],"names":["FindComponent","state","undefined","query","props","_find","fetch","result","setState","fetched","loadingComponent","React","createElement","component","name","Component","change","type","oldOffset","old_offset","newOffset","new_offset","oldVal","old_val","newVal","new_val","copy","slice","splice","index","findIndex","deepEqual","x","id","Error","JSON","stringify","push","FindAndSubscribeComponent","_subscribe","fetchAndSubscribe","err","newResult","applyChange","stop"],"mappings":"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"}