{"version":3,"file":"index-browser.es.js","sources":["../src/AbstractConnection.ts","../src/AbstractCursor.ts","../src/AbstractStoreCursor.ts"],"sourcesContent":["export default abstract class AbstractConnection {\n  abstract getConnection(): Promise<any>;\n\n  abstract close(): Promise<void>;\n}\n","import type { BaseModel } from './types';\n\nexport default abstract class AbstractCursor<\n  Model extends BaseModel,\n  Result extends Partial<Model> = Model,\n> {\n  abstract close(): Promise<void> | void;\n\n  abstract next(): Promise<any>;\n\n  nextResult(): Promise<Result> {\n    return this.next().then(() => this.result());\n  }\n\n  abstract limit(newLimit: number): Promise<this>;\n\n  abstract toArray(): Promise<Result[]>;\n\n  abstract result(): Promise<Result>;\n\n  async forEachKeys(\n    callback: (key: any) => Promise<void> | void,\n  ): Promise<void> {\n    while (true) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const key = await this.next();\n      if (!key) return;\n\n      await callback(key);\n    }\n  }\n\n  forEach(callback: (result: Result) => Promise<void> | void): Promise<void> {\n    return this.forEachKeys(() =>\n      this.result().then((result) => callback(result)),\n    );\n  }\n\n  *keysIterator(): Generator<Promise<any>, void, undefined> {\n    while (true) {\n      yield this.next();\n    }\n  }\n\n  *[Symbol.iterator](): Generator<Promise<Result>, void, undefined> {\n    for (const keyPromise of this.keysIterator()) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      yield keyPromise.then((key) => key && this.result());\n    }\n  }\n\n  // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n  /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n","import AbstractCursor from './AbstractCursor';\nimport type { InternalCommonStoreClient } from './InternalCommonStoreClient';\nimport type { BaseModel, AllowedKeyValue } from './types';\n\nexport default abstract class AbstractStoreCursor<\n  Store extends InternalCommonStoreClient<Model>,\n  KeyValue extends AllowedKeyValue,\n  Model extends BaseModel,\n  Result extends Partial<Model> = Model,\n> extends AbstractCursor<Model, Result> {\n  key: KeyValue | undefined;\n\n  protected _store: Store;\n\n  constructor(store: Store) {\n    super();\n    this._store = store;\n  }\n\n  get store(): Store {\n    return this._store;\n  }\n\n  overrideStore(store: Store): void {\n    this._store = store;\n  }\n\n  result(): Promise<Result> {\n    if (!this.key) throw new Error('Cannot call result() before next()');\n    return this.store.findByKey(this.key) as unknown as Promise<Result>;\n  }\n\n  delete(): Promise<void> {\n    return this.store.deleteByKey(this.key);\n  }\n}\n"],"names":["AbstractConnection","AbstractCursor","_Symbol$iterator","_proto","prototype","nextResult","next","then","result","forEachKeys","_forEachKeys","_asyncToGenerator","_regeneratorRuntime","mark","_callee","callback","_key","wrap","_callee$","_context","prev","key","sent","abrupt","stop","apply","arguments","forEach","keysIterator","keysIterator$","_context2","_callee2","_iterator","_step","keyPromise","_callee2$","_context3","_createForOfIteratorHelperLoose","done","value","Symbol","iterator","AbstractStoreCursor","_AbstractCursor","_inheritsLoose","store","_this","call","_store","overrideStore","Error","findByKey","delete","_delete","deleteByKey","_createClass","get"],"mappings":"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"}