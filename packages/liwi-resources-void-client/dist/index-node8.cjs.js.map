{"version":3,"file":"index-node8.cjs.js","sources":["../src/VoidClient.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport { BaseModel, QueryOptions } from 'liwi-types';\nimport { AbstractClient } from 'liwi-resources-client';\n\ntype UnsubscribeEmitOnConnectCallback = () => void;\n\nexport class VoidClient<\n  Model extends BaseModel,\n  KeyPath extends string\n> extends AbstractClient<Model, KeyPath> {\n  emitSubscribe(\n    type: string,\n    args: any[],\n  ): Promise<UnsubscribeEmitOnConnectCallback> {\n    throw new Error('Void client: emitSubscribe should not be called');\n  }\n\n  createCursor(options: QueryOptions<Model>): Promise<number> {\n    throw new Error('Void client: createCursor should not be called');\n  }\n\n  send(type: string, value: any[]): Promise<any> {\n    throw new Error('Void client: send should not be called');\n  }\n\n  on(event: string, handler: Function) {\n    throw new Error('Void client: on should not be called');\n  }\n\n  off(event: string, handler: Function) {\n    throw new Error('Void client: off should not be called');\n  }\n}\n\nexport function createMongoResourcesVoidClient() {\n  return class WebsocketResourcesClient<\n    Model extends BaseModel\n  > extends VoidClient<Model, '_id'> {\n    constructor(resourceName: string) {\n      super(resourceName, '_id');\n    }\n  };\n}\n"],"names":["VoidClient","AbstractClient","emitSubscribe","type","args","Error","createCursor","options","send","value","on","event","handler","off"],"mappings":";;;;;;AAAA;AAEA,AAIO,MAAMA,UAAN,SAGGC,kCAHH,CAGkC;EACvCC,aAAa,CACXC,IADW,EAEXC,IAFW,EAGgC;UACrC,IAAIC,KAAJ,CAAU,iDAAV,CAAN;;;EAGFC,YAAY,CAACC,OAAD,EAAgD;UACpD,IAAIF,KAAJ,CAAU,gDAAV,CAAN;;;EAGFG,IAAI,CAACL,IAAD,EAAeM,KAAf,EAA2C;UACvC,IAAIJ,KAAJ,CAAU,wCAAV,CAAN;;;EAGFK,EAAE,CAACC,KAAD,EAAgBC,OAAhB,EAAmC;UAC7B,IAAIP,KAAJ,CAAU,sCAAV,CAAN;;;EAGFQ,GAAG,CAACF,KAAD,EAAgBC,OAAhB,EAAmC;UAC9B,IAAIP,KAAJ,CAAU,uCAAV,CAAN;;;;;;;"}