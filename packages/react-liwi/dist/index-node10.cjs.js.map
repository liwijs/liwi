{"version":3,"file":"index-node10.cjs.js","sources":["../src/hooks/useResources.ts","../src/hooks/useResource.ts"],"sourcesContent":["/* eslint-disable import/export */\n\nimport { POB_TARGET } from 'pob-babel';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport { InitialState, FetchedState } from '../reducer';\nimport useRetrieveResource from './useRetrieveResource';\nimport useRetrieveResourceAndSubscribe from './useRetrieveResourceAndSubscribe';\n\ntype CreateQuery<M extends BaseModel> = () => AbstractQuery<M>;\ntype UseResourceResult<Results> = [true, []] | [false, Results];\n\nexport default function useResources<T1 extends BaseModel>(\n  createQueries: [CreateQuery<T1>],\n  queriesToSubscribe: [boolean],\n): UseResourceResult<[T1[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel\n>(\n  createQueries: [CreateQuery<T1>, CreateQuery<T2>],\n  queriesToSubscribe: [boolean, boolean],\n): UseResourceResult<[T1[], T2[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel\n>(\n  createQueries: [CreateQuery<T1>, CreateQuery<T2>, CreateQuery<T3>],\n  queriesToSubscribe: [boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel,\n  T4 extends BaseModel\n>(\n  createQueries: [\n    CreateQuery<T1>,\n    CreateQuery<T2>,\n    CreateQuery<T3>,\n    CreateQuery<T4>,\n  ],\n  queriesToSubscribe: [boolean, boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[], T4[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel,\n  T4 extends BaseModel,\n  T5 extends BaseModel\n>(\n  createQueries: [\n    CreateQuery<T1>,\n    CreateQuery<T2>,\n    CreateQuery<T3>,\n    CreateQuery<T4>,\n    CreateQuery<T5>,\n  ],\n  queriesToSubscribe: [boolean, boolean, boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[], T4[], T5[]]>;\nexport default function useResources<T extends BaseModel>(\n  createQueries: (CreateQuery<T>)[],\n  queriesToSubscribe: boolean[],\n): UseResourceResult<T[][]> {\n  if (POB_TARGET === 'node') return [true, []];\n\n  const states = createQueries.map((createQuery, index) => {\n    return queriesToSubscribe[index]\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe(createQuery)\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource(createQuery);\n  });\n\n  const nonFetchedStates: InitialState[] = states.filter(\n    (state) => !state.fetched,\n  ) as InitialState[];\n\n  if (nonFetchedStates.length !== 0) {\n    return [true, []];\n  }\n\n  return [false, states.map((state) => (state as FetchedState<any>).result)];\n}\n","import { POB_TARGET } from 'pob-babel';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport useRetrieveResource from './useRetrieveResource';\nimport useRetrieveResourceAndSubscribe from './useRetrieveResourceAndSubscribe';\n\ntype UseResourceResult<Result> = [true, undefined] | [false, Result];\n\nexport default function useResource<Model extends BaseModel>(\n  createQuery: () => AbstractQuery<Model>,\n  subscribe: boolean,\n): UseResourceResult<Model[]> {\n  if (POB_TARGET === 'node') return [true, undefined];\n\n  const state = subscribe\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResourceAndSubscribe(createQuery)\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResource(createQuery);\n\n  if (!state.fetched) {\n    return [true, undefined];\n  }\n\n  return [false, state.result];\n}\n"],"names":["useResources","createQueries","queriesToSubscribe","useResource","createQuery","subscribe","undefined"],"mappings":";;;;AAAA;AA6DA,AAAe,SAASA,YAAT,CACbC,aADa,EAEbC,kBAFa,EAGa;SACQ,CAAC,IAAD,EAAO,EAAP,CAAP;;;ACzDd,SAASC,WAAT,CACbC,WADa,EAEbC,SAFa,EAGe;SACM,CAAC,IAAD,EAAOC,SAAP,CAAP;;;;;;"}