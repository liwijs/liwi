{"version":3,"file":"index-browser-dev.es.js","sources":["../src/reducer.ts","../src/hooks/useRetrieveResource.ts","../src/applyChanges.ts","../src/hooks/useRetrieveResourceAndSubscribe.ts","../src/hooks/useResources.ts","../src/hooks/useResource.ts"],"sourcesContent":["import { Reducer } from 'react';\n\nexport interface InitialState {\n  fetched: false;\n  promise: Promise<void>;\n}\n\nexport interface FetchedState<Result> {\n  fetched: true;\n  result: Result;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n}\n\nexport type Action<Result> = ResolveAction<Result>;\nexport type State<Result> = InitialState | FetchedState<Result>;\nexport type Reducer<Result> = Reducer<State<Result>, Action<Result>>;\n\nexport function initReducer(initializer: () => Promise<void>): InitialState {\n  return {\n    fetched: false,\n    promise: initializer(),\n  };\n}\n\nexport default function reducer<Result>(\n  state: State<Result>,\n  action: Action<Result>,\n): State<Result> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        result: action.result,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import { useReducer } from 'react';\nimport { BaseModel } from 'liwi-types';\nimport { AbstractQuery } from 'liwi-store';\nimport reducer, { initReducer, Reducer } from '../reducer';\n\nexport default function useRetrieveResource<Model extends BaseModel>(\n  createQuery: () => AbstractQuery<Model>,\n) {\n  const [state, dispatch] = useReducer<Reducer<Model[]>, () => Promise<void>>(\n    reducer,\n    () =>\n      createQuery().fetch((result: Model[]) => {\n        (state as any).resolve();\n        dispatch({ type: 'resolve', result });\n      }),\n    initReducer,\n  );\n\n  return state;\n}\n","/* eslint-disable camelcase, complexity */\nimport { Change, Changes, QueryInfo } from 'liwi-types';\n\nconst copy = <Value>(state: Value[]): Value[] => state.slice();\n\nconst applyChange = <Value extends any>(\n  state: Value[],\n  change: Change<Value>,\n  queryInfo: QueryInfo,\n): Value[] => {\n  switch (change.type) {\n    case 'initial':\n      return change.initial;\n\n    case 'inserted': {\n      return [\n        ...change.objects,\n        ...(!queryInfo.limit ? state : state.slice(0, -queryInfo.limit)),\n      ];\n    }\n\n    case 'deleted': {\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.objects.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport default function applyChanges<Value>(\n  state: undefined | Value[],\n  changes: Changes<Value>,\n  queryInfo: QueryInfo,\n): undefined | Value[] {\n  if (state === undefined) return state;\n\n  return changes.reduce(\n    (stateValue: Value[], change: Change<Value>) =>\n      applyChange(stateValue, change, queryInfo),\n    state,\n  );\n}\n","import { useEffect, useReducer, useRef } from 'react';\nimport { BaseModel, Changes, InitialChange, QueryInfo } from 'liwi-types';\nimport { AbstractQuery, SubscribeResult } from 'liwi-store';\nimport Logger from 'nightingale-logger';\nimport applyChanges from '../applyChanges';\nimport reducer, { Reducer, initReducer } from '../reducer';\n\ninterface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nexport default function useRetrieveResourceAndSubscribe<\n  Model extends BaseModel\n>(\n  createQuery: () => AbstractQuery<Model>,\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n) {\n  const subscribeResultRef = useRef<SubscribeResult<Model[]> | undefined>(\n    undefined,\n  );\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const resultRef = useRef<Model[] | undefined>(undefined);\n\n  const queryInfoRef = useRef<QueryInfo | undefined>(undefined);\n\n  const unsubscribe = (): void => {\n    logger.log('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n    resultRef.current = undefined;\n\n    if (subscribeResultRef.current) {\n      subscribeResultRef.current.stop();\n      subscribeResultRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<Reducer<Model[]>, () => Promise<void>>(\n    reducer,\n    () =>\n      new Promise((resolve, reject) => {\n        const query = createQuery();\n        const queryLogger = logger.context({\n          resourceName: (query as any).client.resourceName,\n          key: (query as any).key,\n        });\n        queryLogger.debug('init');\n\n        const subscribe = (): void => {\n          queryLogger.debug('subscribing', {\n            subscribeResultRef: subscribeResultRef.current,\n            timeoutRef: timeoutRef.current,\n          });\n          subscribeResultRef.current = query.fetchAndSubscribe(\n            (err: Error | null, changes: Changes<Model>) => {\n              queryLogger.debug('received changes', {\n                err,\n                changes,\n              });\n              if (err) {\n                // eslint-disable-next-line no-alert\n                alert(`Unexpected error: ${err}`);\n                return;\n              }\n\n              const currentResult = resultRef.current;\n\n              if (\n                !currentResult &&\n                changes.length === 1 &&\n                changes[0].type === 'initial'\n              ) {\n                const initialChange: InitialChange = changes[0] as InitialChange;\n                resultRef.current = initialChange.initial;\n                queryInfoRef.current = initialChange.queryInfo || {\n                  limit: undefined,\n                  keyPath: '_id',\n                };\n                dispatch({\n                  type: 'resolve',\n                  result: initialChange.initial,\n                });\n              } else {\n                const newResult = applyChanges(\n                  currentResult,\n                  changes,\n                  queryInfoRef.current as NonNullable<\n                    typeof queryInfoRef.current\n                  >,\n                );\n\n                if (newResult && newResult !== currentResult) {\n                  resultRef.current = newResult;\n                  dispatch({ type: 'resolve', result: newResult });\n                }\n              }\n            },\n          );\n        };\n\n        const handleVisibilityChange = () => {\n          if (!document.hidden) {\n            if (timeoutRef.current !== undefined) {\n              queryLogger.debug('timeout cleared');\n              clearTimeout(timeoutRef.current);\n              timeoutRef.current = undefined;\n            } else if (!subscribeResultRef.current) {\n              queryLogger.info('resubscribe');\n              subscribe();\n            }\n            return;\n          }\n\n          if (subscribeResultRef.current === undefined) return;\n\n          queryLogger.debug('timeout visible');\n          timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n        };\n\n        document.addEventListener(\n          'visibilitychange',\n          handleVisibilityChange,\n          false,\n        );\n\n        if (!document.hidden) {\n          subscribe();\n        }\n      }),\n    initReducer,\n  );\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return state;\n}\n","/* eslint-disable import/export */\n\nimport { POB_TARGET } from 'pob-babel';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport { InitialState, FetchedState } from '../reducer';\nimport useRetrieveResource from './useRetrieveResource';\nimport useRetrieveResourceAndSubscribe from './useRetrieveResourceAndSubscribe';\n\ntype CreateQuery<M extends BaseModel> = () => AbstractQuery<M>;\ntype UseResourceResult<Results> = [true, []] | [false, Results];\n\nexport default function useResources<T1 extends BaseModel>(\n  createQueries: [CreateQuery<T1>],\n  queriesToSubscribe: [boolean],\n): UseResourceResult<[T1[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel\n>(\n  createQueries: [CreateQuery<T1>, CreateQuery<T2>],\n  queriesToSubscribe: [boolean, boolean],\n): UseResourceResult<[T1[], T2[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel\n>(\n  createQueries: [CreateQuery<T1>, CreateQuery<T2>, CreateQuery<T3>],\n  queriesToSubscribe: [boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel,\n  T4 extends BaseModel\n>(\n  createQueries: [\n    CreateQuery<T1>,\n    CreateQuery<T2>,\n    CreateQuery<T3>,\n    CreateQuery<T4>\n  ],\n  queriesToSubscribe: [boolean, boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[], T4[]]>;\nexport default function useResources<\n  T1 extends BaseModel,\n  T2 extends BaseModel,\n  T3 extends BaseModel,\n  T4 extends BaseModel,\n  T5 extends BaseModel\n>(\n  createQueries: [\n    CreateQuery<T1>,\n    CreateQuery<T2>,\n    CreateQuery<T3>,\n    CreateQuery<T4>,\n    CreateQuery<T5>\n  ],\n  queriesToSubscribe: [boolean, boolean, boolean, boolean, boolean],\n): UseResourceResult<[T1[], T2[], T3[], T4[], T5[]]>;\nexport default function useResources<T extends BaseModel>(\n  createQueries: (CreateQuery<T>)[],\n  queriesToSubscribe: boolean[],\n): UseResourceResult<T[][]> {\n  if (POB_TARGET === 'node') return [true, []];\n\n  const states = createQueries.map((createQuery, index) => {\n    return queriesToSubscribe[index]\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe(createQuery)\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource(createQuery);\n  });\n\n  const nonFetchedStates: InitialState[] = states.filter(\n    (state) => !state.fetched,\n  ) as InitialState[];\n\n  if (nonFetchedStates.length !== 0) {\n    return [true, []];\n  }\n\n  return [false, states.map((state) => (state as FetchedState<any>).result)];\n}\n","import { POB_TARGET } from 'pob-babel';\nimport { AbstractQuery } from 'liwi-store';\nimport { BaseModel } from 'liwi-types';\nimport useRetrieveResource from './useRetrieveResource';\nimport useRetrieveResourceAndSubscribe from './useRetrieveResourceAndSubscribe';\n\ntype UseResourceResult<Result> = [true, undefined] | [false, Result];\n\nexport default function useResource<Model extends BaseModel>(\n  createQuery: () => AbstractQuery<Model>,\n  subscribe: boolean,\n): UseResourceResult<Model[]> {\n  if (POB_TARGET === 'node') return [true, undefined];\n\n  const state = subscribe\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResourceAndSubscribe(createQuery)\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResource(createQuery);\n\n  if (!state.fetched) {\n    return [true, undefined];\n  }\n\n  return [false, state.result];\n}\n"],"names":["initReducer","initializer","fetched","promise","reducer","state","action","type","result","Error","useRetrieveResource","createQuery","useReducer","fetch","resolve","dispatch","copy","slice","applyChange","change","queryInfo","initial","objects","limit","keyPath","deletedKeys","keys","filter","value","includes","newState","forEach","newObject","index","findIndex","o","applyChanges","changes","undefined","reduce","stateValue","defaultOptions","visibleTimeout","logger","Logger","useRetrieveResourceAndSubscribe","subscribeResultRef","useRef","timeoutRef","resultRef","queryInfoRef","unsubscribe","log","current","stop","Promise","query","queryLogger","context","resourceName","client","key","debug","subscribe","fetchAndSubscribe","err","alert","currentResult","length","initialChange","newResult","document","addEventListener","handleVisibilityChange","hidden","clearTimeout","info","setTimeout","useEffect","useResources","createQueries","queriesToSubscribe","states","map","nonFetchedStates","useResource"],"mappings":"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"}