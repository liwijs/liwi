{"version":3,"file":"index-browser-dev.es.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts"],"sourcesContent":["import type { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport type { ReactElement, ReactChild } from 'react';\nimport React, { createContext, useState, useEffect } from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as any,\n);\n\nexport const TransportClientStateContext = createContext<ConnectionStates>(\n  'opening',\n);\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\ntype TransportClientProviderProps<P extends Record<never, unknown>> = {\n  createFn: (params: Omit<P, 'createFn' | 'children'>) => TransportClient;\n  children: ReactChild;\n} & P;\n\nexport function TransportClientProvider<P extends Record<never, unknown>>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionStates>(\n    'opening',\n  );\n\n  useEffect(() => {\n    const closeConnectionStateListener = client.listenStateChange(\n      setConnectionState,\n    );\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type {\n  Query,\n  QueryParams,\n  QueryMeta,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryInfo } from 'liwi-types';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error | ResourcesServerError;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type {\n  Query,\n  QueryParams,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-types';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error | ResourcesServerError;\n}\n\nexport type Action<Result> =\n  | ResolveAction<Result>\n  | RefetchAction\n  | FetchingAction\n  | ErrorAction;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | InitialState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | FetchedState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as InitialState<Result, Params> | FetchedState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import type { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext, useCallback } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = useCallback(\n    (\n      query: Query<Result, Params>,\n      callback: (result: QueryResult<Result>) => void,\n    ): Promise<void> => {\n      const fetchId = ++currentFetchId.current;\n      return query.fetch((result): void => {\n        if (currentFetchId.current === fetchId) {\n          callback(result);\n        }\n      });\n    },\n    [],\n  );\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady || skip) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((err) => {\n          dispatch({ type: 'error', error: err });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    if (skip) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n  }, [isTransportReady, fetch, skip, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (firstEffectChangeParams.current === false) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (skip) {\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, skip, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","/* eslint-disable complexity */\nimport type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Lazy } from 'mingo/lazy';\nimport { $sort } from 'mingo/operators/pipeline';\n\nfunction sortCollection<T>(collection: T[], sort: Record<string, 1 | -1>): T[] {\n  return $sort(Lazy(collection), sort, { idKey: '_id' }).value() as T[];\n}\n\nconst copy = <Value>(state: Value[]): Value[] => [...state];\n\nconst applyCollectionChange = <Value>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial': {\n      const keyPath = queryInfo.keyPath;\n      return !state\n        ? change.initial\n        : change.initial.map((value) => {\n            const existing = state.find((v) => v[keyPath] === value[keyPath]);\n            if (!existing) return value;\n            return JSON.stringify(existing) === JSON.stringify(value)\n              ? existing\n              : value;\n          });\n    }\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Item>(\n  state: undefined | Item[],\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: undefined | Item[]; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-ignore-next-line unicorn/no-reduce\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>\n>(\n  state: undefined | Value | null,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: undefined | Value | null; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-ignore-next-line unicorn/no-reduce\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable max-lines */\nimport type {\n  Query,\n  QueryParams,\n  QuerySubscription,\n} from 'liwi-resources-client';\nimport type { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-types';\nimport Logger from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport type { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const handleVisibilityChangeRef = useRef<any>(undefined);\n  const skipRef = useRef(skip);\n  skipRef.current = skip;\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (Array.isArray(initialChange.initial)\n                    ? applyCollectionChanges\n                    : applySingleItemChanges) as ApplyChanges<Result, any>;\n                } else {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta!,\n                    currentQueryInfo!,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo!,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (err) => {\n                dispatch({\n                  type: 'error',\n                  error: err,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (params: Params): void => {\n            queryLogger.info('change params', {\n              skip: skipRef.current,\n              params,\n            });\n\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(params);\n\n            if (!document.hidden && !skipRef.current) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (skipRef.current) return;\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          handleVisibilityChangeRef.current = handleVisibilityChange;\n\n          document.addEventListener(\n            'visibilitychange',\n            handleVisibilityChange,\n            false,\n          );\n\n          if (!document.hidden) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (firstEffectChangeParams.current === false) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      changeParamsRef.current(params);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip, ...deps]);\n\n  useEffect(() => {\n    return () => {\n      if (handleVisibilityChangeRef.current) {\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChangeRef.current,\n        );\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport type { Query, QueryParams } from 'liwi-resources-client';\nimport type { SetOptional } from 'liwi-types';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport type { UseResourceAndSubscribeOptions } from './useRetrieveResourceAndSubscribe';\nimport { useRetrieveResourceAndSubscribe } from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  skip?: boolean;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<\n  Params extends QueryParams<Params>\n> = Params extends Record<string, never>\n  ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n  : UseResourceOptionsRequiredParams<Params>;\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  {\n    params,\n    skip = false,\n    subscribe,\n    subscribeOptions,\n  }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result = subscribe\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResourceAndSubscribe<Result, Params>(\n        createQuery,\n        params as Params,\n        skip,\n        deps,\n        subscribeOptions,\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResource<Result, Params>(\n        createQuery,\n        params as Params,\n        skip,\n        deps,\n      );\n\n  return result;\n}\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport type {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport type { UseResourceOptions } from './useResource';\nimport { useResource } from './useResource';\n\ntype PaginatedQueryParams<\n  Params extends Record<string, unknown>\n> = QueryParams<Params> & Record<'page', number>;\n\ntype UsePaginatedResourceOptions<\n  Params extends PaginatedQueryParams<Params>\n> = UseResourceOptions<Params>;\n\ninterface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> =\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: undefined | Error;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[undefined | Error | any, undefined | ReturnType<T>]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (err) => {\n            setState({\n              loading: false,\n              error: err,\n            });\n            return [err, undefined];\n          },\n        );\n      } catch (err) {\n        setState({\n          loading: false,\n          error: err,\n        });\n        return Promise.resolve([err, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","TransportClientProvider","createFn","children","params","client","useState","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","Error","useRetrieveResource","createQuery","skip","deps","isTransportReady","useContext","wasReady","useRef","currentFetchId","fetch","useCallback","callback","fetchId","current","dispatch","useReducer","info","catch","err","firstEffectChangeParams","changeParams","sortCollection","collection","sort","$sort","Lazy","idKey","value","copy","applyCollectionChange","change","queryMeta","keyPath","initial","map","existing","find","v","JSON","stringify","total","length","newCollection","limit","slice","keys","deletedKeys","filter","includes","newState","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","querySubscriptionRef","timeoutRef","changeParamsRef","handleVisibilityChangeRef","skipRef","unsubscribe","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","subscribe","fetchAndSubscribe","initialChange","Array","isArray","newResult","newMeta","then","success","document","hidden","handleVisibilityChange","clearTimeout","setTimeout","addEventListener","removeEventListener","useMemo","useResource","subscribeOptions","usePaginatedResource","options","pagination","totalPages","Math","ceil","useOperation","operationCall","setState","loading","operationCallWrapper","resolve"],"mappings":"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"}