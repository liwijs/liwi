{"version":3,"file":"index-browser.cjs.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts"],"sourcesContent":["import { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport React, {\n  createContext,\n  ReactElement,\n  useState,\n  ReactChild,\n  useEffect,\n} from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as any,\n);\n\nexport const TransportClientStateContext = createContext<ConnectionStates>(\n  'opening',\n);\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\ntype TransportClientProviderProps<P extends {}> = {\n  createFn: (params: Omit<P, 'createFn' | 'children'>) => TransportClient;\n  children: ReactChild;\n} & P;\n\nexport function TransportClientProvider<P extends {}>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionStates>(\n    'opening',\n  );\n\n  useEffect(() => {\n    const closeConnectionStateListener = client.listenStateChange(\n      setConnectionState,\n    );\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type { Query, QueryParams, QueryMeta } from 'liwi-resources-client';\nimport { QueryInfo } from 'liwi-types';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: undefined | Error;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-types';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: undefined | Error;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error;\n}\n\nexport type Action<Result> =\n  | ResolveAction<Result>\n  | RefetchAction\n  | FetchingAction\n  | ErrorAction;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | InitialState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | FetchedState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as InitialState<Result, Params> | FetchedState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport {\n  createResourceResultFromState,\n  ResourceResult,\n} from './createResourceResultFromState';\nimport reducer, {\n  initReducer,\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = (\n    query: Query<Result, Params>,\n    callback: (result: QueryResult<Result>) => void,\n  ): Promise<void> => {\n    const fetchId = ++currentFetchId.current;\n    console.log('fetch', { fetchId });\n    return query.fetch((result): void => {\n      if (currentFetchId.current === fetchId) {\n        callback(result);\n      }\n    });\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((err) => {\n          dispatch({ type: 'error', error: err });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n  }, [isTransportReady, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (firstEffectChangeParams.current === false) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","/* eslint-disable camelcase, complexity */\nimport { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Lazy } from 'mingo/lazy';\nimport { $sort } from 'mingo/operators/pipeline';\n\nfunction sortCollection(collection: any, sort: any): any {\n  return $sort(Lazy(collection), sort, { config: { idKey: '_id' } }).value();\n}\n\nconst copy = <Value>(state: Value[]): Value[] => state.slice();\n\nconst applyCollectionChange = <Value extends any>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial':\n      return change.initial;\n\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Result extends Item[], Item>(\n  state: undefined | Item[],\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: undefined | Item[]; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable camelcase, complexity */\nimport { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>\n>(\n  state: undefined | Value | null,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: undefined | Value | null; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable max-lines */\nimport { Query, QueryParams, QuerySubscription } from 'liwi-resources-client';\nimport { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-types';\nimport Logger from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport {\n  createResourceResultFromState,\n  ResourceResult,\n} from './createResourceResultFromState';\nimport reducer, {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n  initReducer,\n} from './reducer';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const handleVisibilityChangeRef = useRef<any>(undefined);\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (Array.isArray(initialChange.initial)\n                    ? applyCollectionChanges\n                    : applySingleItemChanges) as ApplyChanges<Result, any>;\n                } else {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta as NonNullable<typeof currentMeta>,\n                    currentQueryInfo as NonNullable<typeof currentQueryInfo>,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo as NonNullable<\n                        typeof currentQueryInfo\n                      >,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (error) => {\n                dispatch({\n                  type: 'error',\n                  error,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (params: Params) => {\n            queryLogger.info('change params', { params });\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(params);\n\n            if (!document.hidden) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          handleVisibilityChangeRef.current = handleVisibilityChange;\n\n          document.addEventListener(\n            'visibilitychange',\n            handleVisibilityChange,\n            false,\n          );\n\n          if (!document.hidden) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (firstEffectChangeParams.current === false) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      console.log('call changeparams', params);\n      changeParamsRef.current(params);\n    } else {\n      console.log('changeParamsRef.current is undefined');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  useEffect(() => {\n    return () => {\n      if (handleVisibilityChangeRef.current) {\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChangeRef.current,\n        );\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport { Query, QueryParams } from 'liwi-resources-client';\nimport { SetOptional } from 'type-fest';\nimport { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport {\n  useRetrieveResourceAndSubscribe,\n  UseResourceAndSubscribeOptions,\n} from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<\n  Params extends QueryParams<Params>\n> = Params extends { [key: string]: never }\n  ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n  : UseResourceOptionsRequiredParams<Params>;\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  { params, subscribe, subscribeOptions }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result = subscribe\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResourceAndSubscribe<Result, Params>(\n        createQuery,\n        params as Params,\n        deps,\n        subscribeOptions,\n      )\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRetrieveResource<Result, Params>(createQuery, params as Params, deps);\n\n  return result;\n}\n","import { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport { useResource, UseResourceOptions } from './useResource';\n\ntype PaginatedQueryParams<Params> = QueryParams<Params> &\n  Record<'page', number>;\n\ntype UsePaginatedResourceOptions<\n  Params extends PaginatedQueryParams<Params>\n> = UseResourceOptions<Params>;\n\ninterface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>\n> =\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: undefined | any;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[undefined | Error | any, undefined | ReturnType<T>]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (err) => {\n            setState({\n              loading: false,\n              error: err,\n            });\n            return [err, undefined];\n          },\n        );\n      } catch (err) {\n        setState({\n          loading: false,\n          error: err,\n        });\n        return Promise.resolve([err, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","TransportClientProvider","createFn","children","params","useState","client","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","React","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","Error","useRetrieveResource","createQuery","deps","isTransportReady","useContext","wasReady","useRef","currentFetchId","fetch","callback","fetchId","current","console","log","useReducer","info","dispatch","catch","err","firstEffectChangeParams","changeParams","sortCollection","collection","sort","$sort","Lazy","config","idKey","value","copy","slice","applyCollectionChange","change","queryMeta","initial","total","length","newCollection","limit","keys","keyPath","deletedKeys","filter","includes","newState","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","querySubscriptionRef","timeoutRef","changeParamsRef","handleVisibilityChangeRef","unsubscribe","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","subscribe","fetchAndSubscribe","newResult","newMeta","initialChange","Array","isArray","then","success","document","hidden","handleVisibilityChange","clearTimeout","setTimeout","addEventListener","removeEventListener","useMemo","useResource","subscribeOptions","usePaginatedResource","options","pagination","totalPages","Math","ceil","useOperation","operationCall","loading","setState","operationCallWrapper","useCallback","resolve"],"mappings":";;;;;;;;;;;;;IASaA,sBAAsB,gBAAGC,mBAAa,CACjDC,SADiD;IAItCC,2BAA2B,gBAAGF,mBAAa,CACtD,SADsD;IAG3CG,2BAA2B,gBAAGH,mBAAa,CAAU,KAAV;AAOjD,SAASI,uBAAT,OAI2C;AAAA,MAHhDC,QAGgD,QAHhDA,QAGgD;AAAA,MAFhDC,QAEgD,QAFhDA,QAEgD;AAAA,MAD7CC,MAC6C;;AAAA,kBAC/BC,cAAQ,CAAC,YAAM;AAC9B,WAAOH,QAAQ,CAACE,MAAD,CAAf;AACD,GAFwB,CADuB;AAAA,MACzCE,MADyC;;AAAA,mBAIFD,cAAQ,CACpD,SADoD,CAJN;AAAA,MAIzCE,eAJyC;AAAA,MAIxBC,kBAJwB;;AAQhDC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAMC,4BAA4B,GAAGJ,MAAM,CAACK,iBAAP,CACnCH,kBADmC,CAArC;AAGAF,IAAAA,MAAM,CAACM,OAAP;AAEA,WAAO,YAAY;AACjBF,MAAAA,4BAA4B;AAC5BJ,MAAAA,MAAM,CAACO,KAAP;AACD,KAHD;AAID,GAVQ,EAUN,CAACP,MAAD,CAVM,CAAT;AAYA,sBACEQ,6BAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAER;AAAxC,kBACEQ,6BAAC,2BAAD,CAA6B,QAA7B;AAAsC,IAAA,KAAK,EAAEP;AAA7C,kBACEO,6BAAC,2BAAD,CAA6B,QAA7B;AACE,IAAA,KAAK,EAAEP,eAAe,KAAK;AAD7B,KAGGJ,QAHH,CADF,CADF,CADF;AAWD;;ACJM,IAAMY,6BAA6B,GAAG,SAAhCA,6BAAgC,CAI3CC,KAJ2C;AAAA,SAM1C;AACCC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADd;AAECC,IAAAA,cAAc,EAAE,CAACF,KAAK,CAACG,OAAP,IAAkBH,KAAK,CAACI,QAFzC;AAGCC,IAAAA,YAAY,EAAE,CAACL,KAAK,CAACG,OAAP,IAAkB,CAAC,CAACH,KAAK,CAACM,KAHzC;AAICH,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAJhB;AAKCC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QALjB;AAMCG,IAAAA,IAAI,EAAE,CAACP,KAAK,CAACG,OAAP,GAAiBrB,SAAjB,GAA6BkB,KAAK,CAACQ,MAN1C;AAOCC,IAAAA,IAAI,EAAE,CAACT,KAAK,CAACG,OAAP,GAAiBrB,SAAjB,GAA6BkB,KAAK,CAACS,IAP1C;AAQCC,IAAAA,SAAS,EAAE,CAACV,KAAK,CAACG,OAAP,GAAiBrB,SAAjB,GAA6BkB,KAAK,CAACU,SAR/C;AASCJ,IAAAA,KAAK,EAAEN,KAAK,CAACM;AATd,GAN0C;AAAA,CAAtC;;AC4BA,SAASK,WAAT,CACLC,WADK,EAEyB;AAC9B,MAAMC,IAAI,GAAGD,WAAW,EAAxB;AAD8B,MAEtBX,KAFsB,GAEHY,IAFG,CAEtBZ,KAFsB;AAAA,MAEfa,OAFe,GAEHD,IAFG,CAEfC,OAFe;AAG9B,SAAO;AACLX,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,QAAQ,EAAE,IAFL;AAGLH,IAAAA,KAAK,EAALA,KAHK;AAILO,IAAAA,MAAM,EAAE1B,SAJH;AAKL2B,IAAAA,IAAI,EAAE3B,SALD;AAML4B,IAAAA,SAAS,EAAE5B,SANN;AAOLgC,IAAAA,OAAO,EAAPA,OAPK;AAQLR,IAAAA,KAAK,EAAExB;AARF,GAAP;AAUD;AAED,AAAe,SAASiC,OAAT,CACbf,KADa,EAEbgB,MAFa,EAGU;AACvB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO;AACLd,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,QAAQ,EAAE,KAFL;AAGLH,QAAAA,KAAK,EAAED,KAAK,CAACC,KAHR;AAILO,QAAAA,MAAM,EAAEQ,MAAM,CAACR,MAJV;AAKLC,QAAAA,IAAI,EAAEO,MAAM,CAACP,IALR;AAMLC,QAAAA,SAAS,EAAEM,MAAM,CAACN,SANb;AAOLJ,QAAAA,KAAK,EAAExB;AAPF,OAAP;;AASF,SAAK,SAAL;AACE,aAAO;AACLqB,QAAAA,OAAO,EAAEH,KAAK,CAACG,OADV;AAELC,QAAAA,QAAQ,EAAE,IAFL;AAGLH,QAAAA,KAAK,EAAED,KAAK,CAACC,KAHR;AAILO,QAAAA,MAAM,EAAER,KAAK,CAACQ,MAJT;AAKLC,QAAAA,IAAI,EAAET,KAAK,CAACS,IALP;AAMLC,QAAAA,SAAS,EAAEV,KAAK,CAACU,SANZ;AAOLI,QAAAA,OAAO,EAAEE,MAAM,CAACF,OAPX;AAQLR,QAAAA,KAAK,EAAEN,KAAK,CAACM;AARR,OAAP;;AAUF,SAAK,UAAL;AACE,+BACKN,KADL;AAEEI,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAK,OAAL;AACE,+BACKJ,KADL;AAEEI,QAAAA,QAAQ,EAAE,KAFZ;AAGEE,QAAAA,KAAK,EAAEU,MAAM,CAACV;AAHhB;;AAKF;AACE,YAAM,IAAIY,KAAJ,CAAU,gBAAV,CAAN;AAlCJ;AAoCD;;AC9HM,SAASC,mBAAT,CACLC,WADK,EAELhC,MAFK,EAGLiC,IAHK,EAI2B;AAChC,MAAMC,gBAAgB,GAAGC,gBAAU,CAACvC,2BAAD,CAAnC;AACA,MAAMwC,QAAQ,GAAGC,YAAM,CAACH,gBAAD,CAAvB;AACA,MAAMI,cAAc,GAAGD,YAAM,CAAC,CAAD,CAA7B;;AAEA,MAAME,KAAK,GAAG,SAARA,KAAQ,CACZ1B,KADY,EAEZ2B,QAFY,EAGM;AAClB,QAAMC,OAAO,GAAG,EAAEH,cAAc,CAACI,OAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB;AAAEH,MAAAA,OAAO,EAAPA;AAAF,KAArB;AACA,WAAO5B,KAAK,CAAC0B,KAAN,CAAY,UAACnB,MAAD,EAAkB;AACnC,UAAIkB,cAAc,CAACI,OAAf,KAA2BD,OAA/B,EAAwC;AACtCD,QAAAA,QAAQ,CAACpB,MAAD,CAAR;AACD;AACF,KAJM,CAAP;AAKD,GAXD;;AALgC,oBAkBNyB,gBAAU,CAIlClB,OAJkC,EAKlC,YAAM;AACJ,QAAMd,KAAK,GAAGmB,WAAW,CAAChC,MAAD,CAAzB;AAEA,QAAI,CAACkC,gBAAL,EAAuB,OAAO;AAAErB,MAAAA,KAAK,EAALA;AAAF,KAAP;AAEvB,WAAO;AACLA,MAAAA,KAAK,EAALA,KADK;AAELa,MAAAA,OAAO,EAAEa,KAAK,CAAC1B,KAAD,EAAQ,gBAA4B;AAAA,YAAzBO,MAAyB,QAAzBA,MAAyB;AAAA,YAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,YAAXyB,IAAW,QAAXA,IAAW;AAChDC,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,SAAR;AAAmBT,UAAAA,MAAM,EAANA,MAAnB;AAA2BC,UAAAA,IAAI,EAAJA,IAA3B;AAAiCC,UAAAA,SAAS,EAAEwB;AAA5C,SAAD,CAAR;AACD,OAFa,CAAL,CAENE,KAFM,CAEA,UAACC,GAAD,EAAS;AAChBF,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,OAAR;AAAiBX,UAAAA,KAAK,EAAE+B;AAAxB,SAAD,CAAR;AACD,OAJQ;AAFJ,KAAP;AAQD,GAlBiC,EAmBlC1B,WAnBkC,CAlBJ;AAAA,MAkBzBX,KAlByB;AAAA,MAkBlBmC,QAlBkB;;AAwChC1C,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI+B,QAAQ,CAACM,OAAb,EAAsB;AACtB,QAAI,CAACR,gBAAL,EAAuB;AACvBE,IAAAA,QAAQ,CAACM,OAAT,GAAmB,IAAnB;AAEAK,IAAAA,QAAQ,CAAC;AACPlB,MAAAA,IAAI,EAAE,SADC;AAEPH,MAAAA,OAAO,EAAEa,KAAK,CAAC3B,KAAK,CAACC,KAAP,EAAc,iBAA4B;AAAA,YAAzBO,MAAyB,SAAzBA,MAAyB;AAAA,YAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,YAAXyB,IAAW,SAAXA,IAAW;AACtDC,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,SAAR;AAAmBT,UAAAA,MAAM,EAANA,MAAnB;AAA2BC,UAAAA,IAAI,EAAJA,IAA3B;AAAiCC,UAAAA,SAAS,EAAEwB;AAA5C,SAAD,CAAR;AACD,OAFa,CAAL,CAENE,KAFM,CAEA,UAACC,GAAD,EAAS;AAChBF,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,OAAR;AAAiBX,UAAAA,KAAK,EAAE+B;AAAxB,SAAD,CAAR;AACD,OAJQ;AAFF,KAAD,CAAR;AAQD,GAbQ,EAaN,CAACf,gBAAD,EAAmBtB,KAAK,CAACC,KAAzB,CAbM,CAAT;AAeA,MAAMqC,uBAAuB,GAAGb,YAAM,CAAC,KAAD,CAAtC;AAEAhC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI6C,uBAAuB,CAACR,OAAxB,KAAoC,KAAxC,EAA+C;AAC7CQ,MAAAA,uBAAuB,CAACR,OAAxB,GAAkC,IAAlC;AACA;AACD;;AAED9B,IAAAA,KAAK,CAACC,KAAN,CAAYsC,YAAZ,CAAyBnD,MAAzB;AAEA,QAAI,CAACoC,QAAQ,CAACM,OAAd,EAAuB;AACvBK,IAAAA,QAAQ,CAAC;AACPlB,MAAAA,IAAI,EAAE,SADC;AAEPH,MAAAA,OAAO,EAAEa,KAAK,CAAC3B,KAAK,CAACC,KAAP,EAAc,iBAA4B;AAAA,YAAzBO,MAAyB,SAAzBA,MAAyB;AAAA,YAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,YAAXyB,IAAW,SAAXA,IAAW;AACtDC,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,SAAR;AAAmBT,UAAAA,MAAM,EAANA,MAAnB;AAA2BC,UAAAA,IAAI,EAAJA,IAA3B;AAAiCC,UAAAA,SAAS,EAAEwB;AAA5C,SAAD,CAAR;AACD,OAFa,CAAL,CAENE,KAFM,CAEA,UAACC,GAAD,EAAS;AAChBF,QAAAA,QAAQ,CAAC;AAAElB,UAAAA,IAAI,EAAE,OAAR;AAAiBX,UAAAA,KAAK,EAAE+B;AAAxB,SAAD,CAAR;AACD,OAJQ;AAFF,KAAD,CAAR,CATc;AAkBf,GAlBQ,GAkBLrC,KAAK,CAACC,KAlBD,SAkBWoB,IAlBX,EAAT;AAoBA,SAAOtB,6BAA6B,CAACC,KAAD,CAApC;AACD;;AC/FD;AAEA;AAGA,SAASwC,cAAT,CAAwBC,UAAxB,EAAyCC,IAAzC,EAAyD;AACvD,SAAOC,cAAK,CAACC,SAAI,CAACH,UAAD,CAAL,EAAmBC,IAAnB,EAAyB;AAAEG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAV,GAAzB,CAAL,CAA4DC,KAA5D,EAAP;AACD;;AAED,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAQhD,KAAR;AAAA,SAAoCA,KAAK,CAACiD,KAAN,EAApC;AAAA,CAAb;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAC5BlD,KAD4B,EAE5BmD,MAF4B,EAG5BC,SAH4B,EAI5B1C,SAJ4B,EAKhB;AACZ,UAAQyC,MAAM,CAAClC,IAAf;AACE,SAAK,SAAL;AACE,aAAOkC,MAAM,CAACE,OAAd;;AAEF,SAAK,UAAL;AAAiB;AACfD,QAAAA,SAAS,CAACE,KAAV,IAAmBH,MAAM,CAAC3C,MAAP,CAAc+C,MAAjC;AAEA,YAAIC,aAAa,aAAOL,MAAM,CAAC3C,MAAd,EAAyBR,KAAzB,CAAjB;;AAEA,YAAIU,SAAS,CAACgC,IAAd,EAAoB;AAClBc,UAAAA,aAAa,GAAGhB,cAAc,CAACgB,aAAD,EAAgB9C,SAAS,CAACgC,IAA1B,CAA9B;AACD;;AAED,YAAI,CAAChC,SAAS,CAAC+C,KAAf,EAAsB,OAAOD,aAAP;AAEtB,eAAOA,aAAa,CAACP,KAAd,CAAoB,CAApB,EAAuBvC,SAAS,CAAC+C,KAAV,GAAkBN,MAAM,CAAC3C,MAAP,CAAc+C,MAAvD,CAAP;AACD;;AAED,SAAK,SAAL;AAAgB;AACdH,QAAAA,SAAS,CAACE,KAAV,IAAmBH,MAAM,CAACO,IAAP,CAAYH,MAA/B;AAEA,YAAMI,OAAO,GAAGjD,SAAS,CAACiD,OAA1B;AACA,YAAMC,WAAW,GAAGT,MAAM,CAACO,IAA3B;AACA,eAAO1D,KAAK,CAAC6D,MAAN,CAAa,UAACd,KAAD;AAAA,iBAAW,CAACa,WAAW,CAACE,QAAZ,CAAqBf,KAAK,CAACY,OAAD,CAA1B,CAAZ;AAAA,SAAb,CAAP;AACD;;AAED,SAAK,SAAL;AAAgB;AACd,YAAMA,QAAO,GAAGjD,SAAS,CAACiD,OAA1B;AACA,YAAMI,QAAQ,GAAGf,IAAI,CAAChD,KAAD,CAArB;AACAmD,QAAAA,MAAM,CAAC3C,MAAP,CAAcwD,OAAd,CAAsB,UAACC,SAAD,EAAe;AACnC,cAAMC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CACZ,UAACC,CAAD;AAAA,mBAAcA,CAAC,CAACT,QAAD,CAAD,KAAeM,SAAS,CAACN,QAAD,CAAtC;AAAA,WADY,CAAd;AAGA,cAAIO,KAAK,KAAK,CAAC,CAAf,EAAkB;AAClBH,UAAAA,QAAQ,CAACG,KAAD,CAAR,GAAkBD,SAAlB;AACD,SAND;AAOA,eAAOF,QAAP;AACD;;AAED;AACE,YAAM,IAAI7C,KAAJ,CAAU,cAAV,CAAN;AAxCJ;AA0CD,CAhDD;;;AAmDA,AAAO,SAASmD,sBAAT,CACLrE,KADK,EAELsE,OAFK,EAGLlB,SAHK,EAIL1C,SAJK,EAK2C;AAChD,MAAIV,KAAK,KAAKlB,SAAd,EAAyB,OAAO;AAAEkB,IAAAA,KAAK,EAALA,KAAF;AAASS,IAAAA,IAAI,EAAE2C;AAAf,GAAP;AAEzB,MAAMmB,YAAY,qBAAQnB,SAAR,CAAlB;AAEA,SAAO;AACLpD,IAAAA,KAAK,EAAEsE,OAAO,CAACE,MAAR,CACL,UAAChE,MAAD,EAAiB2C,MAAjB;AAAA,aACED,qBAAqB,CAAO1C,MAAP,EAAe2C,MAAf,EAAuBC,SAAvB,EAAkC1C,SAAlC,CADvB;AAAA,KADK,EAGLV,KAHK,CADF;AAMLS,IAAAA,IAAI,EAAE8D;AAND,GAAP;AAQD;;AChFD;AAGA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAC5BzE,KAD4B,EAE5BmD,MAF4B,EAG5BC,SAH4B,EAKX;AACjB,UAAQD,MAAM,CAAClC,IAAf;AACE,SAAK,SAAL;AACEmC,MAAAA,SAAS,CAACE,KAAV,GAAkBH,MAAM,CAACE,OAAP,KAAmB,IAAnB,GAA0B,CAA1B,GAA8B,CAAhD;AACA,aAAOF,MAAM,CAACE,OAAd;;AAEF,SAAK,SAAL;AAAgB;AACdD,QAAAA,SAAS,CAACE,KAAV,GAAkBH,MAAM,CAAC3C,MAAP,KAAkB,IAAlB,GAAyB,CAAzB,GAA6B,CAA/C;AACA,eAAO2C,MAAM,CAAC3C,MAAd;AACD;;AAED,SAAK,SAAL;AAAgB;AACd4C,QAAAA,SAAS,CAACE,KAAV,GAAkB,CAAlB;AACA,eAAO,IAAP;AACD;;AAED;AACE,YAAM,IAAIpC,KAAJ,CAAU,cAAV,CAAN;AAhBJ;AAkBD,CAxBD;;;AA2BA,AAAO,SAASwD,sBAAT,CAGL1E,KAHK,EAILsE,OAJK,EAKLlB,SALK,EAML1C,SANK,EAOiD;AACtD,MAAIV,KAAK,KAAKlB,SAAd,EAAyB,OAAO;AAAEkB,IAAAA,KAAK,EAALA,KAAF;AAASS,IAAAA,IAAI,EAAE2C;AAAf,GAAP;AAEzB,MAAMmB,YAAY,qBAAQnB,SAAR,CAAlB;AAEA,SAAO;AACLpD,IAAAA,KAAK,EAAEsE,OAAO,CAACE,MAAR,CACL,UAAChE,MAAD,EAAuB2C,MAAvB;AAAA,aACEsB,qBAAqB,CAAQjE,MAAR,EAAgB2C,MAAhB,EAAwBC,SAAxB,AAAA,CADvB;AAAA,KADK,EAGLpD,KAHK,CADF;AAMLS,IAAAA,IAAI,EAAE8D;AAND,GAAP;AAQD;;AClDD;AAGA,AAmBA,IAAMI,cAAc,GAAG;AACrBC,EAAAA,cAAc,QADO;;AAAA,CAAvB;AAIA,IAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,oCAAX,CAAf;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAChBT,OADgB;AAAA,SAGhBA,OAAO,CAACf,MAAR,KAAmB,CAAnB,IAAwBe,OAAO,CAAC,CAAD,CAAP,CAAWrD,IAAX,KAAoB,SAH5B;AAAA,CAAlB;;AAKA,AAAO,SAAS+D,+BAAT,CAIL5D,WAJK,EAKLhC,MALK,EAMLiC,IANK,SAQ2B;AAAA,gCADqBsD,cACrB;AAAA,MAD9BC,cAC8B,QAD9BA,cAC8B;;AAChC,MAAMK,oBAAoB,GAAGxD,YAAM,CAAgC3C,SAAhC,CAAnC;AACA,MAAMoG,UAAU,GAAGzD,YAAM,CACvB3C,SADuB,CAAzB;AAGA,MAAMqG,eAAe,GAAG1D,YAAM,CAC5B3C,SAD4B,CAA9B;AAIA,MAAMsG,yBAAyB,GAAG3D,YAAM,CAAM3C,SAAN,CAAxC;;AAEA,MAAMuG,WAAW,GAAG,SAAdA,WAAc,GAAY;AAC9BR,IAAAA,MAAM,CAAC3C,IAAP,CAAY,aAAZ,EAD8B;;AAI9BgD,IAAAA,UAAU,CAACpD,OAAX,GAAqBhD,SAArB;;AAEA,QAAImG,oBAAoB,CAACnD,OAAzB,EAAkC;AAChCmD,MAAAA,oBAAoB,CAACnD,OAArB,CAA6BwD,IAA7B;AACAL,MAAAA,oBAAoB,CAACnD,OAArB,GAA+BhD,SAA/B;AACD;AACF,GAVD;;AAXgC,oBAuBNmD,gBAAU,CAIlClB,OAJkC,EAKlC,YAAM;AACJ,QAAMd,KAAK,GAAGmB,WAAW,CAAChC,MAAD,CAAzB;AACA,QAAImG,YAAJ;AAEA,QAAIC,aAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,gBAAJ;AAEA,WAAO;AACLzF,MAAAA,KAAK,EAALA,KADK;AAELa,MAAAA,OAAO,EAAE,IAAI6E,OAAJ,CAAY,YAAqB;AACxC,YAAMC,WAAW,GAAGf,MAAM,CAACgB,OAAP,CAAe;AACjCC,UAAAA,YAAY,EAAG7F,KAAD,CAAe6F,YADI;AAEjCC,UAAAA,GAAG,EAAG9F,KAAD,CAAe8F;AAFa,SAAf,CAApB;AAIAH,QAAAA,WAAW,CAACI,KAAZ,CAAkB,MAAlB;;AAEA,YAAMC,SAAS,GAAG,SAAZA,SAAY,GAAY;AAC5BL,UAAAA,WAAW,CAACI,KAAZ,CAAkB,aAAlB,EAAiC;AAC/Bf,YAAAA,oBAAoB,EAAEA,oBAAoB,CAACnD,OADZ;AAE/BoD,YAAAA,UAAU,EAAEA,UAAU,CAACpD;AAFQ,WAAjC;AAIAmD,UAAAA,oBAAoB,CAACnD,OAArB,GAA+B7B,KAAK,CAACiG,iBAAN,CAC7B,UAAC7D,GAAD,EAAoBiC,OAApB,EAAsD;AAAA,+BA0BnC6B,SA1BmC,EA0BlBC,OA1BkB;;AACpDR,YAAAA,WAAW,CAACI,KAAZ,CAAkB,kBAAlB,EAAsC;AACpC3D,cAAAA,GAAG,EAAHA,GADoC;AAEpCiC,cAAAA,OAAO,EAAPA;AAFoC,aAAtC;;AAKA,gBAAIjC,GAAJ,EAAS;AACPF,cAAAA,QAAQ,CAAC;AAAElB,gBAAAA,IAAI,EAAE,OAAR;AAAiBX,gBAAAA,KAAK,EAAE+B;AAAxB,eAAD,CAAR;AACA;AACD;;AAED,gBAAI,CAACmD,aAAD,IAAkBT,SAAS,CAACT,OAAD,CAA/B,EAA0C;AACxC,kBAAM+B,aAA4B,GAAG/B,OAAO,CAAC,CAAD,CAA5C;AACAkB,cAAAA,aAAa,GAAGa,aAAa,CAAChD,OAA9B;AACAoC,cAAAA,WAAW,GAAGY,aAAa,CAAC5F,IAA5B;AACAiF,cAAAA,gBAAgB,GAAGW,aAAa,CAAC3F,SAAjC;AACAyB,cAAAA,QAAQ,CAAC;AACPlB,gBAAAA,IAAI,EAAE,SADC;AAEPT,gBAAAA,MAAM,EAAE6F,aAAa,CAAChD,OAFf;AAGP5C,gBAAAA,IAAI,EAAE4F,aAAa,CAAC5F,IAHb;AAIPC,gBAAAA,SAAS,EAAEgF;AAJJ,eAAD,CAAR;AAMAH,cAAAA,YAAY,GAAIe,KAAK,CAACC,OAAN,CAAcF,aAAa,CAAChD,OAA5B,IACZgB,sBADY,GAEZK,sBAFJ;AAGD,aAdD,MAcO;AAAA,8BACuCa,YAAY,CACtDC,aADsD,EAEtDlB,OAFsD,EAGtDmB,WAHsD,EAItDC,gBAJsD,CADnD,EACUS,SADV,iBACGnG,KADH,EAC2BoG,OAD3B,iBACqB3F,IADrB;;AAQL,kBAAI0F,SAAS,IAAIA,SAAS,KAAKX,aAA/B,EAA8C;AAC5CA,gBAAAA,aAAa,GAAGW,SAAhB;AACAV,gBAAAA,WAAW,GAAGW,OAAd;AACAjE,gBAAAA,QAAQ,CAAC;AACPlB,kBAAAA,IAAI,EAAE,SADC;AAEPT,kBAAAA,MAAM,EAAE2F,SAFD;AAGP1F,kBAAAA,IAAI,EAAE2F,OAHC;AAIP1F,kBAAAA,SAAS,EAAEgF;AAJJ,iBAAD,CAAR;AAQD;AACF;AACF,WA/C4B,CAA/B;AAiDAT,UAAAA,oBAAoB,CAACnD,OAArB,CAA6B0E,IAA7B,CACE,YAAM;AACJZ,YAAAA,WAAW,CAACa,OAAZ,CAAoB,YAApB;AACD,WAHH,EAIE,UAACnG,KAAD,EAAW;AACT6B,YAAAA,QAAQ,CAAC;AACPlB,cAAAA,IAAI,EAAE,OADC;AAEPX,cAAAA,KAAK,EAALA;AAFO,aAAD,CAAR;AAID,WATH;AAWD,SAjED;;AAmEA6E,QAAAA,eAAe,CAACrD,OAAhB,GAA0B,UAAC1C,MAAD,EAAoB;AAC5CwG,UAAAA,WAAW,CAAC1D,IAAZ,CAAiB,eAAjB,EAAkC;AAAE9C,YAAAA,MAAM,EAANA;AAAF,WAAlC;;AACA,cAAI6F,oBAAoB,CAACnD,OAAzB,EAAkC;AAChCmD,YAAAA,oBAAoB,CAACnD,OAArB,CAA6BwD,IAA7B;AACD;;AAEDrF,UAAAA,KAAK,CAACsC,YAAN,CAAmBnD,MAAnB;;AAEA,cAAI,CAACsH,QAAQ,CAACC,MAAd,EAAsB;AACpBxE,YAAAA,QAAQ,CAAC;AACPlB,cAAAA,IAAI,EAAE;AADC,aAAD,CAAR;AAGAgF,YAAAA,SAAS;AACV;AACF,SAdD;;AAgBA,YAAMW,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAY;AACzC,cAAI,CAACF,QAAQ,CAACC,MAAd,EAAsB;AACpB,gBAAIzB,UAAU,CAACpD,OAAX,KAAuBhD,SAA3B,EAAsC;AACpC8G,cAAAA,WAAW,CAACI,KAAZ,CAAkB,iBAAlB;AACAa,cAAAA,YAAY,CAAC3B,UAAU,CAACpD,OAAZ,CAAZ;AACAoD,cAAAA,UAAU,CAACpD,OAAX,GAAqBhD,SAArB;AACD,aAJD,MAIO,IAAI,CAACmG,oBAAoB,CAACnD,OAA1B,EAAmC;AACxC8D,cAAAA,WAAW,CAAC1D,IAAZ,CAAiB,aAAjB;AACAC,cAAAA,QAAQ,CAAC;AACPlB,gBAAAA,IAAI,EAAE;AADC,eAAD,CAAR;AAGAgF,cAAAA,SAAS;AACV;;AACD;AACD;;AAED,cAAIhB,oBAAoB,CAACnD,OAArB,KAAiChD,SAArC,EAAgD;AAEhD8G,UAAAA,WAAW,CAACI,KAAZ,CAAkB,iBAAlB;AACAd,UAAAA,UAAU,CAACpD,OAAX,GAAqBgF,UAAU,CAACzB,WAAD,EAAcT,cAAd,CAA/B;AACD,SApBD;;AAsBAQ,QAAAA,yBAAyB,CAACtD,OAA1B,GAAoC8E,sBAApC;AAEAF,QAAAA,QAAQ,CAACK,gBAAT,CACE,kBADF,EAEEH,sBAFF,EAGE,KAHF;;AAMA,YAAI,CAACF,QAAQ,CAACC,MAAd,EAAsB;AACpBV,UAAAA,SAAS;AACV;AACF,OA3HQ;AAFJ,KAAP;AA+HD,GA5IiC,EA6IlCtF,WA7IkC,CAvBJ;AAAA,MAuBzBX,KAvByB;AAAA,MAuBlBmC,QAvBkB;;AAuKhC,MAAMG,uBAAuB,GAAGb,YAAM,CAAC,KAAD,CAAtC;AAEAhC,EAAAA,eAAS,CAAC,YAAM;AACd,QAAI6C,uBAAuB,CAACR,OAAxB,KAAoC,KAAxC,EAA+C;AAC7CQ,MAAAA,uBAAuB,CAACR,OAAxB,GAAkC,IAAlC;AACA;AACD;;AAED,QAAIqD,eAAe,CAACrD,OAApB,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC5C,MAAjC;AACA+F,MAAAA,eAAe,CAACrD,OAAhB,CAAwB1C,MAAxB;AACD,KAHD,MAGO;AACL2C,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,KAXa;;AAaf,GAbQ,EAaNX,IAbM,CAAT;AAeA5B,EAAAA,eAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACX,UAAI2F,yBAAyB,CAACtD,OAA9B,EAAuC;AACrC4E,QAAAA,QAAQ,CAACM,mBAAT,CACE,kBADF,EAEE5B,yBAAyB,CAACtD,OAF5B;AAID;;AACD,UAAIoD,UAAU,CAACpD,OAAf,EAAwB;AACtB+E,QAAAA,YAAY,CAAC3B,UAAU,CAACpD,OAAZ,CAAZ;AACAoD,QAAAA,UAAU,CAACpD,OAAX,GAAqBhD,SAArB;AACD;;AAEDuG,MAAAA,WAAW;AACZ,KAbD;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAO4B,aAAO,CAAC;AAAA,WAAMlH,6BAA6B,CAACC,KAAD,CAAnC;AAAA,GAAD,EAA6C,CAACA,KAAD,CAA7C,CAAd;AACD;;AC7NM,SAASkH,WAAT,CACL9F,WADK,QAGLC,IAHK,EAI2B;AAAA,MAF9BjC,MAE8B,QAF9BA,MAE8B;AAAA,MAFtB6G,SAEsB,QAFtBA,SAEsB;AAAA,MAFXkB,gBAEW,QAFXA,gBAEW;AAehC,MAAM3G,MAAM,GAAGyF,SAAS;AAEpBjB,EAAAA,+BAA+B,CAC7B5D,WAD6B,EAE7BhC,MAF6B,EAG7BiC,IAH6B,EAI7B8F,gBAJ6B,CAFX;AASpBhG,EAAAA,mBAAmB,CAAiBC,WAAjB,EAA8BhC,MAA9B,EAAgDiC,IAAhD,CATvB;AAWA,SAAOb,MAAP;AACD;;ACJM,SAAS4G,oBAAT,CAILhG,WAJK,EAKLiG,OALK,EAMLhG,IANK,EAOoC;AAAA;;AACzC,MAAMb,MAAM,GAAG0G,WAAW,CAAC9F,WAAD,EAAciG,OAAd,EAAuBhG,IAAvB,CAA1B;AACA,MAAMiC,KAAK,mBAAG9C,MAAM,CAACC,IAAV,iDAAG,aAAa6C,KAA3B;AACA,MAAMG,KAAK,wBAAGjD,MAAM,CAACE,SAAV,sDAAG,kBAAkB+C,KAAhC;AAEA,MAAM6D,UAAU,GAAGL,aAAO,CAAyB,YAAM;AACvD,QAAI3D,KAAK,KAAKxE,SAAd,EAAyB,OAAOA,SAAP;AAEzB,WAAO;AACLyI,MAAAA,UAAU,EAAE9D,KAAK,GAAG+D,IAAI,CAACC,IAAL,CAAUnE,KAAK,GAAGG,KAAlB,CAAH,GAA8B;AAD1C,KAAP;AAGD,GANyB,EAMvB,CAACH,KAAD,EAAQG,KAAR,CANuB,CAA1B;AAQA,SAAOwD,aAAO,CACZ;AAAA,6BACQzG,MADR;AACgB8G,MAAAA,UAAU,EAAVA;AADhB;AAAA,GADY,EAGZ,CAAC9G,MAAD,EAAS8G,UAAT,CAHY,CAAd;AAKD;;AC/DM,SAASI,YAAT,CACLC,aADK,EAEsC;AAAA,kBACjBtI,cAAQ,CAAiB;AAAA,WAAO;AACxDuI,MAAAA,OAAO,EAAE,KAD+C;AAExDtH,MAAAA,KAAK,EAAExB;AAFiD,KAAP;AAAA,GAAjB,CADS;AAAA,MACpCkB,KADoC;AAAA,MAC7B6H,QAD6B;;AAM3C,MAAMC,oBAAoB,GAAGC,iBAAW,CACtC,YAA8B;AAAA,cAA1B3I,MAA0B;;AAC5ByI,IAAAA,QAAQ,CAAC;AACPD,MAAAA,OAAO,EAAE,IADF;AAEPtH,MAAAA,KAAK,EAAExB;AAFA,KAAD,CAAR;;AAIA,QAAI;AAAA,oCALFM,MAKE;AALFA,QAAAA,MAKE;AAAA;;AACF,aAAOuI,aAAa,MAAb,SAAkBvI,MAAlB,EAAkCoH,IAAlC,CACL,UAAChG,MAAD,EAAY;AACVqH,QAAAA,QAAQ,CAAC;AACPD,UAAAA,OAAO,EAAE,KADF;AAEPtH,UAAAA,KAAK,EAAExB;AAFA,SAAD,CAAR;AAIA,eAAO,CAACA,SAAD,EAAY0B,MAAZ,CAAP;AACD,OAPI,EAQL,UAAC6B,GAAD,EAAS;AACPwF,QAAAA,QAAQ,CAAC;AACPD,UAAAA,OAAO,EAAE,KADF;AAEPtH,UAAAA,KAAK,EAAE+B;AAFA,SAAD,CAAR;AAIA,eAAO,CAACA,GAAD,EAAMvD,SAAN,CAAP;AACD,OAdI,CAAP;AAgBD,KAjBD,CAiBE,OAAOuD,GAAP,EAAY;AACZwF,MAAAA,QAAQ,CAAC;AACPD,QAAAA,OAAO,EAAE,KADF;AAEPtH,QAAAA,KAAK,EAAE+B;AAFA,OAAD,CAAR;AAIA,aAAOsD,OAAO,CAACqC,OAAR,CAAgB,CAAC3F,GAAD,EAAMvD,SAAN,CAAhB,CAAP;AACD;AACF,GA9BqC,EA+BtC,CAAC6I,aAAD,CA/BsC,CAAxC;AAiCA,SAAO,CAACG,oBAAD,EAAuB9H,KAAvB,CAAP;AACD;;;;;;;;;;"}