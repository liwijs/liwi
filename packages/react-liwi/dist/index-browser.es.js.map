{"version":3,"file":"index-browser.es.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts","../src/index.ts"],"sourcesContent":["import type { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useContext, createContext, useState, useEffect } from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as unknown as TransportClient,\n);\n\nexport const TransportClientStateContext =\n  createContext<ConnectionStates>('opening');\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\nexport const useTransportClientState = (): ConnectionStates =>\n  useContext(TransportClientStateContext);\nexport const useTransportClientIsReady = (): boolean =>\n  useContext(TransportClientReadyContext);\n\ntype TransportClientProviderProps<P extends Record<never, unknown>> = {\n  createFn: (params: Omit<P, 'createFn' | 'children'>) => TransportClient;\n  children: ReactNode;\n} & P;\n\nexport function TransportClientProvider<P extends Record<never, unknown>>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] =\n    useState<ConnectionStates>('opening');\n\n  useEffect(() => {\n    const closeConnectionStateListener =\n      client.listenStateChange(setConnectionState);\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type {\n  Query,\n  QueryParams,\n  QueryMeta,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryInfo } from 'liwi-types';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error | ResourcesServerError;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type {\n  Query,\n  QueryParams,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-types';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error | ResourcesServerError;\n}\n\nexport type Action<Result> =\n  | ResolveAction<Result>\n  | RefetchAction\n  | FetchingAction\n  | ErrorAction;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | InitialState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | FetchedState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>,\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as InitialState<Result, Params> | FetchedState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import type { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext, useCallback } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = useCallback(\n    (\n      query: Query<Result, Params>,\n      callback: (result: QueryResult<Result>) => void,\n    ): Promise<void> => {\n      const fetchId = ++currentFetchId.current;\n      return query.fetch((result): void => {\n        if (currentFetchId.current === fetchId) {\n          callback(result);\n        }\n      });\n    },\n    [],\n  );\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady || skip) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((err) => {\n          dispatch({ type: 'error', error: err });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    if (skip) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n  }, [isTransportReady, fetch, skip, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (skip) {\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, skip, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Lazy } from 'mingo/lazy.js';\nimport { $sort } from 'mingo/operators/pipeline/sort.js';\n\nfunction sortCollection<T>(collection: T[], sort: Record<string, 1 | -1>): T[] {\n  return $sort(Lazy(collection), sort, { idKey: '_id' }).value() as T[];\n}\n\nconst copy = <Value>(state: Value[]): Value[] => [...state];\n\nconst applyCollectionChange = <Value>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial': {\n      const keyPath = queryInfo.keyPath;\n\n      // update meta\n      Object.assign(queryMeta, change.meta);\n\n      // update state if exists, keeping ref to avoid rerendering everything\n      return !state\n        ? change.initial\n        : change.initial.map((value) => {\n            const existing = state.find((v) => v[keyPath] === value[keyPath]);\n            if (!existing) return value;\n            return JSON.stringify(existing) === JSON.stringify(value)\n              ? existing\n              : value;\n          });\n    }\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Item>(\n  state: undefined | Item[],\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: undefined | Item[]; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, newQueryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>,\n>(\n  state: undefined | Value | null,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: undefined | Value | null; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable max-lines */\nimport type {\n  Query,\n  QueryParams,\n  QuerySubscription,\n} from 'liwi-resources-client';\nimport type { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Logger } from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport type { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const handleVisibilityChangeRef = useRef<(() => void) | undefined>(undefined);\n  const skipRef = useRef(skip);\n  skipRef.current = skip;\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (\n                    Array.isArray(initialChange.initial)\n                      ? applyCollectionChanges\n                      : applySingleItemChanges\n                  ) as ApplyChanges<Result, any>;\n                } else {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta!,\n                    currentQueryInfo!,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo!,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (err) => {\n                dispatch({\n                  type: 'error',\n                  error: err,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (changedParams: Params): void => {\n            queryLogger.info('change params', {\n              skip: skipRef.current,\n              params: changedParams,\n            });\n\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(changedParams);\n\n            if (!document.hidden && !skipRef.current) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (skipRef.current) return;\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          handleVisibilityChangeRef.current = handleVisibilityChange;\n\n          document.addEventListener(\n            'visibilitychange',\n            handleVisibilityChange,\n            false,\n          );\n\n          if (!document.hidden) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      changeParamsRef.current(params);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip, ...deps]);\n\n  useEffect(() => {\n    return () => {\n      if (handleVisibilityChangeRef.current) {\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChangeRef.current,\n        );\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport type { Query, QueryParams } from 'liwi-resources-client';\nimport type { SetOptional } from 'liwi-types';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport type { UseResourceAndSubscribeOptions } from './useRetrieveResourceAndSubscribe';\nimport { useRetrieveResourceAndSubscribe } from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  skip?: boolean;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<Params extends QueryParams<Params>> =\n  Params extends Record<string, never>\n    ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n    : UseResourceOptionsRequiredParams<Params>;\n\nconst isSSR = typeof window === 'undefined';\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  {\n    params,\n    skip = false,\n    subscribe,\n    subscribeOptions,\n  }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result =\n    subscribe && !isSSR\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n          subscribeOptions,\n        )\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n        );\n\n  return result;\n}\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport type {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport type { UseResourceOptions } from './useResource';\nimport { useResource } from './useResource';\n\ntype PaginatedQueryParams<Params extends Record<string, unknown>> =\n  QueryParams<Params> & Record<'page', number>;\n\ntype UsePaginatedResourceOptions<Params extends PaginatedQueryParams<Params>> =\n  UseResourceOptions<Params>;\n\ninterface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> =\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: undefined | Error;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[undefined | Error | any, undefined | ReturnType<T>]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (err) => {\n            setState({\n              loading: false,\n              error: err,\n            });\n            return [err, undefined];\n          },\n        );\n      } catch (err) {\n        setState({\n          loading: false,\n          error: err as Error,\n        });\n        return Promise.resolve([err, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n","import type { ConnectionStates } from 'liwi-resources-client/src/TransportClient';\n\nexport { useResource } from './useResource';\nexport { usePaginatedResource } from './usePaginatedResource';\nexport { useOperation } from './useOperation';\nexport type { OperationCallWrapper } from './useOperation';\nexport type { ResourceResult } from './createResourceResultFromState';\nexport {\n  TransportClientProvider,\n  TransportClientContext,\n  TransportClientStateContext,\n  TransportClientReadyContext,\n  useTransportClientState,\n  useTransportClientIsReady,\n} from './TransportClientProvider';\nexport { ResourcesServerError } from 'liwi-resources-client';\n\nexport type SimplifiedConnectionState =\n  | 'connecting'\n  | 'connected'\n  | 'disconnected';\n\nexport const transportClientStateToSimplifiedState = (\n  state: ConnectionStates,\n): SimplifiedConnectionState => {\n  switch (state) {\n    case 'opening':\n    case 'connecting':\n    case 'reconnect-scheduled':\n    case 'wait-for-visibility':\n      return 'connecting';\n\n    case 'connected':\n      return 'connected';\n\n    case 'closed':\n      return 'disconnected';\n  }\n};\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","useTransportClientState","useContext","useTransportClientIsReady","TransportClientProvider","createFn","children","params","useState","client","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","_jsx","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","Error","useRetrieveResource","createQuery","skip","deps","isTransportReady","wasReady","useRef","currentFetchId","fetch","useCallback","callback","fetchId","current","useReducer","info","dispatch","err","firstEffectChangeParams","changeParams","sortCollection","collection","sort","$sort","Lazy","idKey","value","copy","applyCollectionChange","change","queryMeta","keyPath","Object","assign","initial","map","existing","find","v","JSON","stringify","total","length","newCollection","limit","slice","keys","deletedKeys","filter","includes","newState","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","querySubscriptionRef","timeoutRef","changeParamsRef","handleVisibilityChangeRef","skipRef","unsubscribe","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","subscribe","fetchAndSubscribe","newResult","newMeta","initialChange","Array","isArray","then","success","changedParams","document","hidden","handleVisibilityChange","clearTimeout","setTimeout","addEventListener","removeEventListener","useMemo","isSSR","window","useResource","subscribeOptions","usePaginatedResource","options","pagination","totalPages","Math","ceil","useOperation","operationCall","loading","setState","operationCallWrapper","resolve","transportClientStateToSimplifiedState"],"mappings":"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"}