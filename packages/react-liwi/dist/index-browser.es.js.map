{"version":3,"file":"index-browser.es.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/utils/useVisibilityChangeSubscriber.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts","../src/index.ts"],"sourcesContent":["import type { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useContext, createContext, useState, useEffect } from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as unknown as TransportClient,\n);\n\nexport const TransportClientStateContext =\n  createContext<ConnectionStates>('opening');\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\nexport const useTransportClientState = (): ConnectionStates =>\n  useContext(TransportClientStateContext);\nexport const useTransportClientIsReady = (): boolean =>\n  useContext(TransportClientReadyContext);\n\ntype TransportClientProviderProps<P extends Record<never, unknown>> = P & {\n  createFn: (params: Omit<P, 'children' | 'createFn'>) => TransportClient;\n  children: ReactNode;\n};\n\nexport function TransportClientProvider<P extends Record<never, unknown>>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] =\n    useState<ConnectionStates>('opening');\n\n  useEffect(() => {\n    const closeConnectionStateListener =\n      client.listenStateChange(setConnectionState);\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type {\n  Query,\n  QueryParams,\n  QueryMeta,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryInfo } from 'liwi-store';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error | ResourcesServerError;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: Error | ResourcesServerError | undefined;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type {\n  Query,\n  QueryParams,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-store';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError | undefined;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error | ResourcesServerError;\n}\n\nexport type Action<Result> =\n  | ErrorAction\n  | FetchingAction\n  | RefetchAction\n  | ResolveAction<Result>;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | FetchedState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | InitialState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>,\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as FetchedState<Result, Params> | InitialState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import type { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext, useCallback } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = useCallback(\n    (\n      query: Query<Result, Params>,\n      callback: (result: QueryResult<Result>) => void,\n    ): Promise<void> => {\n      const fetchId = ++currentFetchId.current;\n      return query.fetch((result): void => {\n        if (currentFetchId.current === fetchId) {\n          callback(result);\n        }\n      });\n    },\n    [],\n  );\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady || skip) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((error) => {\n          dispatch({ type: 'error', error });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    if (skip) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((error) => {\n        dispatch({ type: 'error', error });\n      }),\n    });\n  }, [isTransportReady, fetch, skip, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (skip) {\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((error) => {\n        dispatch({ type: 'error', error });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, skip, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-store';\nimport { Lazy } from 'mingo/lazy';\nimport { $sort } from 'mingo/operators/pipeline/sort';\n\nfunction sortCollection<T>(collection: T[], sort: Record<string, -1 | 1>): T[] {\n  return $sort(Lazy(collection), sort, { idKey: '_id' }).value() as T[];\n}\n\nconst copy = <Value>(state: Value[]): Value[] => [...state];\n\nconst applyCollectionChange = <Value>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial': {\n      const keyPath = queryInfo.keyPath;\n\n      // update meta\n      Object.assign(queryMeta, change.meta);\n\n      // update state if exists, keeping ref to avoid rerendering everything\n      return !state\n        ? change.initial\n        : change.initial.map((value) => {\n            const existing = state.find((v) => v[keyPath] === value[keyPath]);\n            if (!existing) return value;\n            return JSON.stringify(existing) === JSON.stringify(value)\n              ? existing\n              : value;\n          });\n    }\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Item>(\n  state: Item[] | undefined,\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: Item[] | undefined; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, newQueryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-store';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>,\n>(\n  state: Value | null | undefined,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: Value | null | undefined; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import { useMemo, useRef } from 'react';\n\ntype VisibilityChangeHandler = () => void;\n\ninterface VisibilityChangeSubscriber {\n  subscribe: (handleVisibilityChange: VisibilityChangeHandler) => void;\n  unsubscribe: () => void;\n}\n\nexport const useVisibilityChangeSubscriber = (): VisibilityChangeSubscriber => {\n  const handleVisibilityChangeRef = useRef<\n    VisibilityChangeHandler | undefined\n  >();\n  return useMemo(\n    () => ({\n      subscribe: (handleVisibilityChange: VisibilityChangeHandler) => {\n        handleVisibilityChangeRef.current = handleVisibilityChange;\n        document.addEventListener(\n          'visibilitychange',\n          handleVisibilityChange,\n          false,\n        );\n      },\n      unsubscribe: () => {\n        if (handleVisibilityChangeRef.current) {\n          document.removeEventListener(\n            'visibilitychange',\n            handleVisibilityChangeRef.current,\n          );\n        }\n      },\n    }),\n    [],\n  );\n};\n","/* eslint-disable max-lines */\nimport type {\n  Query,\n  QueryParams,\n  QuerySubscription,\n} from 'liwi-resources-client';\nimport type { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-store';\nimport { Logger } from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport type { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\nimport { useVisibilityChangeSubscriber } from './utils/useVisibilityChangeSubscriber';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const visibilityChangeSubscriber = useVisibilityChangeSubscriber();\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const skipRef = useRef(skip);\n  skipRef.current = skip;\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (\n                    Array.isArray(initialChange.initial)\n                      ? applyCollectionChanges\n                      : applySingleItemChanges\n                  ) as ApplyChanges<Result, any>;\n                }\n                // if a change happen before the initial result, applyChanges will be undefined\n                else if (applyChanges) {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta!,\n                    currentQueryInfo!,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo!,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (error) => {\n                dispatch({\n                  type: 'error',\n                  error,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (changedParams: Params): void => {\n            queryLogger.info('change params', {\n              skip: skipRef.current,\n              params: changedParams,\n            });\n\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(changedParams);\n\n            if (!document.hidden && !skipRef.current) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (skipRef.current) return;\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          visibilityChangeSubscriber.subscribe(handleVisibilityChange);\n\n          if (!document.hidden && !skipRef.current) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      changeParamsRef.current(params);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip, ...deps]);\n\n  useEffect(() => {\n    return () => {\n      visibilityChangeSubscriber.unsubscribe();\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, [visibilityChangeSubscriber]);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport type { Query, QueryParams } from 'liwi-resources-client';\nimport type { SetOptional } from 'liwi-store';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport type { UseResourceAndSubscribeOptions } from './useRetrieveResourceAndSubscribe';\nimport { useRetrieveResourceAndSubscribe } from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  skip?: boolean;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<Params extends QueryParams<Params>> =\n  Params extends Record<string, never>\n    ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n    : UseResourceOptionsRequiredParams<Params>;\n\nconst isSSR = typeof window === 'undefined';\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  {\n    params,\n    skip = false,\n    subscribe,\n    subscribeOptions,\n  }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result =\n    subscribe && !isSSR\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n          subscribeOptions,\n        )\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n        );\n\n  return result;\n}\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport type {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport type { UseResourceOptions } from './useResource';\nimport { useResource } from './useResource';\n\nexport interface PaginatedQueryRequiredParams {\n  page: number;\n}\n\ntype PaginatedQueryParams<Params extends Record<string, unknown>> =\n  PaginatedQueryRequiredParams & QueryParams<Params>;\n\ntype UsePaginatedResourceOptions<Params extends PaginatedQueryParams<Params>> =\n  UseResourceOptions<Params>;\n\nexport interface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> =\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: Error | undefined;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[Error | any | undefined, Awaited<ReturnType<T>> | undefined]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (error) => {\n            setState({\n              loading: false,\n              error,\n            });\n            return [error, undefined];\n          },\n        );\n      } catch (error) {\n        setState({\n          loading: false,\n          error: error as Error,\n        });\n        return Promise.resolve([error, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n","import type { ConnectionStates } from 'liwi-resources-client';\n\nexport { useResource } from './useResource';\nexport type {\n  PaginatedQueryRequiredParams,\n  Pagination,\n} from './usePaginatedResource';\nexport { usePaginatedResource } from './usePaginatedResource';\nexport { useOperation } from './useOperation';\nexport type { OperationCallWrapper } from './useOperation';\nexport type { ResourceResult } from './createResourceResultFromState';\nexport {\n  TransportClientProvider,\n  TransportClientContext,\n  TransportClientStateContext,\n  TransportClientReadyContext,\n  useTransportClientState,\n  useTransportClientIsReady,\n} from './TransportClientProvider';\nexport { ResourcesServerError } from 'liwi-resources-client';\n\nexport type SimplifiedConnectionState =\n  | 'connected'\n  | 'connecting'\n  | 'disconnected';\n\nexport const transportClientStateToSimplifiedState = (\n  state: ConnectionStates,\n): SimplifiedConnectionState => {\n  switch (state) {\n    case 'opening':\n    case 'connecting':\n    case 'reconnect-scheduled':\n    case 'wait-for-visibility':\n      return 'connecting';\n\n    case 'connected':\n      return 'connected';\n\n    case 'closed':\n      return 'disconnected';\n  }\n};\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","useTransportClientState","useContext","useTransportClientIsReady","TransportClientProvider","_ref","createFn","children","params","_objectWithoutPropertiesLoose","_excluded","_useState","useState","client","_useState2","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","_jsx","Provider","value","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","_extends","Error","useRetrieveResource","createQuery","skip","deps","isTransportReady","wasReady","useRef","currentFetchId","fetch","useCallback","callback","fetchId","current","_useReducer","useReducer","info","dispatch","catch","_ref2","firstEffectChangeParams","changeParams","_ref3","concat","sortCollection","collection","sort","$sort","Lazy","idKey","copy","applyCollectionChange","change","queryMeta","keyPath","newCollection","deletedKeys","newState","Object","assign","initial","map","existing","find","v","JSON","stringify","total","length","limit","slice","keys","filter","includes","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","useVisibilityChangeSubscriber","handleVisibilityChangeRef","useMemo","subscribe","handleVisibilityChange","document","addEventListener","unsubscribe","removeEventListener","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","_temp","visibilityChangeSubscriber","querySubscriptionRef","timeoutRef","changeParamsRef","skipRef","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","fetchAndSubscribe","err","initialChange","_applyChanges","newResult","newMeta","Array","isArray","then","success","changedParams","hidden","clearTimeout","setTimeout","isSSR","window","useResource","_ref$skip","subscribeOptions","usePaginatedResource","options","_result$meta","_result$queryInfo","pagination","totalPages","Math","ceil","useOperation","operationCall","loading","setState","operationCallWrapper","_len","_key","arguments","apply","resolve","transportClientStateToSimplifiedState"],"mappings":"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"}