{"version":3,"file":"index-browsermodern.es.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts","../src/index.ts"],"sourcesContent":["import type { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useContext, createContext, useState, useEffect } from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as unknown as TransportClient,\n);\n\nexport const TransportClientStateContext =\n  createContext<ConnectionStates>('opening');\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\nexport const useTransportClientState = (): ConnectionStates =>\n  useContext(TransportClientStateContext);\nexport const useTransportClientIsReady = (): boolean =>\n  useContext(TransportClientReadyContext);\n\ntype TransportClientProviderProps<P extends Record<never, unknown>> = {\n  createFn: (params: Omit<P, 'createFn' | 'children'>) => TransportClient;\n  children: ReactNode;\n} & P;\n\nexport function TransportClientProvider<P extends Record<never, unknown>>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] =\n    useState<ConnectionStates>('opening');\n\n  useEffect(() => {\n    const closeConnectionStateListener =\n      client.listenStateChange(setConnectionState);\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type {\n  Query,\n  QueryParams,\n  QueryMeta,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryInfo } from 'liwi-types';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error | ResourcesServerError;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type {\n  Query,\n  QueryParams,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-types';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error | ResourcesServerError;\n}\n\nexport type Action<Result> =\n  | ResolveAction<Result>\n  | RefetchAction\n  | FetchingAction\n  | ErrorAction;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | InitialState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | FetchedState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>,\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as InitialState<Result, Params> | FetchedState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import type { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext, useCallback } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = useCallback(\n    (\n      query: Query<Result, Params>,\n      callback: (result: QueryResult<Result>) => void,\n    ): Promise<void> => {\n      const fetchId = ++currentFetchId.current;\n      return query.fetch((result): void => {\n        if (currentFetchId.current === fetchId) {\n          callback(result);\n        }\n      });\n    },\n    [],\n  );\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady || skip) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((err) => {\n          dispatch({ type: 'error', error: err });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    if (skip) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n  }, [isTransportReady, fetch, skip, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (skip) {\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, skip, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Lazy } from 'mingo/lazy.js';\nimport { $sort } from 'mingo/operators/pipeline/sort.js';\n\nfunction sortCollection<T>(collection: T[], sort: Record<string, 1 | -1>): T[] {\n  return $sort(Lazy(collection), sort, { idKey: '_id' }).value() as T[];\n}\n\nconst copy = <Value>(state: Value[]): Value[] => [...state];\n\nconst applyCollectionChange = <Value>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial': {\n      const keyPath = queryInfo.keyPath;\n\n      // update meta\n      Object.assign(queryMeta, change.meta);\n\n      // update state if exists, keeping ref to avoid rerendering everything\n      return !state\n        ? change.initial\n        : change.initial.map((value) => {\n            const existing = state.find((v) => v[keyPath] === value[keyPath]);\n            if (!existing) return value;\n            return JSON.stringify(existing) === JSON.stringify(value)\n              ? existing\n              : value;\n          });\n    }\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Item>(\n  state: undefined | Item[],\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: undefined | Item[]; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, newQueryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-types';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>,\n>(\n  state: undefined | Value | null,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: undefined | Value | null; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable max-lines */\nimport type {\n  Query,\n  QueryParams,\n  QuerySubscription,\n} from 'liwi-resources-client';\nimport type { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-types';\nimport { Logger } from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport type { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const handleVisibilityChangeRef = useRef<(() => void) | undefined>(undefined);\n  const skipRef = useRef(skip);\n  skipRef.current = skip;\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (\n                    Array.isArray(initialChange.initial)\n                      ? applyCollectionChanges\n                      : applySingleItemChanges\n                  ) as ApplyChanges<Result, any>;\n                } else {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta!,\n                    currentQueryInfo!,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo!,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (err) => {\n                dispatch({\n                  type: 'error',\n                  error: err,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (changedParams: Params): void => {\n            queryLogger.info('change params', {\n              skip: skipRef.current,\n              params: changedParams,\n            });\n\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(changedParams);\n\n            if (!document.hidden && !skipRef.current) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (skipRef.current) return;\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          handleVisibilityChangeRef.current = handleVisibilityChange;\n\n          document.addEventListener(\n            'visibilitychange',\n            handleVisibilityChange,\n            false,\n          );\n\n          if (!document.hidden) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      changeParamsRef.current(params);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip, ...deps]);\n\n  useEffect(() => {\n    return () => {\n      if (handleVisibilityChangeRef.current) {\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChangeRef.current,\n        );\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport type { Query, QueryParams } from 'liwi-resources-client';\nimport type { SetOptional } from 'liwi-types';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport type { UseResourceAndSubscribeOptions } from './useRetrieveResourceAndSubscribe';\nimport { useRetrieveResourceAndSubscribe } from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  skip?: boolean;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<Params extends QueryParams<Params>> =\n  Params extends Record<string, never>\n    ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n    : UseResourceOptionsRequiredParams<Params>;\n\nconst isSSR = typeof window === 'undefined';\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  {\n    params,\n    skip = false,\n    subscribe,\n    subscribeOptions,\n  }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result =\n    subscribe && !isSSR\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n          subscribeOptions,\n        )\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n        );\n\n  return result;\n}\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport type {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport type { UseResourceOptions } from './useResource';\nimport { useResource } from './useResource';\n\ntype PaginatedQueryParams<Params extends Record<string, unknown>> =\n  QueryParams<Params> & Record<'page', number>;\n\ntype UsePaginatedResourceOptions<Params extends PaginatedQueryParams<Params>> =\n  UseResourceOptions<Params>;\n\ninterface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> =\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: undefined | Error;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[undefined | Error | any, undefined | ReturnType<T>]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (err) => {\n            setState({\n              loading: false,\n              error: err,\n            });\n            return [err, undefined];\n          },\n        );\n      } catch (err) {\n        setState({\n          loading: false,\n          error: err as Error,\n        });\n        return Promise.resolve([err, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n","import type { ConnectionStates } from 'liwi-resources-client/src/TransportClient';\n\nexport { useResource } from './useResource';\nexport { usePaginatedResource } from './usePaginatedResource';\nexport { useOperation } from './useOperation';\nexport type { OperationCallWrapper } from './useOperation';\nexport type { ResourceResult } from './createResourceResultFromState';\nexport {\n  TransportClientProvider,\n  TransportClientContext,\n  TransportClientStateContext,\n  TransportClientReadyContext,\n  useTransportClientState,\n  useTransportClientIsReady,\n} from './TransportClientProvider';\nexport { ResourcesServerError } from 'liwi-resources-client';\n\nexport type SimplifiedConnectionState =\n  | 'connecting'\n  | 'connected'\n  | 'disconnected';\n\nexport const transportClientStateToSimplifiedState = (\n  state: ConnectionStates,\n): SimplifiedConnectionState => {\n  switch (state) {\n    case 'opening':\n    case 'connecting':\n    case 'reconnect-scheduled':\n    case 'wait-for-visibility':\n      return 'connecting';\n\n    case 'connected':\n      return 'connected';\n\n    case 'closed':\n      return 'disconnected';\n  }\n};\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","useTransportClientState","useContext","useTransportClientIsReady","TransportClientProvider","createFn","children","params","client","useState","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","_jsx","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","Error","useRetrieveResource","createQuery","skip","deps","isTransportReady","wasReady","useRef","currentFetchId","fetch","useCallback","callback","fetchId","current","dispatch","useReducer","info","catch","err","firstEffectChangeParams","changeParams","sortCollection","collection","sort","$sort","Lazy","idKey","value","copy","applyCollectionChange","change","queryMeta","keyPath","Object","assign","initial","map","existing","find","v","JSON","stringify","total","length","newCollection","limit","slice","keys","deletedKeys","filter","includes","newState","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","querySubscriptionRef","timeoutRef","changeParamsRef","handleVisibilityChangeRef","skipRef","unsubscribe","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","subscribe","fetchAndSubscribe","initialChange","Array","isArray","newResult","newMeta","then","success","changedParams","document","hidden","handleVisibilityChange","clearTimeout","setTimeout","addEventListener","removeEventListener","useMemo","isSSR","window","useResource","subscribeOptions","usePaginatedResource","options","pagination","totalPages","Math","ceil","useOperation","operationCall","setState","loading","operationCallWrapper","resolve","transportClientStateToSimplifiedState"],"mappings":"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"}