{"version":3,"file":"index-browsermodern.es.js","sources":["../src/TransportClientProvider.tsx","../src/createResourceResultFromState.ts","../src/reducer.ts","../src/useRetrieveResource.ts","../src/applyChanges/applyCollectionChanges.ts","../src/applyChanges/applySingleItemChanges.ts","../src/useRetrieveResourceAndSubscribe.ts","../src/useResource.ts","../src/usePaginatedResource.ts","../src/useOperation.ts","../src/index.ts"],"sourcesContent":["import type { TransportClient, ConnectionStates } from 'liwi-resources-client';\nimport type { ReactElement, ReactNode } from 'react';\nimport { useContext, createContext, useState, useEffect } from 'react';\n\nexport const TransportClientContext = createContext<TransportClient>(\n  undefined as unknown as TransportClient,\n);\n\nexport const TransportClientStateContext =\n  createContext<ConnectionStates>('opening');\nexport const TransportClientReadyContext = createContext<boolean>(false);\n\nexport const useTransportClientState = (): ConnectionStates =>\n  useContext(TransportClientStateContext);\nexport const useTransportClientIsReady = (): boolean =>\n  useContext(TransportClientReadyContext);\n\ntype TransportClientProviderProps<P extends Record<never, unknown>> = {\n  createFn: (params: Omit<P, 'createFn' | 'children'>) => TransportClient;\n  children: ReactNode;\n} & P;\n\nexport function TransportClientProvider<P extends Record<never, unknown>>({\n  createFn,\n  children,\n  ...params\n}: TransportClientProviderProps<P>): ReactElement {\n  const [client] = useState(() => {\n    return createFn(params);\n  });\n  const [connectionState, setConnectionState] =\n    useState<ConnectionStates>('opening');\n\n  useEffect(() => {\n    const closeConnectionStateListener =\n      client.listenStateChange(setConnectionState);\n    client.connect();\n\n    return (): void => {\n      closeConnectionStateListener();\n      client.close();\n    };\n  }, [client]);\n\n  return (\n    <TransportClientContext.Provider value={client}>\n      <TransportClientStateContext.Provider value={connectionState}>\n        <TransportClientReadyContext.Provider\n          value={connectionState === 'connected'}\n        >\n          {children}\n        </TransportClientReadyContext.Provider>\n      </TransportClientStateContext.Provider>\n    </TransportClientContext.Provider>\n  );\n}\n","import type {\n  Query,\n  QueryParams,\n  QueryMeta,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryInfo } from 'liwi-store';\nimport type { State } from './reducer';\n\nexport interface ResourceResultInitialLoading<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: true;\n  initialError: false;\n  fetched: false;\n  fetching: true;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: undefined;\n}\n\nexport interface ResourceResultInitialError<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: true;\n  fetched: false;\n  fetching: false;\n  data: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  error: Error | ResourcesServerError;\n}\n\nexport interface ResourceResultLoaded<\n  Data,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Data, Params>;\n  initialLoading: false;\n  initialError: false;\n  fetched: true;\n  fetching: boolean;\n  data: Data;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport type ResourceResult<Data, Params extends QueryParams<Params>> =\n  | ResourceResultInitialLoading<Data, Params>\n  | ResourceResultInitialError<Data, Params>\n  | ResourceResultLoaded<Data, Params>;\n\nexport const createResourceResultFromState = <\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  state: State<Result, Params>,\n): ResourceResult<Result, Params> =>\n  ({\n    query: state.query,\n    initialLoading: !state.fetched && state.fetching,\n    initialError: !state.fetched && !!state.error,\n    fetched: state.fetched,\n    fetching: state.fetching,\n    data: !state.fetched ? undefined : state.result,\n    meta: !state.fetched ? undefined : state.meta,\n    queryInfo: !state.fetched ? undefined : state.queryInfo,\n    error: state.error,\n  } as ResourceResult<Result, Params>);\n","import type {\n  Query,\n  QueryParams,\n  ResourcesServerError,\n} from 'liwi-resources-client';\nimport type { QueryMeta, QueryInfo } from 'liwi-store';\nimport type { Reducer } from 'react';\n\nexport interface InitialState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: true;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: undefined;\n}\n\nexport interface InitialErrorState<Result, Params extends QueryParams<Params>> {\n  fetched: false;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: undefined;\n  meta: undefined;\n  queryInfo: undefined;\n  promise?: Promise<void>;\n  error: Error | ResourcesServerError;\n}\n\nexport interface FetchedState<Result, Params extends QueryParams<Params>> {\n  fetched: true;\n  fetching: boolean;\n  query: Query<Result, Params>;\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n  promise?: Promise<void>;\n  error: undefined | Error | ResourcesServerError;\n}\n\nexport interface InitAction {\n  type: 'init';\n}\n\nexport interface FetchingAction {\n  type: 'fetching';\n}\n\nexport interface RefetchAction {\n  type: 'refetch';\n  promise: Promise<void>;\n}\n\nexport interface ResolveAction<Result> {\n  type: 'resolve';\n  result: Result;\n  meta: QueryMeta;\n  queryInfo: QueryInfo<any>;\n}\nexport interface ErrorAction {\n  type: 'error';\n  error: Error | ResourcesServerError;\n}\n\nexport type Action<Result> =\n  | ResolveAction<Result>\n  | RefetchAction\n  | FetchingAction\n  | ErrorAction;\nexport type State<Result, Params extends QueryParams<Params>> =\n  | InitialState<Result, Params>\n  | InitialErrorState<Result, Params>\n  | FetchedState<Result, Params>;\nexport type ResourceReducer<\n  Result,\n  Params extends QueryParams<Params>,\n> = Reducer<State<Result, Params>, Action<Result>>;\nexport interface ResourceReducerInitializerReturn<\n  Result,\n  Params extends QueryParams<Params>,\n> {\n  query: Query<Result, Params>;\n  promise?: Promise<void>;\n}\n\nexport function initReducer<Result, Params extends QueryParams<Params>>(\n  initializer: () => ResourceReducerInitializerReturn<Result, Params>,\n): InitialState<Result, Params> {\n  const init = initializer();\n  const { query, promise } = init;\n  return {\n    fetched: false,\n    fetching: true,\n    query,\n    result: undefined,\n    meta: undefined,\n    queryInfo: undefined,\n    promise,\n    error: undefined,\n  };\n}\n\nexport default function reducer<Result, Params extends QueryParams<Params>>(\n  state: State<Result, Params>,\n  action: Action<Result>,\n): State<Result, Params> {\n  switch (action.type) {\n    case 'resolve':\n      return {\n        fetched: true,\n        fetching: false,\n        query: state.query,\n        result: action.result,\n        meta: action.meta,\n        queryInfo: action.queryInfo,\n        error: undefined,\n      };\n    case 'refetch':\n      return {\n        fetched: state.fetched,\n        fetching: true,\n        query: state.query,\n        result: state.result,\n        meta: state.meta,\n        queryInfo: state.queryInfo,\n        promise: action.promise,\n        error: state.error,\n      } as InitialState<Result, Params> | FetchedState<Result, Params>;\n    case 'fetching':\n      return {\n        ...state,\n        fetching: true,\n      };\n    case 'error':\n      return {\n        ...state,\n        fetching: false,\n        error: action.error,\n      };\n    default:\n      throw new Error('Invalid action');\n  }\n}\n","import type { Query, QueryParams, QueryResult } from 'liwi-resources-client';\nimport { useReducer, useEffect, useRef, useContext, useCallback } from 'react';\nimport { TransportClientReadyContext } from './TransportClientProvider';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport function useRetrieveResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  const isTransportReady = useContext(TransportClientReadyContext);\n  const wasReady = useRef(isTransportReady);\n  const currentFetchId = useRef(0);\n\n  const fetch = useCallback(\n    (\n      query: Query<Result, Params>,\n      callback: (result: QueryResult<Result>) => void,\n    ): Promise<void> => {\n      const fetchId = ++currentFetchId.current;\n      return query.fetch((result): void => {\n        if (currentFetchId.current === fetchId) {\n          callback(result);\n        }\n      });\n    },\n    [],\n  );\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n\n      if (!isTransportReady || skip) return { query };\n\n      return {\n        query,\n        promise: fetch(query, ({ result, meta, info }) => {\n          dispatch({ type: 'resolve', result, meta, queryInfo: info });\n        }).catch((err) => {\n          dispatch({ type: 'error', error: err });\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  useEffect(() => {\n    if (wasReady.current) return;\n    if (!isTransportReady) return;\n    if (skip) return;\n    wasReady.current = true;\n\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n  }, [isTransportReady, fetch, skip, state.query]);\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (skip) {\n      return;\n    }\n\n    state.query.changeParams(params);\n\n    if (!wasReady.current) return;\n    dispatch({\n      type: 'refetch',\n      promise: fetch(state.query, ({ result, meta, info }) => {\n        dispatch({ type: 'resolve', result, meta, queryInfo: info });\n      }).catch((err) => {\n        dispatch({ type: 'error', error: err });\n      }),\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.query, skip, ...deps]);\n\n  return createResourceResultFromState(state);\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-store';\nimport { Lazy } from 'mingo/lazy.js';\nimport { $sort } from 'mingo/operators/pipeline/sort.js';\n\nfunction sortCollection<T>(collection: T[], sort: Record<string, 1 | -1>): T[] {\n  return $sort(Lazy(collection), sort, { idKey: '_id' }).value() as T[];\n}\n\nconst copy = <Value>(state: Value[]): Value[] => [...state];\n\nconst applyCollectionChange = <Value>(\n  state: Value[],\n  change: Change<any, Value[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value[] => {\n  switch (change.type) {\n    case 'initial': {\n      const keyPath = queryInfo.keyPath;\n\n      // update meta\n      Object.assign(queryMeta, change.meta);\n\n      // update state if exists, keeping ref to avoid rerendering everything\n      return !state\n        ? change.initial\n        : change.initial.map((value) => {\n            const existing = state.find((v) => v[keyPath] === value[keyPath]);\n            if (!existing) return value;\n            return JSON.stringify(existing) === JSON.stringify(value)\n              ? existing\n              : value;\n          });\n    }\n    case 'inserted': {\n      queryMeta.total += change.result.length;\n\n      let newCollection = [...change.result, ...state];\n\n      if (queryInfo.sort) {\n        newCollection = sortCollection(newCollection, queryInfo.sort);\n      }\n\n      if (!queryInfo.limit) return newCollection;\n\n      return newCollection.slice(0, queryInfo.limit - change.result.length);\n    }\n\n    case 'deleted': {\n      queryMeta.total -= change.keys.length;\n\n      const keyPath = queryInfo.keyPath;\n      const deletedKeys = change.keys;\n      return state.filter((value) => !deletedKeys.includes(value[keyPath]));\n    }\n\n    case 'updated': {\n      const keyPath = queryInfo.keyPath;\n      const newState = copy(state);\n      change.result.forEach((newObject) => {\n        const index = newState.findIndex(\n          (o: Value) => o[keyPath] === newObject[keyPath],\n        );\n        if (index === -1) return;\n        newState[index] = newObject;\n      });\n      return newState;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applyCollectionChanges<Item>(\n  state: undefined | Item[],\n  changes: Changes<any, Item[]>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Item>,\n): { state: undefined | Item[]; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Item[]>(\n      (result: Item[], change: Change<any, Item[]>) =>\n        applyCollectionChange<Item>(result, change, newQueryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","import type { Change, Changes, QueryInfo, QueryMeta } from 'liwi-store';\n\nconst applySingleItemChange = <Value extends Record<keyof Value, any>>(\n  state: Value | null,\n  change: Change<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): Value | null => {\n  switch (change.type) {\n    case 'initial':\n      queryMeta.total = change.initial === null ? 0 : 1;\n      return change.initial;\n\n    case 'updated': {\n      queryMeta.total = change.result === null ? 0 : 1;\n      return change.result;\n    }\n\n    case 'deleted': {\n      queryMeta.total = 0;\n      return null;\n    }\n\n    default:\n      throw new Error('Invalid type');\n  }\n};\n\n// https://github.com/rethinkdb/horizon/blob/next/client/src/ast.js\nexport function applySingleItemChanges<\n  Value extends Record<keyof Value, unknown>,\n>(\n  state: undefined | Value | null,\n  changes: Changes<any, Value | null>,\n  queryMeta: QueryMeta,\n  queryInfo: QueryInfo<Value>,\n): { state: undefined | Value | null; meta: QueryMeta } {\n  if (state === undefined) return { state, meta: queryMeta };\n\n  const newQueryMeta = { ...queryMeta };\n\n  return {\n    // eslint-disable-next-line unicorn/no-array-reduce\n    state: changes.reduce<Value | null>(\n      (result: Value | null, change: Change<any, Value | null>) =>\n        applySingleItemChange<Value>(result, change, queryMeta, queryInfo),\n      state,\n    ),\n    meta: newQueryMeta,\n  };\n}\n","/* eslint-disable max-lines */\nimport type {\n  Query,\n  QueryParams,\n  QuerySubscription,\n} from 'liwi-resources-client';\nimport type { Changes, InitialChange, QueryInfo, QueryMeta } from 'liwi-store';\nimport { Logger } from 'nightingale-logger';\nimport { useEffect, useReducer, useRef, useMemo } from 'react';\nimport type { ApplyChanges } from './applyChanges/ApplyChanges';\nimport { applyCollectionChanges } from './applyChanges/applyCollectionChanges';\nimport { applySingleItemChanges } from './applyChanges/applySingleItemChanges';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { createResourceResultFromState } from './createResourceResultFromState';\nimport type {\n  ResourceReducer,\n  ResourceReducerInitializerReturn,\n} from './reducer';\nimport reducer, { initReducer } from './reducer';\n\nexport interface UseResourceAndSubscribeOptions {\n  visibleTimeout: number;\n}\n\nconst defaultOptions = {\n  visibleTimeout: 1000 * 60 * 2, // 2 minutes\n};\n\nconst logger = new Logger('react-liwi:useResourceAndSubscribe');\n\nconst isInitial = <Result>(\n  changes: Changes<any, Result>,\n): changes is [InitialChange<Result>] =>\n  changes.length === 1 && changes[0].type === 'initial';\n\nexport function useRetrieveResourceAndSubscribe<\n  Result,\n  Params extends QueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  params: Params,\n  skip: boolean,\n  deps: any[],\n  { visibleTimeout }: UseResourceAndSubscribeOptions = defaultOptions,\n): ResourceResult<Result, Params> {\n  const querySubscriptionRef = useRef<QuerySubscription | undefined>(undefined);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(\n    undefined,\n  );\n  const changeParamsRef = useRef<((params: Params) => void) | undefined>(\n    undefined,\n  );\n\n  const handleVisibilityChangeRef = useRef<(() => void) | undefined>(undefined);\n  const skipRef = useRef(skip);\n  skipRef.current = skip;\n\n  const unsubscribe = (): void => {\n    logger.info('unsubscribe');\n\n    // reset timeout to allow resubscribing\n    timeoutRef.current = undefined;\n\n    if (querySubscriptionRef.current) {\n      querySubscriptionRef.current.stop();\n      querySubscriptionRef.current = undefined;\n    }\n  };\n\n  const [state, dispatch] = useReducer<\n    ResourceReducer<Result, Params>,\n    () => ResourceReducerInitializerReturn<Result, Params>\n  >(\n    reducer,\n    () => {\n      const query = createQuery(params);\n      let applyChanges: ApplyChanges<Result, any>;\n\n      let currentResult: Result | undefined;\n      let currentMeta: QueryMeta | undefined;\n      let currentQueryInfo: QueryInfo<any> | undefined;\n\n      return {\n        query,\n        promise: new Promise((resolve, reject) => {\n          const queryLogger = logger.context({\n            resourceName: (query as any).resourceName,\n            key: (query as any).key,\n          });\n          queryLogger.debug('init');\n\n          const subscribe = (): void => {\n            queryLogger.debug('subscribing', {\n              querySubscriptionRef: querySubscriptionRef.current,\n              timeoutRef: timeoutRef.current,\n            });\n            querySubscriptionRef.current = query.fetchAndSubscribe(\n              (err: Error | null, changes: Changes<any, Result>) => {\n                queryLogger.debug('received changes', {\n                  err,\n                  changes,\n                });\n\n                if (err) {\n                  dispatch({ type: 'error', error: err });\n                  return;\n                }\n\n                if (!currentResult && isInitial(changes)) {\n                  const initialChange: InitialChange = changes[0];\n                  currentResult = initialChange.initial;\n                  currentMeta = initialChange.meta;\n                  currentQueryInfo = initialChange.queryInfo;\n                  dispatch({\n                    type: 'resolve',\n                    result: initialChange.initial,\n                    meta: initialChange.meta,\n                    queryInfo: currentQueryInfo,\n                  });\n                  applyChanges = (\n                    Array.isArray(initialChange.initial)\n                      ? applyCollectionChanges\n                      : applySingleItemChanges\n                  ) as ApplyChanges<Result, any>;\n                } else {\n                  const { state: newResult, meta: newMeta } = applyChanges(\n                    currentResult,\n                    changes,\n                    currentMeta!,\n                    currentQueryInfo!,\n                  );\n\n                  if (newResult && newResult !== currentResult) {\n                    currentResult = newResult;\n                    currentMeta = newMeta;\n                    dispatch({\n                      type: 'resolve',\n                      result: newResult,\n                      meta: newMeta,\n                      queryInfo: currentQueryInfo!,\n                    });\n                  }\n                }\n              },\n            );\n            querySubscriptionRef.current.then(\n              () => {\n                queryLogger.success('subscribed');\n              },\n              (err) => {\n                dispatch({\n                  type: 'error',\n                  error: err,\n                });\n              },\n            );\n          };\n\n          changeParamsRef.current = (changedParams: Params): void => {\n            queryLogger.info('change params', {\n              skip: skipRef.current,\n              params: changedParams,\n            });\n\n            if (querySubscriptionRef.current) {\n              querySubscriptionRef.current.stop();\n            }\n\n            query.changeParams(changedParams);\n\n            if (!document.hidden && !skipRef.current) {\n              dispatch({\n                type: 'fetching',\n              });\n              subscribe();\n            }\n          };\n\n          const handleVisibilityChange = (): void => {\n            if (skipRef.current) return;\n            if (!document.hidden) {\n              if (timeoutRef.current !== undefined) {\n                queryLogger.debug('timeout cleared');\n                clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n              } else if (!querySubscriptionRef.current) {\n                queryLogger.info('resubscribe');\n                dispatch({\n                  type: 'fetching',\n                });\n                subscribe();\n              }\n              return;\n            }\n\n            if (querySubscriptionRef.current === undefined) return;\n\n            queryLogger.debug('timeout visible');\n            timeoutRef.current = setTimeout(unsubscribe, visibleTimeout);\n          };\n\n          handleVisibilityChangeRef.current = handleVisibilityChange;\n\n          document.addEventListener(\n            'visibilitychange',\n            handleVisibilityChange,\n            false,\n          );\n\n          if (!document.hidden && !skipRef.current) {\n            subscribe();\n          }\n        }),\n      };\n    },\n    initReducer,\n  );\n\n  const firstEffectChangeParams = useRef(false);\n\n  useEffect(() => {\n    if (!firstEffectChangeParams.current) {\n      firstEffectChangeParams.current = true;\n      return;\n    }\n\n    if (changeParamsRef.current) {\n      changeParamsRef.current(params);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [skip, ...deps]);\n\n  useEffect(() => {\n    return () => {\n      if (handleVisibilityChangeRef.current) {\n        document.removeEventListener(\n          'visibilitychange',\n          handleVisibilityChangeRef.current,\n        );\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = undefined;\n      }\n\n      unsubscribe();\n    };\n  }, []);\n\n  return useMemo(() => createResourceResultFromState(state), [state]);\n}\n","import { POB_TARGET } from 'pob-babel';\nimport type { Query, QueryParams } from 'liwi-resources-client';\nimport type { SetOptional } from 'liwi-store';\nimport type { ResourceResult } from './createResourceResultFromState';\nimport { useRetrieveResource } from './useRetrieveResource';\nimport type { UseResourceAndSubscribeOptions } from './useRetrieveResourceAndSubscribe';\nimport { useRetrieveResourceAndSubscribe } from './useRetrieveResourceAndSubscribe';\n\ninterface UseResourceOptionsRequiredParams<Params extends QueryParams<Params>> {\n  params: Params;\n  skip?: boolean;\n  subscribe?: boolean;\n  subscribeOptions?: UseResourceAndSubscribeOptions;\n}\n\nexport type UseResourceOptions<Params extends QueryParams<Params>> =\n  Params extends Record<string, never>\n    ? SetOptional<UseResourceOptionsRequiredParams<Params>, 'params'>\n    : UseResourceOptionsRequiredParams<Params>;\n\nconst isSSR = typeof window === 'undefined';\n\nexport function useResource<Result, Params extends QueryParams<Params>>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  {\n    params,\n    skip = false,\n    subscribe,\n    subscribeOptions,\n  }: UseResourceOptions<Params>,\n  deps: any[],\n): ResourceResult<Result, Params> {\n  if (POB_TARGET === 'node') {\n    return {\n      query: undefined as any,\n      initialLoading: true,\n      initialError: false,\n      fetched: false,\n      fetching: true,\n      data: undefined,\n      meta: undefined,\n      queryInfo: undefined,\n      error: undefined,\n    };\n  }\n\n  const result =\n    subscribe && !isSSR\n      ? // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResourceAndSubscribe<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n          subscribeOptions,\n        )\n      : // eslint-disable-next-line react-hooks/rules-of-hooks\n        useRetrieveResource<Result, Params>(\n          createQuery,\n          params as Params,\n          skip,\n          deps,\n        );\n\n  return result;\n}\n","import type { Query, QueryParams } from 'liwi-resources-client';\nimport { useMemo } from 'react';\nimport type {\n  ResourceResultInitialLoading,\n  ResourceResultInitialError,\n  ResourceResultLoaded,\n} from './createResourceResultFromState';\nimport type { UseResourceOptions } from './useResource';\nimport { useResource } from './useResource';\n\nexport interface PaginatedQueryRequiredParams {\n  page: number;\n}\n\ntype PaginatedQueryParams<Params extends Record<string, unknown>> =\n  QueryParams<Params> & PaginatedQueryRequiredParams;\n\ntype UsePaginatedResourceOptions<Params extends PaginatedQueryParams<Params>> =\n  UseResourceOptions<Params>;\n\nexport interface Pagination {\n  totalPages: number;\n}\n\ninterface PaginatedResourceResultInitialLoading<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialLoading<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultInitialError<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultInitialError<Data, Params> {\n  pagination: undefined;\n}\n\ninterface PaginatedResourceResultLoaded<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> extends ResourceResultLoaded<Data, Params> {\n  pagination: Pagination;\n}\n\nexport type PaginatedResourceResult<\n  Data,\n  Params extends PaginatedQueryParams<Params>,\n> =\n  | PaginatedResourceResultInitialLoading<Data, Params>\n  | PaginatedResourceResultInitialError<Data, Params>\n  | PaginatedResourceResultLoaded<Data, Params>;\n\nexport function usePaginatedResource<\n  Result,\n  Params extends PaginatedQueryParams<Params>,\n>(\n  createQuery: (initialParams: Params) => Query<Result, Params>,\n  options: UsePaginatedResourceOptions<Params>,\n  deps: any[],\n): PaginatedResourceResult<Result, Params> {\n  const result = useResource(createQuery, options, deps);\n  const total = result.meta?.total;\n  const limit = result.queryInfo?.limit;\n\n  const pagination = useMemo<Pagination | undefined>(() => {\n    if (total === undefined) return undefined;\n\n    return {\n      totalPages: limit ? Math.ceil(total / limit) : 1,\n    };\n  }, [total, limit]);\n\n  return useMemo(\n    () =>\n      ({ ...result, pagination } as PaginatedResourceResult<Result, Params>),\n    [result, pagination],\n  );\n}\n","import { useCallback, useState } from 'react';\n\nexport interface OperationState {\n  loading: boolean;\n  error: undefined | Error;\n}\n\nexport type OperationCallWrapper<T extends (...args: any) => Promise<any>> = (\n  ...args: Parameters<T>\n) => Promise<[undefined | Error | any, undefined | ReturnType<T>]>;\n\nexport function useOperation<T extends (...args: any) => Promise<any>>(\n  operationCall: T,\n): [OperationCallWrapper<T>, OperationState] {\n  const [state, setState] = useState<OperationState>(() => ({\n    loading: false,\n    error: undefined,\n  }));\n\n  const operationCallWrapper = useCallback<OperationCallWrapper<T>>(\n    (...params: Parameters<T>) => {\n      setState({\n        loading: true,\n        error: undefined,\n      });\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return operationCall(...(params as any)).then(\n          (result) => {\n            setState({\n              loading: false,\n              error: undefined,\n            });\n            return [undefined, result];\n          },\n          (err) => {\n            setState({\n              loading: false,\n              error: err,\n            });\n            return [err, undefined];\n          },\n        );\n      } catch (err) {\n        setState({\n          loading: false,\n          error: err as Error,\n        });\n        return Promise.resolve([err, undefined]);\n      }\n    },\n    [operationCall],\n  );\n  return [operationCallWrapper, state];\n}\n","import type { ConnectionStates } from 'liwi-resources-client/src/TransportClient';\n\nexport { useResource } from './useResource';\nexport type {\n  PaginatedQueryRequiredParams,\n  Pagination,\n} from './usePaginatedResource';\nexport { usePaginatedResource } from './usePaginatedResource';\nexport { useOperation } from './useOperation';\nexport type { OperationCallWrapper } from './useOperation';\nexport type { ResourceResult } from './createResourceResultFromState';\nexport {\n  TransportClientProvider,\n  TransportClientContext,\n  TransportClientStateContext,\n  TransportClientReadyContext,\n  useTransportClientState,\n  useTransportClientIsReady,\n} from './TransportClientProvider';\nexport { ResourcesServerError } from 'liwi-resources-client';\n\nexport type SimplifiedConnectionState =\n  | 'connecting'\n  | 'connected'\n  | 'disconnected';\n\nexport const transportClientStateToSimplifiedState = (\n  state: ConnectionStates,\n): SimplifiedConnectionState => {\n  switch (state) {\n    case 'opening':\n    case 'connecting':\n    case 'reconnect-scheduled':\n    case 'wait-for-visibility':\n      return 'connecting';\n\n    case 'connected':\n      return 'connected';\n\n    case 'closed':\n      return 'disconnected';\n  }\n};\n"],"names":["TransportClientContext","createContext","undefined","TransportClientStateContext","TransportClientReadyContext","useTransportClientState","useContext","useTransportClientIsReady","TransportClientProvider","createFn","children","params","client","useState","connectionState","setConnectionState","useEffect","closeConnectionStateListener","listenStateChange","connect","close","_jsx","createResourceResultFromState","state","query","initialLoading","fetched","fetching","initialError","error","data","result","meta","queryInfo","initReducer","initializer","init","promise","reducer","action","type","Error","useRetrieveResource","createQuery","skip","deps","isTransportReady","wasReady","useRef","currentFetchId","fetch","useCallback","callback","fetchId","current","dispatch","useReducer","info","catch","err","firstEffectChangeParams","changeParams","sortCollection","collection","sort","$sort","Lazy","idKey","value","copy","applyCollectionChange","change","queryMeta","keyPath","Object","assign","initial","map","existing","find","v","JSON","stringify","total","length","newCollection","limit","slice","keys","deletedKeys","filter","includes","newState","forEach","newObject","index","findIndex","o","applyCollectionChanges","changes","newQueryMeta","reduce","applySingleItemChange","applySingleItemChanges","defaultOptions","visibleTimeout","logger","Logger","isInitial","useRetrieveResourceAndSubscribe","querySubscriptionRef","timeoutRef","changeParamsRef","handleVisibilityChangeRef","skipRef","unsubscribe","stop","applyChanges","currentResult","currentMeta","currentQueryInfo","Promise","queryLogger","context","resourceName","key","debug","subscribe","fetchAndSubscribe","initialChange","Array","isArray","newResult","newMeta","then","success","changedParams","document","hidden","handleVisibilityChange","clearTimeout","setTimeout","addEventListener","removeEventListener","useMemo","isSSR","window","useResource","subscribeOptions","usePaginatedResource","options","pagination","totalPages","Math","ceil","useOperation","operationCall","setState","loading","operationCallWrapper","resolve","transportClientStateToSimplifiedState"],"mappings":"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"}