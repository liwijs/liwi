{"version":3,"file":"index-node8-dev.cjs.js","sources":["../src/RethinkConnection.js","../src/Query.js","../src/RethinkStore.js"],"sourcesContent":["import Logger from 'nightingale-logger';\nimport rethinkDB from 'rethinkdbdash';\nimport { AbstractConnection } from 'liwi-store';\n\nconst logger = new Logger('liwi:rethinkdb:RethinkConnection');\n\nexport default class RethinkConnection extends AbstractConnection {\n  _connection: any;\n  _connecting: boolean | null;\n  connectionFailed: boolean;\n\n  constructor(config: Map<string, string | number>) {\n    super();\n\n    if (!config.has('host')) {\n      config.set('host', 'localhost');\n    }\n    if (!config.has('port')) {\n      config.set('port', '28015');\n    }\n    if (!config.has('database')) {\n      throw new Error('Missing config database');\n    }\n\n    this.connect({\n      host: config.get('host'),\n      port: config.get('port'),\n      db: config.get('database'),\n    });\n  }\n\n  connect(options: Object) {\n    logger.info('connecting', options);\n\n    this._connection = rethinkDB({\n      ...options,\n      buffer: 20,\n      max: 100,\n    });\n\n    this._connection.getPoolMaster().on('healthy', healthy => {\n      if (healthy === true) {\n        this.getConnection = () => Promise.resolve(this._connection);\n        logger.info('healthy');\n      } else {\n        this.getConnection = () => Promise.reject(new Error('Connection not healthy'));\n        logger.warn('not healthy');\n      }\n    });\n\n    this.getConnection = () => Promise.resolve(this._connection);\n  }\n\n  getConnection(): Promise<void> {\n    throw new Error('call connect()');\n  }\n\n  close() {\n    this.getConnection = () => Promise.reject(new Error('Connection closed'));\n    if (this._connection) {\n      return this._connection\n        .getPoolMaster()\n        .drain()\n        .then(() => {\n          logger.info('connection closed');\n          this._connection = null;\n        });\n    } else if (this._connecting) {\n      return this.getConnection().then(() => this.close());\n    }\n  }\n}\n","import { AbstractQuery } from 'liwi-store';\nimport RethinkStore from './RethinkStore';\n\ntype SubscribeReturnType = {\n  cancel: () => void,\n  stop: () => void,\n};\n\nexport default class Query extends AbstractQuery<RethinkStore> {\n  fetch(callback: ?Function): Promise<any> {\n    return this.queryCallback(this.store.query(), this.store.r)\n      .run()\n      .then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    let _feed;\n    const promise = this.queryCallback(this.store.query(), this.store.r)\n      .changes({\n        includeInitial: _includeInitial,\n        includeStates: true,\n        includeTypes: true,\n        includeOffsets: true,\n      })\n      .then(feed => {\n        if (args.length === 0) {\n          _feed = feed;\n          delete this._promise;\n        }\n\n        feed.each(callback);\n        return feed;\n      });\n\n    if (args.length === 0) this._promise = promise;\n\n    const stop = () => {\n      this.closeFeed(_feed, promise);\n    };\n\n    return {\n      stop,\n      cancel: stop,\n      then: (cb, errCb) => promise.then(cb, errCb),\n    };\n  }\n\n  closeFeed(feed, promise) {\n    if (feed) {\n      feed.close();\n    } else if (promise) {\n      promise.then(feed => feed.close());\n    }\n  }\n}\n","import { AbstractStore, type InsertType, type UpdateType, type ResultType } from 'liwi-store';\nimport RethinkConnection from './RethinkConnection';\nimport Query from './Query';\n// import RethinkCursor from './RethinkCursor';\n\nexport default class RethinkStore extends AbstractStore<RethinkConnection> {\n  tableName: string;\n  keyPath = 'id';\n\n  constructor(connection: RethinkConnection, tableName: string) {\n    super(connection);\n    this._tableName = tableName;\n    this.r = this.connection._connection;\n  }\n\n  table() {\n    return this.r.table(this._tableName);\n  }\n\n  createQuery(query) {\n    return new Query(this, query);\n  }\n\n  query() {\n    return this.table();\n  }\n\n  _query(criteria: ?Object, sort: ?Object) {\n    const query = this.table();\n\n    if (criteria) {\n      query.filter(criteria);\n    }\n\n    if (sort) {\n      Object.keys(sort).forEach(key => {\n        if (sort[key] === -1) {\n          query.orderBy(this.r.desc(key));\n        } else {\n          query.orderBy(key);\n        }\n      });\n    }\n\n    return query;\n  }\n\n  create(): Promise<void> {\n    return this.r.tableCreate(this._tableName).then(() => null);\n  }\n\n  insertOne(object: InsertType): Promise<ResultType> {\n    if (!object.created) object.created = new Date();\n\n    return this.table()\n      .insert(object)\n      .then(({ inserted, generated_keys: generatedKeys }) => {\n        if (inserted !== 1) throw new Error('Could not insert');\n        if (object.id == null) {\n          // eslint-disable-next-line prefer-destructuring\n          object.id = generatedKeys[0];\n        }\n      })\n      .then(() => object);\n  }\n\n  updateOne(object) {\n    return this.replaceOne(object);\n  }\n\n  replaceOne(object: InsertType): Promise<ResultType> {\n    if (!object.created) object.created = new Date();\n    if (!object.updated) object.updated = new Date();\n\n    return this.table()\n      .get(object.id)\n      .replace(object)\n      .then(() => object);\n  }\n\n  upsertOne(object: UpdateType): Promise<ResultType> {\n    if (!object.updated) object.updated = new Date();\n\n    return this.table()\n      .insert(object, { conflict: 'replace' })\n      .run()\n      .then(() => object);\n  }\n\n  replaceSeveral(objects: Array<InsertType>): Promise<Array<ResultType>> {\n    return Promise.all(objects.map(object => this.replaceOne(object)));\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Object): Promise<void> {\n    return this.table()\n      .get(key)\n      .update(partialUpdate)\n      .run();\n  }\n\n  partialUpdateOne(object: ResultType, partialUpdate: UpdateType): Promise<ResultType> {\n    return this.table()\n      .get(object.id)\n      .update(partialUpdate, { returnChanges: true })\n      .then(res => res.changes[0].new_val);\n  }\n\n  partialUpdateMany(criteria, partialUpdate: Object): Promise<void> {\n    return this.table()\n      .filter(criteria)\n      .update(partialUpdate)\n      .run();\n  }\n\n  deleteByKey(key: any): Promise<void> {\n    return this.table()\n      .get(key)\n      .delete()\n      .run();\n  }\n\n  cursor(query, sort: ?Object) {\n    // : Promise<RethinkCursor<ModelType>> {\n    if (sort) throw new Error('sort is not supported');\n    throw new Error('Not Supported yet, please use query().run({ cursor: true })');\n  }\n\n  findAll(): Promise<void> {\n    throw new Error('Not supported, please use query().run()');\n  }\n\n  findByKey(key: any): Promise<?ResultType> {\n    return this.table()\n      .get(key)\n      .run();\n  }\n\n  findOne(query): Promise<?ResultType> {\n    return query.run({ cursor: true }).then(cursor => cursor.next().catch(err => null));\n  }\n\n  findValue(field: string, query): Promise<any> {\n    return query\n      .getField(field)\n      .run({ cursor: true })\n      .then(cursor => cursor.next().catch(err => null));\n  }\n}\n"],"names":["logger","Logger","RethinkConnection","AbstractConnection","config","has","set","Error","connect","get","options","info","_connection","rethinkDB","getPoolMaster","on","healthy","getConnection","Promise","resolve","reject","warn","drain","then","_connecting","close","Query","AbstractQuery","callback","queryCallback","store","query","r","run","_includeInitial","args","_feed","promise","changes","feed","length","_promise","each","stop","closeFeed","cb","errCb","RethinkStore","AbstractStore","connection","tableName","keyPath","_tableName","table","criteria","sort","filter","keys","forEach","key","orderBy","desc","tableCreate","object","created","Date","insert","inserted","generated_keys","generatedKeys","id","replaceOne","updated","replace","conflict","objects","all","map","partialUpdate","update","returnChanges","res","new_val","delete","cursor","next","catch","field","getField"],"mappings":"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"}