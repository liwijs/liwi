{"version":3,"sources":["../../src/react-redux/FindAndSubscribe.js"],"names":["PropTypes","Component","AbstractQuery","FindAndSubscribeComponent","props","query","action","dispatch","_find","fetch","result","_subscribe","subscribe","stop","Error","children","propTypes","func","isRequired","instanceOf","node"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,OAArC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;IAEqBC,yB;;;;;;;;;;;wCAQC;AAAA;;AAAA,mBACkB,KAAKC,KADvB;AAAA,UACVC,KADU,UACVA,KADU;AAAA,UACHC,MADG,UACHA,MADG;AAAA,UACKC,QADL,UACKA,QADL;;AAElB,WAAKC,KAAL,GAAaH,MAAMI,KAAN,CAAY,UAACC,MAAD,EAAY;AACnC,YAAI,CAAC,OAAKF,KAAV,EAAiB;AACjBD,iBAASD,OAAOI,MAAP,CAAT;AACA,eAAO,OAAKF,KAAZ;AACD,OAJY,CAAb;AAKA,WAAKG,UAAL,GAAkBN,MAAMO,SAAN,CAAgB;AAAA,eAAUL,SAASD,OAAOI,MAAP,EAAe,IAAf,CAAT,CAAV;AAAA,OAAhB,CAAlB;AACD;;;2CAEsB;AACrB,UAAI,KAAKF,KAAT,EAAgB;AACd;AACA,eAAO,KAAKA,KAAZ;AACD;AACD,UAAI,KAAKG,UAAT,EAAqB;AACnB,aAAKA,UAAL,CAAgBE,IAAhB;AACA,eAAO,KAAKF,UAAZ;AACD;AACF;;;6BAEQ;AACP,YAAM,IAAIG,KAAJ,CAAU,gCAAV,CAAN;AACA,aAAO,KAAKV,KAAL,CAAWW,QAAlB;AACD;;;;EAhCoDd,S;;AAAlCE,yB,CACZa,S,GAAY;AACjBT,YAAUP,UAAUiB,IAAV,CAAeC,UADR;AAEjBZ,UAAQN,UAAUiB,IAAV,CAAeC,UAFN;AAGjBb,SAAOL,UAAUmB,UAAV,CAAqBjB,aAArB,EAAoCgB,UAH1B;AAIjBH,YAAUf,UAAUoB;AAJH,C;eADAjB,yB","file":"FindAndSubscribe.js","sourcesContent":["import { PropTypes, Component } from 'react';\nimport AbstractQuery from '../store/AbstractQuery';\n\nexport default class FindAndSubscribeComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    action: PropTypes.func.isRequired,\n    query: PropTypes.instanceOf(AbstractQuery).isRequired,\n    children: PropTypes.node,\n  };\n\n  componentDidMount() {\n    const { query, action, dispatch } = this.props;\n    this._find = query.fetch((result) => {\n      if (!this._find) return;\n      dispatch(action(result));\n      delete this._find;\n    });\n    this._subscribe = query.subscribe(result => dispatch(action(result, true)));\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n    if (this._subscribe) {\n      this._subscribe.stop();\n      delete this._subscribe;\n    }\n  }\n\n  render() {\n    throw new Error('Will be implemented next minor');\n    return this.props.children;\n  }\n}\n"]}