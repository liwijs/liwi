{"version":3,"sources":["../../src/mongo/MongoCursor.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,MAAP,MAAmB,oBAAnB;AACA,OAAO,UAAP,MAAuB,cAAvB;AACA,OAAO,cAAP,MAA2B,yBAA3B;;IAEqB,W;;;AACnB,uBAAY,KAAZ,EAA8B,MAA9B,EAA6C;AAAA;;AAAA,+FACrC,KADqC;;AAE3C,UAAK,OAAL,GAAe,MAAf;AAF2C;AAG5C;;;;4BAEO,K,EAAmB;AACzB,WAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACD;;;2BAEmB;AAAA;;AAClB,aAAO,KAAK,OAAL,CAAa,IAAb,GACE,IADF,CAEK,iBAAS;AACP,eAAK,OAAL,GAAe,KAAf;AACA,eAAK,GAAL,GAAW,SAAS,MAAM,GAA1B;AACA,eAAO,OAAK,GAAZ;AACD,OANN,CAAP;AAQD;;;0BAEK,Q,EAAyB;AAC7B,WAAK,OAAL,CAAa,KAAb,CAAmB,QAAnB;AACA,aAAO,QAAQ,OAAR,CAAgB,IAAhB,CAAP;AACD;;;4BAEiC;AAAA,UAA5B,UAA4B,yDAAP,KAAO;;AAChC,aAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,UAAnB,CAAP;AACD;;;6BAEQ;AACP,aAAO,QAAQ,OAAR,CAAgB,KAAK,OAArB,CAAP;AACD;;;4BAEO;AACN,UAAI,KAAK,OAAT,EAAkB;AAChB,aAAK,OAAL,CAAa,KAAb;AACA,aAAK,OAAL,GAAe,KAAK,MAAL,GAAc,KAAK,OAAL,GAAe,SAA5C;AACD;;AAED,aAAO,QAAQ,OAAR,EAAP;AACD;;;8BAEwB;AACvB,aAAO,KAAK,OAAL,CAAa,OAAb,EAAP;AACD;;;;EA7CsC,c;;eAApB,W","file":"MongoCursor.js","sourcesContent":["import Cursor from 'mongodb/lib/cursor';\nimport MongoStore from './MongoStore';\nimport AbstractCursor from '../store/AbstractCursor';\n\nexport default class MongoCursor extends AbstractCursor<MongoStore> {\n  constructor(store:MongoStore, cursor:Cursor) {\n    super(store);\n    this._cursor = cursor;\n  }\n\n  advance(count:number):void {\n    this._cursor.skip(count);\n  }\n\n  next():Promise<any> {\n    return this._cursor.next()\n            .then(\n                value => {\n                  this._result = value;\n                  this.key = value && value._id;\n                  return this.key;\n                },\n            );\n  }\n\n  limit(newLimit:number):Promise {\n    this._cursor.limit(newLimit);\n    return Promise.resolve(this);\n  }\n\n  count(applyLimit:boolean = false) {\n    return this._cursor.count(applyLimit);\n  }\n\n  result() {\n    return Promise.resolve(this._result);\n  }\n\n  close() {\n    if (this._cursor) {\n      this._cursor.close();\n      this._cursor = this._store = this._result = undefined;\n    }\n\n    return Promise.resolve();\n  }\n\n  toArray():Promise<Array> {\n    return this._cursor.toArray();\n  }\n}\n"]}