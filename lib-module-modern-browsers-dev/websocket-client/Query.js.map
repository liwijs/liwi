{"version":3,"sources":["../../src/websocket-client/Query.js"],"names":["Logger","AbstractQuery","WebsocketStore","decode","logger","Query","constructor","store","key","fetch","callback","emit","then","_subscribe","_includeInitial","args","eventName","restName","listener","err","result","decodedResult","debug","connection","on","_stopEmitSubscribe","promise","emitSubscribe","stopEmitSubscribe","info","catch","off","stop","cancel","Promise","resolve","cb"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,0DAA2B,SACzB,qBAAQ,YAAR,CADyB,EAEzB,mBAAM,YAAN,CAFyB,CAA3B;;;AAKA,MAAMC,SAAS,IAAIJ,MAAJ,CAAW,6BAAX,CAAf;;IAEqBK,K,GAAN,cAAoBJ,aAApB,CAAkD;AAC/DK,cAAYC,KAAZ,EAAmCC,GAAnC,EAAgD;AAAA,qBAA/B,qBAA+B;;AAAA,mBAAV,UAAU;;AAAA,sFAC9C,MAAMD,KAAN,CAD8C,6BADD,qBACC,GAE9C,KAAKC,GAAL,GAAWA,GAFmC;AAG/C;;AAEDC,QAAMC,QAAN,EAAyC;AAAA,wBAA3B,WAAG,YAAH,CAA2B;;AAAA,iCAAL,OAAK;;AACvC,gEAAO,KAAKH,KAAL,CAAWI,IAAX,CAAgB,OAAhB,EAAyB,KAAKH,GAA9B,EAAmCI,IAAnC,CAAwCF,QAAxC,CAAP;AAAA;AAAA;AACD;;AAEDG,aAAWH,QAAX,EAA+BI,kBAAkB,KAAjD,EAAwDC,IAAxD,EAA+F;AAAA;;AAAA,yBAA5E,YAA4E;;AAAA,oBAAnC,QAAQ,OAAR,CAAmC;;AAAA,kCAApB,mBAAoB;;AAAA;;AAC7F,UAAMC,YAAa,aAAY,KAAKT,KAAL,CAAWU,QAAS,IAAG,KAAKT,GAAI,EAA/D;AACA,UAAMU,WAAW,SAAXA,QAAW,CAACC,GAAD,EAAMC,MAAN,EAAiB;AAChC,YAAMC,gBAAgBD,UAAUjB,OAAOiB,MAAP,CAAhC;AACiBhB,aAAOkB,KAAP,CAAaN,SAAb,EAAwB,EAAEI,MAAF,EAAUC,aAAV,EAAxB,CAFe,EAGhCX,SAASS,GAAT,EAAcE,aAAd,CAHgC;AAIjC,KAJD;AAKA,SAAKd,KAAL,CAAWgB,UAAX,CAAsBC,EAAtB,CAAyBR,SAAzB,EAAoCE,QAApC,CAP6F;;;AAS7F,QAAIO,kBAAJ;AACA,QAAIC,UAAU,KAAKnB,KAAL,CACXoB,aADW,CACGb,kBAAkB,mBAAlB,GAAwC,WAD3C,EACwD,KAAKN,GAD7D,EACkEQ,SADlE,EAC6ED,IAD7E,EAEXH,IAFW,CAEN,6BAAqB;AACzBa,2BAAqBG,iBADI,EAEzBxB,OAAOyB,IAAP,CAAY,YAAZ,CAFyB;AAG1B,KALW,EAMXC,KANW,CAML,eAAO;AAEZ,YADA,MAAKvB,KAAL,CAAWgB,UAAX,CAAsBQ,GAAtB,CAA0Bf,SAA1B,EAAqCE,QAArC,CACA,EAAMC,GAAN;AACD,KATW,CAAd;;AAWA,UAAMa,OAAO,SAAPA,IAAO,GAAM;AACZN,aADY,KAEjBD,oBAFiB,EAGjBC,QAAQd,IAAR,CAAa,YAAM;AACjBc,kBAAU,IADO,EAEjB,MAAKnB,KAAL,CAAWgB,UAAX,CAAsBQ,GAAtB,CAA0Bf,SAA1B,EAAqCE,QAArC,CAFiB;AAGlB,OAHD,CAHiB;AAOlB,KAPD;;AASA,+BAAO;AACLe,cAAQD,IADH;AAELA,UAFK;AAGLpB,YAAM;AAAA,eAAMsB,QAAQC,OAAR,CAAgBT,OAAhB,EAAyBd,IAAzB,CAA8BwB,EAA9B,CAAN;AAAA;AAHD,KAAP;AAKD;AA7C8D,C;SAA5C/B,K","file":"Query.js","sourcesContent":["import Logger from 'nightingale-logger';\nimport AbstractQuery from '../store/AbstractQuery';\nimport WebsocketStore from './WebsocketStore';\nimport { decode } from '../extended-json';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nconst logger = new Logger('liwi:websocket-client:query');\n\nexport default class Query extends AbstractQuery<WebsocketStore> {\n  constructor(store: WebsocketStore, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(callback: ?Function): Promise<any> {\n    return this.store.emit('fetch', this.key).then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    const eventName = `subscribe:${this.store.restName}.${this.key}`;\n    const listener = (err, result) => {\n      const decodedResult = result && decode(result);\n      if (!PRODUCTION) logger.debug(eventName, { result, decodedResult });\n      callback(err, decodedResult);\n    };\n    this.store.connection.on(eventName, listener);\n\n    let _stopEmitSubscribe;\n    let promise = this.store\n      .emitSubscribe(_includeInitial ? 'fetchAndSubscribe' : 'subscribe', this.key, eventName, args)\n      .then(stopEmitSubscribe => {\n        _stopEmitSubscribe = stopEmitSubscribe;\n        logger.info('subscribed');\n      })\n      .catch(err => {\n        this.store.connection.off(eventName, listener);\n        throw err;\n      });\n\n    const stop = () => {\n      if (!promise) return;\n      _stopEmitSubscribe();\n      promise.then(() => {\n        promise = null;\n        this.store.connection.off(eventName, listener);\n      });\n    };\n\n    return {\n      cancel: stop,\n      stop,\n      then: cb => Promise.resolve(promise).then(cb),\n    };\n  }\n}\n"]}