{"version":3,"sources":["../../src/rethinkdb/Query.js"],"names":["Query","fetch","callback","queryCallback","store","query","r","run","then","_subscribe","_includeInitial","args","_feed","promise","changes","includeInitial","includeStates","includeTypes","includeOffsets","feed","length","_promise","each","stop","closeFeed","cancel","cb","errCb","close"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;;;AAEA,8EAA2B,6BACzB,yCAAQ,gCAAR,CADyB,EAEzB,uCAAM,gCAAN,CAFyB,CAA3B;;IAKqBA,K,GAAN,sCAAgD;AAAA;AAAA;;AAAA,mDAAd,iDAAc;AAAA;;AAC7DC,QAAMC,QAAN,EAAyC;AAAA,wBAA3B,+BAAG,gCAAH,CAA2B;;AAAA,qDAAL,2BAAK;;AAAA;;AACvC,WAAO,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuC,KAAKD,KAAL,CAAWE,CAAlD,EAAqDC,GAArD,GAA2DC,IAA3D,CAAgEN,QAAhE,CAAP;AACD;;AAEDO,aAAWP,QAAX,EAA+BQ,kBAAkB,KAAjD,EAAwDC,IAAxD,EAA+F;AAAA,yBAA5E,gCAA4E;;AAAA,oBAAnC,4BAAQ,2BAAR,CAAmC;;AAAA,sDAApB,mBAAoB;;AAAA;;AAAA;;AAC7F,QAAIC,KAAJ;AACA,QAAIC,UACF,KAAKV,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuC,KAAKD,KAAL,CAAWE,CAAlD,EAAqDQ,OAArD,CAA6D;AAC3DC,sBAAgBL,eAD2C;AAE3DM,qBAAe,IAF4C;AAG3DC,oBAAc,IAH6C;AAI3DC,sBAAgB;AAJ2C,KAA7D,EAMCV,IAND,CAMOW,IAAD,IAAU;AACd,UAAIR,KAAKS,MAAL,KAAgB,CAApB,EAAuB;AACrBR,gBAAQO,IAAR;AACA,eAAO,KAAKE,QAAZ;AACD;;AAEDF,WAAKG,IAAL,CAAUpB,QAAV;AACA,aAAOiB,IAAP;AACD,KAdD,CADF;;AAiBA,QAAIR,KAAKS,MAAL,KAAgB,CAApB,EAAuB,KAAKC,QAAL,GAAgBR,OAAhB;;AAEvB,UAAMU,OAAO,MAAM;AACjB,WAAKC,SAAL,CAAeZ,KAAf,EAAsBC,OAAtB;AACD,KAFD;;AAIA,+BAAO;AACLU,UADK;AAELE,cAAQF,IAFH;AAGLf,YAAM,CAACkB,EAAD,EAAKC,KAAL,KAAed,QAAQL,IAAR,CAAakB,EAAb,EAAiBC,KAAjB;AAHhB,KAAP;AAKD;;AAEDH,YAAUL,IAAV,EAAgBN,OAAhB,EAAyB;AACvB,QAAIM,IAAJ,EAAU;AACRA,WAAKS,KAAL;AACD,KAFD,MAEO,IAAIf,OAAJ,EAAa;AAClBA,cAAQL,IAAR,CAAaW,QAAQA,KAAKS,KAAL,EAArB;AACD;AACF;AA3C4D,C;kBAA1C5B,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\nimport RethinkStore from './RethinkStore';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery<RethinkStore> {\n  fetch(callback: ?Function): Promise<any> {\n    return this.queryCallback(this.store.query(), this.store.r).run().then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    let _feed;\n    let promise =\n      this.queryCallback(this.store.query(), this.store.r).changes({\n        includeInitial: _includeInitial,\n        includeStates: true,\n        includeTypes: true,\n        includeOffsets: true,\n      })\n      .then((feed) => {\n        if (args.length === 0) {\n          _feed = feed;\n          delete this._promise;\n        }\n\n        feed.each(callback);\n        return feed;\n      });\n\n    if (args.length === 0) this._promise = promise;\n\n    const stop = () => {\n      this.closeFeed(_feed, promise);\n    };\n\n    return {\n      stop,\n      cancel: stop,\n      then: (cb, errCb) => promise.then(cb, errCb),\n    };\n  }\n\n  closeFeed(feed, promise) {\n    if (feed) {\n      feed.close();\n    } else if (promise) {\n      promise.then(feed => feed.close());\n    }\n  }\n}\n"]}