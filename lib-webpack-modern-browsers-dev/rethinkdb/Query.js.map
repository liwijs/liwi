{"version":3,"sources":["../../src/rethinkdb/Query.js"],"names":["AbstractQuery","SubscribeReturnType","cancel","stop","Query","fetch","callback","queryCallback","store","query","run","then","_subscribe","_includeInitial","args","_feed","promise","changes","includeInitial","includeStates","includeTypes","includeOffsets","length","feed","_promise","each","closeFeed","cb","errCb","close"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,wBAA1B;;IAGKC,mB;AACHC,Q;AACAC,M;;;AAGF,eAAe,MAAMC,KAAN,SAAoBJ,aAApB,CAAgD;AAC7DK,QAAMC,QAAN,EAAoC;AAAA,YAA9BA,QAA8B;;AAAA;AAClC,aAAO,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuCC,GAAvC,GAA6CC,IAA7C,CAAkDL,QAAlD,CAAP;AADkC;AAEnC;;AAEDM,aAAWN,QAAX,EAA+BO,kBAAkB,KAAjD,EAAwDC,IAAxD,EAA+F;AAAA,YAApFR,QAAoF;;AAAA,YAAvCQ,IAAuC;;AAAA;AAAA;;AAC7F,UAAIC,cAAJ;AACA,UAAIC,UACF,KAAKT,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuCQ,OAAvC,CAA+C;AAC7CC,wBAAgBL,eAD6B;AAE7CM,uBAAe,IAF8B;AAG7CC,sBAAc,IAH+B;AAI7CC,wBAAgB;AAJ6B,OAA/C,EAMCV,IAND,CAMM,gBAAQ;AACZ,YAAIG,KAAKQ,MAAL,KAAgB,CAApB,EAAuB;AACrBP,kBAAQQ,IAAR;AACA,iBAAO,MAAKC,QAAZ;AACD;;AAEDD,aAAKE,IAAL,CAAUnB,QAAV;AACA,eAAOiB,IAAP;AACD,OAdD,CADF;;AAiBA,UAAIT,KAAKQ,MAAL,KAAgB,CAApB,EAAuB,KAAKE,QAAL,GAAgBR,OAAhB;;AAEvB,UAAMb,OAAO,SAAPA,IAAO,GAAM;AACjB,cAAKuB,SAAL,CAAeX,KAAf,EAAsBC,OAAtB;AACD,OAFD;;AAIA,aAAO;AACLb,YADK;AAELD,gBAAQC,IAFH;AAGLQ,cAAM,cAACgB,EAAD,EAAKC,KAAL;AAAA,iBAAeZ,QAAQL,IAAR,CAAagB,EAAb,EAAiBC,KAAjB,CAAf;AAAA;AAHD,OAAP;AAzB6F,8BAApB3B,mBAAoB;AA8B9F;;AAEDyB,YAAUH,IAAV,EAAgBP,OAAhB,EAAyB;AACvB,QAAIO,IAAJ,EAAU;AACRA,WAAKM,KAAL;AACD,KAFD,MAEO,IAAIb,OAAJ,EAAa;AAClBA,cAAQL,IAAR,CAAa;AAAA,eAAQY,KAAKM,KAAL,EAAR;AAAA,OAAb;AACD;AACF;AA3C4D","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\nimport RethinkStore from './RethinkStore';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery<RethinkStore> {\n  fetch(callback: ?Function): Promise {\n    return this.queryCallback(this.store.query()).run().then(callback);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    let _feed;\n    let promise =\n      this.queryCallback(this.store.query()).changes({\n        includeInitial: _includeInitial,\n        includeStates: true,\n        includeTypes: true,\n        includeOffsets: true,\n      })\n      .then(feed => {\n        if (args.length === 0) {\n          _feed = feed;\n          delete this._promise;\n        }\n\n        feed.each(callback);\n        return feed;\n      });\n\n    if (args.length === 0) this._promise = promise;\n\n    const stop = () => {\n      this.closeFeed(_feed, promise);\n    };\n\n    return {\n      stop,\n      cancel: stop,\n      then: (cb, errCb) => promise.then(cb, errCb),\n    };\n  }\n\n  closeFeed(feed, promise) {\n    if (feed) {\n      feed.close();\n    } else if (promise) {\n      promise.then(feed => feed.close());\n    }\n  }\n}\n"]}