{"version":3,"sources":["../../src/react-redux/FindAndSubscribe.js"],"names":["React","Component","ReactNodeType","ReactComponentType","AbstractQuery","applyChange","FindAndSubscribeComponent","state","fetched","result","componentDidMount","query","props","_subscribe","fetchAndSubscribe","err","change","alert","newResult","setState","componentWillUnmount","stop","render","createElement","component","name","loadingComponent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAcC,+BAAd,EAA6BC,yCAA7B,QAAuD,uBAAvD;AACA,OAAYC,cAAZ,MAA+B,wBAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;;;AAEA,sCAAiB,SACf,mBAAM,UAAN,CADe,EAEf,oBAAO,oBAAP,CAFe,EAGf,wBAAW,yBAAX,CAHe,EAIf,+BAAkB,WAAC,yBAAD,CAAlB,CAJe,CAAjB;IAOqBC,yB,sBAAN,cAAwCL,SAAxC,CAAkD;AAAA;AAAA;;AAAA,wCAG/DM,KAH+D,GAGvD;AACNC,eAAS,KADH;AAENC;AAFM,KAHuD;AAAA;;AAQ/DC,sBAAoB;AAClB,UAAM,EAAEC,KAAF,KAAY,KAAKC,KAAvB;AACA,SAAKC,UAAL,GAAkBF,MAAMG,iBAAN,CAAwB,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACzD,UAAID,GAAJ,EAGE,YADAE,MAAO,qBAAoBF,GAAI,EAA/B,CACA;;AAGF,YAAMG,YAAYb,YAAY,KAAKE,KAAL,CAAWE,MAAvB,EAA+BO,MAA/B,CAAlB;;AAEK,WAAKT,KAAL,CAAWC,OATyC,GAW9CU,cAAc,KAAKX,KAAL,CAAWE,MAXqB,IAYvD,KAAKU,QAAL,CAAc,EAAEV,QAAQS,SAAV,EAAd,CAZuD,GAUvD,KAAKC,QAAL,CAAc,EAAEX,SAAS,IAAX,EAAiBC,QAAQS,SAAzB,EAAd,CAVuD;AAc1D,KAdiB,CAFA;AAiBnB;;AAEDE,yBAAuB;AACjB,SAAKP,UADY,KAEnB,KAAKA,UAAL,CAAgBQ,IAAhB,EAFmB,EAGnB,OAAO,KAAKR,UAHO;AAKtB;;AAEDS,WAAwB;AAAA,iCAAd,oBAAc;;AAAA,WACjB,KAAKf,KAAL,CAAWC,OADM,sBAKfR,MAAMuB,aAAN,CAAoB,KAAKX,KAAL,CAAWY,SAA/B,EAA0C,EAAE,CAAC,KAAKZ,KAAL,CAAWa,IAAZ,GAAmB,KAAKlB,KAAL,CAAWE,MAAhC,EAA1C,CALe,uBAEb,KAAKG,KAAL,CAAWc,gBAAX,GAA8B1B,MAAMuB,aAAN,CAAoB,KAAKX,KAAL,CAAWc,gBAA/B,CAA9B,GAAiF,IAFpE;AAMvB;AAxC8D,C,iCAC1D,S;SADcpB,yB","file":"FindAndSubscribe.js","sourcesContent":["import React, { Component } from 'react';\nimport type { ReactNodeType, ReactComponentType } from 'alp-react-redux/types';\nimport type AbstractQuery from '../store/AbstractQuery';\nimport applyChange from './applyChange';\n\ntype PropsType = {\n  name: string,\n  query: AbstractQuery,\n  component: ReactComponentType,\n  loadingComponent: ?ReactComponentType,\n};\n\nexport default class FindAndSubscribeComponent extends Component {\n  props: PropsType;\n\n  state = {\n    fetched: false,\n    result: [],\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._subscribe = query.fetchAndSubscribe((err, change) => {\n      if (err) {\n        // eslint-disable-next-line no-alert\n        alert(`Unexpected error: ${err}`);\n        return;\n      }\n\n      const newResult = applyChange(this.state.result, change);\n\n      if (!this.state.fetched) {\n        this.setState({ fetched: true, result: newResult });\n      } else if (newResult !== this.state.result) {\n        this.setState({ result: newResult });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._subscribe) {\n      this._subscribe.stop();\n      delete this._subscribe;\n    }\n  }\n\n  render(): ReactNodeType {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n"]}