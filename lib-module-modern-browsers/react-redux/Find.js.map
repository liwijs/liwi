{"version":3,"sources":["../../src/react-redux/Find.js"],"names":["React","Component","FindComponent","state","fetched","result","undefined","componentDidMount","query","props","_find","fetch","setState","componentWillUnmount","render","loadingComponent","createElement","component","name"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;IAWqBC,a,GAAN,cAA4BD,SAA5B,CAAsC;AAAA;AAAA;;AAAA,wCAGnDE,KAHmD,GAG3C;AACNC,eAAS,KADH;AAENC,cAAQC;AAFF,KAH2C;AAAA;;AAQnDC,sBAAoB;AAAA;;AAClB,UAAM,EAAEC,KAAF,KAAY,KAAKC,KAAvB;AACA,SAAKC,KAAL,GAAaF,MAAMG,KAAN,CAAY,UAACN,MAAD,EAAiB;AACxC,UAAI,CAAC,MAAKK,KAAV,EAAiB;AACjB,YAAKE,QAAL,CAAc;AACZR,iBAAS,IADG;AAEZC;AAFY,OAAd;AAIA,aAAO,MAAKK,KAAZ;AACD,KAPY,CAAb;AAQD;;AAEDG,yBAAuB;AACrB,QAAI,KAAKH,KAAT,EAAgB;AACd;AACA,aAAO,KAAKA,KAAZ;AACD;AACF;;AAEDI,WAAwB;AACtB,QAAI,CAAC,KAAKX,KAAL,CAAWC,OAAhB,EAAyB;AACvB,aAAO,KAAKK,KAAL,CAAWM,gBAAX,GAA8Bf,MAAMgB,aAAN,CAAoB,KAAKP,KAAL,CAAWM,gBAA/B,CAA9B,GAAiF,IAAxF;AACD;;AAED,WAAOf,MAAMgB,aAAN,CAAoB,KAAKP,KAAL,CAAWQ,SAA/B,EAA0C,EAAE,CAAC,KAAKR,KAAL,CAAWS,IAAZ,GAAmB,KAAKf,KAAL,CAAWE,MAAhC,EAA1C,CAAP;AACD;AAjCkD,C;SAAhCH,a","file":"Find.js","sourcesContent":["import React, { Component } from 'react';\nimport type { ReactNodeType, ReactComponentType } from 'alp-react-redux/src/types';\nimport AbstractQuery from '../store/AbstractQuery';\n\ntype PropsType = {\n  name: string,\n  query: AbstractQuery,\n  component: ReactComponentType,\n  loadingComponent: ?ReactComponentType,\n};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  state = {\n    fetched: false,\n    result: undefined,\n  };\n\n  componentDidMount() {\n    const { query } = this.props;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      this.setState({\n        fetched: true,\n        result,\n      });\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): ReactNodeType {\n    if (!this.state.fetched) {\n      return this.props.loadingComponent ? React.createElement(this.props.loadingComponent) : null;\n    }\n\n    return React.createElement(this.props.component, { [this.props.name]: this.state.result });\n  }\n}\n"]}