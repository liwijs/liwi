{"version":3,"sources":["../../../src/store/AbstractCursor.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqB,c;;;;;;;AAGjB,4BAAY,KAAZ,EAA0B;AAAA;;AACtB,aAAK,MAAL,GAAc,KAAd;AACH;;;;;;kCAMO;AACJ,kBAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;;;;iCAEoB;AACjB,kBAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH;;;;;;gCAEK,Q,EAA2B;AAC7B,kBAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;;;;;kCAEkC;AAAA,gBAA7B,UAA6B,yDAAP,KAAO;;AAC/B,kBAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;;;;mCAE6B;AAC1B,mBAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,GAA1B,CAAP;AACH;;;;;oCAEiB;AACd,mBAAO,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,GAA5B,CAAP;AACH;;;;;;;;;;;;;uFAEiB,Q;oBAEJ,G;;;;;;;;qCADH,I;;;;;;uCACe,KAAK,IAAL,E;;;AAAZ,mC;;oCACD,G;;;;;;;;;uCAEC,SAAS,GAAT,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAIN,Q,EAAmB;AAAA;;AACvB,mBAAO,KAAK,WAAL,CAAiB;AAAA,uBAAM,MAAK,MAAL,GAAc,IAAd,CAAmB;AAAA,2BAAU,SAAS,MAAT,CAAV;AAAA,iBAAnB,CAAN;AAAA,aAAjB,CAAP;AACH;;;;;;;;;;;;;;;iCAGU,I;;;;;;mCACG,KAAK,IAAL,E;;;;;;;;;;;;;;aAIZ,OAAO,Q;;;;;;;;gGACI,U;;;;;;;;;;;;;wCAAc,KAAK,YAAL,E;;;;;;;;AAAd,sC;;mCACC,WAAW,IAAX,C;;;sDAAgB;AAAA,uCAAO,OAAO,OAAK,MAAL,EAAd;AAAA,6BAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAjDK;AACf,mBAAO,KAAK,MAAZ;AACH;;;;;;kBATgB,c","file":"AbstractCursor.js","sourcesContent":["export default class AbstractCursor<Store, ObjectType> {\n    key: any;\n\n    constructor(store: Store) {\n        this._store = store;\n    }\n\n    get store(): Store {\n        return this._store;\n    }\n\n    close() {\n        throw new Error('close() missing implementation');\n    }\n\n    next(): Promise<any> {\n        throw new Error('next() missing implementation');\n    }\n\n    limit(newLimit: number): Promise {\n        throw new Error('limit() missing implementation');\n    }\n\n    count(applyLimit: boolean = false) {\n        throw new Error('count() missing implementation');\n    }\n\n    result(): Promise<ObjectType> {\n        return this.store.findByKey(this.key);\n    }\n\n    delete(): Promise {\n        return this.store.deleteByKey(this.key);\n    }\n\n    async forEachKeys(callback: Function): Promise {\n        while (true) {\n            const key = await this.next();\n            if (!key) return;\n\n            await callback(key);\n        }\n    }\n\n    forEach(callback): Promise {\n        return this.forEachKeys(() => this.result().then(result => callback(result)));\n    }\n\n    *keysIterator() {\n        while (true) {\n            yield this.next();\n        }\n    }\n\n    *[Symbol.iterator]() {\n        for (let keyPromise of this.keysIterator()) {\n            yield keyPromise.then(key => key && this.result());\n        }\n    }\n\n    // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n    /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}