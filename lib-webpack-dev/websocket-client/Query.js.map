{"version":3,"sources":["../../src/websocket-client/Query.js"],"names":["AbstractQuery","SubscribeReturnType","cancel","stop","Query","store","key","callback","emit","then","Error","promise"],"mappings":";;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;;IAEKC,mB;AACHC,Q;AACAC,M;;;IAGmBC,K;;;AACnB,iBAAYC,KAAZ,EAAmBC,GAAnB,EAAgC;AAAA,YAAbA,GAAa;;AAAA;;AAAA,8GACxBD,KADwB;;AAE9B,UAAKC,GAAL,GAAWA,GAAX;AAF8B;AAG/B;;;;0BAEKC,Q,EAA8B;AAAA,cAA9BA,QAA8B;;AAClC,aAAO,KAAKF,KAAL,CAAWG,IAAX,CAAgB,aAAhB,EAA+B,KAAKF,GAApC,EAAyCG,IAAzC,CAA8CF,QAA9C,CAAP;AACD;;;8BAESA,Q,EAAyC;AAAA,cAAzCA,QAAyC;;AACjD,YAAM,IAAIG,KAAJ,CAAU,gCAAV,CAAN;AACA;AACA,UAAIC,UAAU,KAAKN,KAAL,CAAWG,IAAX,CAAgB,iBAAhB,EAAmC,KAAKF,GAAxC,EAA6CG,IAA7C,CAAkD,qBAAa;AAC3E;AACA;AACD,OAHa,CAAd;;AAKA,UAAMN,OAAO,SAAPA,IAAO,GAAM;AACjB,YAAI,CAACQ,OAAL,EAAc;AACdA,gBAAQF,IAAR,CAAa,YAAM;AACjBE,oBAAU,IAAV;AACA;AACD,SAHD;AAID,OAND;AAOA,UAAMT,SAASC,IAAf;;AAEA,aAAO,EAAED,cAAF,EAAUC,UAAV,EAAP;AACD;;;;EA5BgCH,a;;eAAdI,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery {\n  constructor(store, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(callback: ?Function): Promise {\n    return this.store.emit('query:fetch', this.key).then(callback);\n  }\n\n  subscribe(callback: Function): SubscribeReturnType {\n    throw new Error('Will be implemented next minor');\n    // let subscribeKey;\n    let promise = this.store.emit('query:subscribe', this.key).then(eventName => {\n      // subscribeKey = eventName;\n      // this.connection.on(eventName, callback);\n    });\n\n    const stop = () => {\n      if (!promise) return;\n      promise.then(() => {\n        promise = null;\n        // this.store.emit('query:subscribe:stop', subscribeKey);\n      });\n    };\n    const cancel = stop;\n\n    return { cancel, stop };\n  }\n}\n"]}