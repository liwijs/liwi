{"version":3,"sources":["../../src/websocket-client/WebsocketStore.js"],"names":[],"mappings":"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","file":"WebsocketStore.js","sourcesContent":["import AbstractStore from '../store/AbstractStore';\nimport WebsocketCursor from './WebsocketCursor';\n\ntype WebsocketConnection = {\n    emit: Function;\n    isConnected: Function;\n}\n\nexport default class WebsocketStore<ModelType> extends AbstractStore<WebsocketConnection> {\n    keyPath = '_id';\n\n    constructor(websocket: WebsocketConnection, restName: string) {\n        super(websocket);\n\n        if (!restName) {\n            throw new Error(`Invalid restName: \"${restName}\"`);\n        }\n\n        this.restName = restName;\n    }\n\n    emit(type, ...args) {\n        if (!this.connection.isConnected()) {\n            throw new Error('Websocket is not connected');\n        }\n        return this.connection.emit('rest', { type, restName: this.restName }, args);\n    }\n\n    insertOne(object: ModelType): Promise<ModelType> {\n        return this.emit('insertOne', object);\n    }\n\n    updateOne(object: ModelType): Promise<ModelType> {\n        return this.emit('updateOne', object);\n    }\n\n    updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>> {\n        return this.emit('updateSeveral', objects);\n    }\n\n    partialUpdateByKey(key: any, partialUpdate: Object): Promise {\n        return this.emit('partialUpdateByKey', key, partialUpdate);\n    }\n\n    partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType> {\n        return this.emit('partialUpdateOne', object, partialUpdate);\n    }\n\n    partialUpdateMany(criteria, partialUpdate: Object): Promise {\n        return this.emit('partialUpdateMany', criteria, partialUpdate);\n    }\n\n    deleteByKey(key: any): Promise {\n        return this.emit('deleteByKey', key);\n    }\n\n    deleteOne(object: ModelType): Promise {\n        return this.emit('deleteOne', object);\n    }\n\n    cursor(criteria: ?Object, sort: ?Object): Promise<WebsocketCursor<ModelType>> {\n        return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n    }\n\n    findByKey(key: any) {\n        return this.findOne({ _id: key });\n    }\n\n    findOne(criteria: Object, sort: ?Object): Promise<Object> {\n        return this.emit('findOne', criteria, sort);\n    }\n}\n"]}