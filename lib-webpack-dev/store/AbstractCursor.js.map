{"version":3,"sources":["../../src/store/AbstractCursor.js"],"names":[],"mappings":";;;;;;;;IAAqB,c;AAGnB,0BAAY,KAAZ,EAA0B;AAAA;;AACxB,SAAK,MAAL,GAAc,KAAd;AACD;;;;4BAMO;AACN,YAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;;2BAEoB;AACnB,YAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;;;iCAE0B;AAAA;;AAAA;AAAA,8BAAb,OAAa;AAAA;AAAA;;AAAA;AAAA;;AAAA,mBAClB,KAAK,IAAL,GAAY,IAAZ,CAAiB;AAAA,eAAM,MAAK,MAAL,EAAN;AAAA,OAAjB,CADkB;AAE1B;;;0BAEK,Q,EAA2B;AAAA,mBAA3B,QAA2B;AAAA,wHAA3B,QAA2B;AAAA;;AAC/B,YAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;;4BAEkC;AAAA,UAA7B,UAA6B,yDAAP,KAAO;;AAAA,mBAA7B,UAA6B;AAAA,wHAA7B,UAA6B;AAAA;;AACjC,YAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;;6BAE6B;AAAA;AAAA,8BAApB,OAAoB;AAAA;AAAA;;AAAA;AAAA;;AAAA,mBACrB,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,GAA1B,CADqB;AAE7B;;;8BAEiB;AAAA;AAAA,8BAAR,OAAQ;AAAA;AAAA;;AAAA;AAAA;;AAAA,mBACT,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,GAA5B,CADS;AAEjB;;;;4EAEiB,Q;;;;;;2BAAA,Q;;;;;kIAAA,Q;;;;uBAEI,KAAK,IAAL,E;;;AAAZ,mB;;oBACD,G;;;;;;;;;uBAEC,SAAS,GAAT,C;;;;;;;;;;;;;;;;;;;;;;4BAIF,Q,EAAmB;AAAA;;AAAA;AAAA,8BAAR,OAAQ;AAAA;AAAA;;AAAA;AAAA;;AAAA,mBAClB,KAAK,WAAL,CAAiB;AAAA,eAAM,OAAK,MAAL,GAAc,IAAd,CAAmB;AAAA,iBAAU,SAAS,MAAT,CAAV;AAAA,SAAnB,CAAN;AAAA,OAAjB,CADkB;AAE1B;;;;;;;;;qBAIS,KAAK,IAAL,E;;;;;;;;;;;;;;SAIP,OAAO,Q;;;;;;;;;;8BACe,KAAK,YAAL,E;;;;;;;;;;;;;;;;;;;;;;AAAd,wB;;qBACD,WAAW,IAAX,CAAgB;AAAA,uBAAO,OAAO,OAAK,MAAL,EAAd;AAAA,eAAhB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIR;AACA;;;;;;;;;;;;;;;;;wBA1DiB;AACjB,aAAO,KAAK,MAAZ;AACD;;;;;;eATkB,c","file":"AbstractCursor.js","sourcesContent":["export default class AbstractCursor<Store, ObjectType> {\n  key: any;\n\n  constructor(store: Store) {\n    this._store = store;\n  }\n\n  get store(): Store {\n    return this._store;\n  }\n\n  close() {\n    throw new Error('close() missing implementation');\n  }\n\n  next(): Promise<any> {\n    throw new Error('next() missing implementation');\n  }\n\n  nextResult(): Promise<any> {\n    return this.next().then(() => this.result());\n  }\n\n  limit(newLimit: number): Promise {\n    throw new Error('limit() missing implementation');\n  }\n\n  count(applyLimit: boolean = false) {\n    throw new Error('count() missing implementation');\n  }\n\n  result(): Promise<ObjectType> {\n    return this.store.findByKey(this.key);\n  }\n\n  delete(): Promise {\n    return this.store.deleteByKey(this.key);\n  }\n\n  async forEachKeys(callback: Function): Promise {\n    while (true) {\n      const key = await this.next();\n      if (!key) return;\n\n      await callback(key);\n    }\n  }\n\n  forEach(callback): Promise {\n    return this.forEachKeys(() => this.result().then(result => callback(result)));\n  }\n\n  * keysIterator() {\n    while (true) {\n      yield this.next();\n    }\n  }\n\n  * [Symbol.iterator]() {\n    for (let keyPromise of this.keysIterator()) {\n      yield keyPromise.then(key => key && this.result());\n    }\n  }\n\n    // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n    /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}