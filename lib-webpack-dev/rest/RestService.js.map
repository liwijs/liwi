{"version":3,"sources":["../../src/rest/RestService.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,UAAP,MAAuB,cAAvB;;IAEqB,W;AACjB,yBAAY,aAAZ,EAAgC;AAAA;;AAAA,cAApB,aAAoB;AAAA,8HAApB,aAAoB;AAAA;;AAC5B,aAAK,aAAL,GAAqB,aAArB;AACH;;;;wCAEe,G,EAAa,Y,EAAc;AAAA,yBAA3B,GAA2B;AAAA,2HAA3B,GAA2B;AAAA;;AACvC,iBAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,EAA4B,YAA5B;AACH;;;4BAEG,G,EAAa;AAAA,yBAAb,GAAa;AAAA,2HAAb,GAAa;AAAA;;AACb,gBAAM,eAAe,KAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,CAArB;AACA,gBAAI,CAAC,YAAL,EAAmB,MAAM,IAAI,KAAJ,8BAAqC,GAArC,OAAN;AACnB,mBAAO,YAAP;AACH;;;;kFAGG,Q;oBACE,Q,SAAA,Q;oBAAU,I,SAAA,I;oBAAM,K,SAAA,K;;;;;;;;2CADlB,Q;;;;;gJAAA,Q;;;kEAC6B,Q,qBAAA,Q,YAAW,M,eAAQ,I,qBAAA,I,YAAO,M,eAAQ,K,4BAAA,K;;;;;;;;AAEzD,4C,GAAe,KAAK,GAAL,CAAS,QAAT,C;;AACrB,2CAAW,aAAa,QAAb,CAAsB,IAAtB,EAA4B,YAAY,EAAxC,CAAX;AACA,uCAAO,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAAP;;uCACqB,aAAa,KAAb,CAAmB,MAAnB,CAA0B,QAA1B,EAAoC,IAApC,C;;;AAAf,sC;;AACN,oCAAI,KAAJ,EAAW,OAAO,KAAP,CAAa,KAAb;iEACJ,IAAI,UAAJ,CAAe,MAAf,C;;;;;;;;;;;;;;;;;;;;;eAxBM,W","file":"RestService.js","sourcesContent":["import RestCursor from './RestCursor';\n\nexport default class RestService {\n    constructor(restResources: Map) {\n        this.restResources = restResources;\n    }\n\n    addRestResource(key: string, restResource) {\n        this.restResources.set(key, restResource);\n    }\n\n    get(key: string) {\n        const restResource = this.restResources.get(key);\n        if (!restResource) throw new Error(`Invalid rest resource: \"${key}\"`);\n        return restResource;\n    }\n\n    async createCursor(\n        restName: string,\n        { criteria, sort, limit }: { criteria: ?Object; sort: ?Object; limit: ?number }\n    ): Promise {\n        const restResource = this.get(restName);\n        criteria = restResource.criteria(null, criteria || {});\n        sort = restResource.sort(null, sort);\n        const cursor = await restResource.store.cursor(criteria, sort);\n        if (limit) cursor.limit(limit);\n        return new RestCursor(cursor);\n    }\n}\n"]}