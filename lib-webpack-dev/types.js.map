{"version":3,"sources":["../src/types.js"],"names":[],"mappings":"AAAA,WAAY,eAAZ;AAAA,aAAY,eAAZ;AAAA,gCACW,cADX,OACI,KADJ,kBAGI,KAHJ,gCAKI,IALJ,gCAOI,UAPJ,gCASI,KATJ,gCAWI,KAXJ,gCAaI,MAbJ,gCAeI,MAfJ,gCAiBI,WAjBJ,gCAmBI,OAnBJ;AAAA;;AAAA;AAAA,0BAAY,eAAZ;AAAA;AAAA,mBAAY,eAAZ;AAAA;AAAA;AAAA,WAAY,eAAZ;AAAA;;AAsBA,WAAY,cAAZ;AAAA,aAAY,cAAZ;AAAA,6CACI,SADJ,gCAGI,SAHJ,gCAKI,SALJ,gCAOI,aAPJ,gCASI,kBATJ,gCAWI,gBAXJ,gCAaI,iBAbJ,gCAeI,WAfJ,gCAiBI,MAjBJ,gCAmBI,SAnBJ,gCAqBI,OArBJ;AAAA;;AAAA;AAAA,0BAAY,cAAZ;AAAA;AAAA,mBAAY,cAAZ;AAAA;AAAA;AAAA,WAAY,cAAZ;AAAA","file":"types.js","sourcesContent":["export type CursorInterface<ModelType> = {\n    store: StoreInterface,\n\n    close(): Promise|void,\n\n    next(): Promise<any>,\n\n    nextResult(): Promise<any>,\n\n    limit(newLimit: number): Promise,\n\n    count(applyLimit: ?boolean): Promise,\n\n    result(): Promise<ModelType>,\n\n    delete(): Promise,\n\n    forEachKeys(callback: Function): Promise,\n\n    forEach(callback: Function): Promise,\n};\n\nexport type StoreInterface<ModelType> = {\n    insertOne(object: ModelType): Promise<ModelType>,\n\n    updateOne(object: ModelType): Promise<ModelType>,\n\n    upsertOne(object: ModelType): Promise<ModelType>,\n\n    updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>>,\n\n    partialUpdateByKey(key: any, partialUpdate: Object): Promise<ModelType>,\n\n    partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType>,\n\n    partialUpdateMany(criteria: Object, partialUpdate: Object): Promise,\n\n    deleteByKey(key: any): Promise<void>,\n\n    cursor(criteria: ?Object, sort: ?Object): Promise<CursorInterface<ModelType>>,\n\n    findByKey(key: any): Promise<?ModelType>,\n\n    findOne(criteria: Object, sort: ?Object): Promise<?ModelType>,\n};\n"]}