{"version":3,"sources":["../src/types.js"],"names":["CursorInterface","close","next","nextResult","limit","count","result","delete","forEachKeys","forEach","StoreInterface","create","insertOne","replaceOne","upsertOne","updateSeveral","partialUpdateByKey","partialUpdateOne","partialUpdateMany","deleteByKey","cursor","findAll","findByKey","findOne"],"mappings":";AAAA,WAAYA,eAAZ;AAGIC,SAHJ;AAKIC,QALJ;AAOIC,cAPJ;AASIC,SATJ;AAWIC,SAXJ;AAaIC,UAbJ;AAeIC,UAfJ;AAiBIC,eAjBJ;AAmBIC,WAnBJ;AAAA;;AAsBA,WAAYC,cAAZ;AACIC,UADJ;AAGIC,aAHJ;AAKIC,cALJ;AAOIC,aAPJ;AASIC,iBATJ;AAWIC,sBAXJ;AAaIC,oBAbJ;AAeIC,qBAfJ;AAiBIC,eAjBJ;AAmBIC,UAnBJ;AAqBIC,WArBJ;AAuBIC,aAvBJ;AAyBIC,WAzBJ;AAAA","file":"types.js","sourcesContent":["export type CursorInterface<ModelType> = {\n    // store: StoreInterface,\n\n    close(): Promise|void,\n\n    next(): Promise<any>,\n\n    nextResult(): Promise<any>,\n\n    limit(newLimit: number): Promise,\n\n    count(applyLimit: ?boolean): Promise,\n\n    result(): Promise<ModelType>,\n\n    delete(): Promise,\n\n    forEachKeys(callback: Function): Promise,\n\n    forEach(callback: Function): Promise,\n};\n\nexport type StoreInterface<ModelType> = {\n    create(): Promise,\n\n    insertOne(object: ModelType): Promise<ModelType>,\n\n    replaceOne(object: ModelType): Promise<ModelType>,\n\n    upsertOne(object: ModelType): Promise<ModelType>,\n\n    updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>>,\n\n    partialUpdateByKey(key: any, partialUpdate: Object): Promise<ModelType>,\n\n    partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType>,\n\n    partialUpdateMany(criteria: Object, partialUpdate: Object): Promise,\n\n    deleteByKey(key: any): Promise<void>,\n\n    cursor(criteria: ?Object, sort: ?Object): Promise<CursorInterface<ModelType>>,\n\n    findAll(criteria: ?Object, sort: ?Object): Promise<Array<ModelType>>,\n\n    findByKey(key: any): Promise<?ModelType>,\n\n    findOne(criteria: Object, sort: ?Object): Promise<?ModelType>,\n};\n"]}