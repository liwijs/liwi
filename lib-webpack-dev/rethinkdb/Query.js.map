{"version":3,"sources":["../../src/rethinkdb/Query.js"],"names":["AbstractQuery","RethinkStore","SubscribeReturnType","cancel","stop","Query","callback","queryCallback","store","query","run","then","args","subscribe","Error","_includeInitial","length","_subscribers","Set","add","_feed","promise","changes","includeInitial","feed","_promise","each","remove","_checkFeedClose","closeFeed","close"],"mappings":";;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEKC,mB;AACHC,Q;AACAC,M;;;IAGmBC,K;;;;;;;;;;;0BACbC,Q,EAA8B;AAAA,cAA9BA,QAA8B;;AAClC,aAAO,KAAKC,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuCC,GAAvC,GAA6CC,IAA7C,CAAkDL,QAAlD,CAAP;AACD;;;sCAEiBA,Q,EAA6B;AAAA,cAA7BA,QAA6B;;AAAA,wCAANM,IAAM;AAANA,YAAM;AAAA;;AAC7C,aAAO,KAAKC,SAAL,CAAeP,QAAf,EAAyB,IAAzB,EAA+BM,IAA/B,CAAP;AACD;;;8BAESN,Q,EAA6B;AAAA,cAA7BA,QAA6B;;AACrC,YAAM,IAAIQ,KAAJ,CAAU,gCAAV,CAAN;;AADqC,yCAANF,IAAM;AAANA,YAAM;AAAA;;AAErC,aAAO,KAAKC,SAAL,CAAeP,QAAf,EAAyB,KAAzB,EAAgCM,IAAhC,CAAP;AACD;;;+BAEUN,Q,EAAoF;AAAA;;AAAA,UAAhES,eAAgE,yDAA9C,KAA8C;;AAAA,UAAvCH,IAAuC;;AAAA,cAApFN,QAAoF;;AAAA,cAAvCM,IAAuC;;AAC7F,YAAM,IAAIE,KAAJ,CAAU,gCAAV,CAAN;AACA,UAAIF,KAAKI,MAAL,KAAgB,CAAhB,KAAsB,CAAC,KAAKC,YAAN,IAAsB,KAAKA,YAAL,CAAkBD,MAAlB,KAA6B,CAAzE,CAAJ,EAAiF;AAC/E,YAAI,CAAC,KAAKC,YAAV,EAAwB,KAAKA,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACxB,aAAKD,YAAL,CAAkBE,GAAlB,CAAsBb,QAAtB;AACD;;AAED,UAAIc,iBAAJ;AACA,UAAIC,UACF,KAAKd,aAAL,CAAmB,KAAKC,KAAL,CAAWC,KAAX,EAAnB,EAAuCa,OAAvC,CAA+C,EAAEC,gBAAgBR,eAAlB,EAA/C,EACCJ,IADD,CACM,gBAAQ;AACZ,YAAIC,KAAKI,MAAL,KAAgB,CAApB,EAAuB;AACrBI,kBAAQI,IAAR;AACA,iBAAKJ,KAAL,GAAaI,IAAb;AACA,iBAAO,OAAKC,QAAZ;AACD;AACDD,aAAKE,IAAL,CAAUpB,QAAV;AACD,OARD,CADF;;AAWA,UAAIM,KAAKI,MAAL,KAAgB,CAApB,EAAuB,KAAKS,QAAL,GAAgBJ,OAAhB;;AAEvB,UAAMjB,OAAO,SAAPA,IAAO,GAAM;AACjB,YAAIQ,KAAKI,MAAL,KAAgB,CAApB,EAAuB;AACrB,iBAAKC,YAAL,CAAkBU,MAAlB,CAAyBrB,QAAzB;AACA,iBAAKsB,eAAL;AACD,SAHD,MAGO;AACL,iBAAKC,SAAL,CAAeT,KAAf,EAAsBC,OAAtB;AACD;AACF,OAPD;;AASA,aAAO,EAAEjB,UAAF,EAAQD,QAAQC,IAAhB,EAAP;AACD;;;sCAEiB;AAChB,UAAI,CAAC,KAAKa,YAAN,IAAsB,KAAKA,YAAL,CAAkBD,MAAlB,KAA6B,CAAvD,EAA0D;AACxD,aAAKa,SAAL,CAAe,KAAKT,KAApB,EAA2B,KAAKK,QAAhC;AACD;AACF;;;8BAESD,I,EAAMH,O,EAAS;AACvB,UAAIG,IAAJ,EAAU;AACRA,aAAKM,KAAL;AACD,OAFD,MAEO,IAAIT,OAAJ,EAAa;AAClBA,gBAAQV,IAAR,CAAa;AAAA,iBAAMa,KAAKM,KAAL,EAAN;AAAA,SAAb;AACD;AACF;;;;EA3DgC9B,a;;eAAdK,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\nimport RethinkStore from './RethinkStore';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery<RethinkStore> {\n  fetch(callback: ?Function): Promise {\n    return this.queryCallback(this.store.query()).run().then(callback);\n  }\n\n  fetchAndSubscribe(callback: Function, ...args) {\n    return this.subscribe(callback, true, args);\n  }\n\n  subscribe(callback: Function, ...args) {\n    throw new Error('Will be implemented next minor');\n    return this.subscribe(callback, false, args);\n  }\n\n  _subscribe(callback: Function, _includeInitial = false, args: Array<any>): SubscribeReturnType {\n    throw new Error('Will be implemented next minor');\n    if (args.length === 0 && (!this._subscribers || this._subscribers.length === 0)) {\n      if (!this._subscribers) this._subscribers = new Set();\n      this._subscribers.add(callback);\n    }\n\n    let _feed;\n    let promise =\n      this.queryCallback(this.store.query()).changes({ includeInitial: _includeInitial })\n      .then(feed => {\n        if (args.length === 0) {\n          _feed = feed;\n          this._feed = feed;\n          delete this._promise;\n        }\n        feed.each(callback);\n      });\n\n    if (args.length === 0) this._promise = promise;\n\n    const stop = () => {\n      if (args.length === 0) {\n        this._subscribers.remove(callback);\n        this._checkFeedClose();\n      } else {\n        this.closeFeed(_feed, promise);\n      }\n    };\n\n    return { stop, cancel: stop };\n  }\n\n  _checkFeedClose() {\n    if (!this._subscribers || this._subscribers.length === 0) {\n      this.closeFeed(this._feed, this._promise);\n    }\n  }\n\n  closeFeed(feed, promise) {\n    if (feed) {\n      feed.close();\n    } else if (promise) {\n      promise.then(() => feed.close());\n    }\n  }\n}\n"]}