{"version":3,"sources":["../../src/react-redux/Find.js"],"names":["Component","PropTypes","FindComponent","props","query","action","dispatch","context","store","_find","fetch","result","children","contextTypes","any"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;IAaqBC,a;;;;;;;;;;;wCAOC;AAAA;;AAAA,mBACQ,KAAKC,KADb;AAAA,UACVC,KADU,UACVA,KADU;AAAA,UACHC,MADG,UACHA,MADG;;AAElB,UAAMC,WAAW,KAAKH,KAAL,CAAWG,QAAX,IAAuB,KAAKC,OAAL,CAAaC,KAAb,CAAmBF,QAA3D;AACA,WAAKG,KAAL,GAAaL,MAAMM,KAAN,CAAY,UAACC,MAAD,EAAiB;AACxC,YAAI,CAAC,OAAKF,KAAV,EAAiB;AACjBH,iBAASD,OAAOM,MAAP,CAAT;AACA,eAAO,OAAKF,KAAZ;AACD,OAJY,CAAb;AAKD;;;2CAEsB;AACrB,UAAI,KAAKA,KAAT,EAAgB;AACd;AACA,eAAO,KAAKA,KAAZ;AACD;AACF;;;6BAEuB;AACtB,aAAO,KAAKN,KAAL,CAAWS,QAAlB;AACD;;;;EA1BwCZ,S,UAGlCa,Y,GAAe;AACpBL,SAAOP,UAAUa;AADG,C;SAHHZ,a","file":"Find.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport type { ReactNodeType, ReduxDispatchType } from 'alp-react-redux/types';\nimport AbstractQuery from '../store/AbstractQuery';\n\ntype ActionType = (result: any) => any;\n\ntype PropsType = {\n  dispatch: ?ReduxDispatchType,\n  action: ActionType,\n  query: AbstractQuery,\n  children: ReactNodeType,\n};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  static contextTypes = {\n    store: PropTypes.any,\n  };\n\n  componentDidMount() {\n    const { query, action } = this.props;\n    const dispatch = this.props.dispatch || this.context.store.dispatch;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      dispatch(action(result));\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): ReactNodeType {\n    return this.props.children;\n  }\n}\n"]}