{"version":3,"sources":["../../src/store/AbstractCursor.js"],"names":["AbstractCursor","constructor","store","_store","close","Error","next","nextResult","then","result","limit","newLimit","count","applyLimit","findByKey","key","delete","deleteByKey","forEachKeys","callback","forEach","keysIterator","Symbol","iterator","keyPromise"],"mappings":";;AAAA,eAAe,MAAMA,cAAN,CAAuC;;AAGpDC,cAAYC,KAAZ,EAA0B;AACxB,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAED,MAAIA,KAAJ,GAAmB;AACjB,WAAO,KAAKC,MAAZ;AACD;;AAEDC,UAAQ;AACN,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAEDC,SAAqB;AACnB,UAAM,IAAID,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAEDE,eAA2B;AACzB,WAAO,KAAKD,IAAL,GAAYE,IAAZ,CAAiB,MAAM,KAAKC,MAAL,EAAvB,CAAP;AACD;;AAEDC,QAAMC,QAAN,EAAiC;AAC/B,UAAM,IAAIN,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAEDO,UAAmC;AAAA,QAA7BC,UAA6B,uEAAP,KAAO;;AACjC,UAAM,IAAIR,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAEDI,WAA6B;AAC3B,WAAO,KAAKP,KAAL,CAAWY,SAAX,CAAqB,KAAKC,GAA1B,CAAP;AACD;;AAEDC,WAAkB;AAChB,WAAO,KAAKd,KAAL,CAAWe,WAAX,CAAuB,KAAKF,GAA5B,CAAP;AACD;;AAEKG,aAAN,CAAkBC,QAAlB,EAA+C;AAAA;;AAAA;AAC7C,aAAO,IAAP,EAAa;AACX,YAAMJ,MAAM,MAAM,MAAKT,IAAL,EAAlB;AACA,YAAI,CAACS,GAAL,EAAU;;AAEV,cAAMI,SAASJ,GAAT,CAAN;AACD;AAN4C;AAO9C;;AAEDK,UAAQD,QAAR,EAA2B;AACzB,WAAO,KAAKD,WAAL,CAAiB,MAAM,KAAKT,MAAL,GAAcD,IAAd,CAAmBC,UAAUU,SAASV,MAAT,CAA7B,CAAvB,CAAP;AACD;;AAED,GAAEY,YAAF,GAAiB;AACf,WAAO,IAAP,EAAa;AACX,YAAM,KAAKf,IAAL,EAAN;AACD;AACF;;AAED,IAAGgB,OAAOC,QAAV,IAAsB;AACpB;AACA,SAAK,IAAIC,UAAT,IAAuB,KAAKH,YAAL,EAAvB,EAA4C;AAC1C,YAAMG,WAAWhB,IAAX,CAAgBO,OAAOA,OAAO,KAAKN,MAAL,EAA9B,CAAN;AACD;AACF;;AAEC;AACA;;;;;;;;;;;;;;AAlEkD","file":"AbstractCursor.js","sourcesContent":["export default class AbstractCursor<Store, ModelType> {\n  key: any;\n\n  constructor(store: Store) {\n    this._store = store;\n  }\n\n  get store(): Store {\n    return this._store;\n  }\n\n  close() {\n    throw new Error('close() missing implementation');\n  }\n\n  next(): Promise<any> {\n    throw new Error('next() missing implementation');\n  }\n\n  nextResult(): Promise<any> {\n    return this.next().then(() => this.result());\n  }\n\n  limit(newLimit: number): Promise {\n    throw new Error('limit() missing implementation');\n  }\n\n  count(applyLimit: boolean = false) {\n    throw new Error('count() missing implementation');\n  }\n\n  result(): Promise<ModelType> {\n    return this.store.findByKey(this.key);\n  }\n\n  delete(): Promise {\n    return this.store.deleteByKey(this.key);\n  }\n\n  async forEachKeys(callback: Function): Promise {\n    while (true) {\n      const key = await this.next();\n      if (!key) return;\n\n      await callback(key);\n    }\n  }\n\n  forEach(callback): Promise {\n    return this.forEachKeys(() => this.result().then(result => callback(result)));\n  }\n\n  * keysIterator() {\n    while (true) {\n      yield this.next();\n    }\n  }\n\n  * [Symbol.iterator]() {\n    // eslint-disable-next-line no-restricted-syntax\n    for (let keyPromise of this.keysIterator()) {\n      yield keyPromise.then(key => key && this.result());\n    }\n  }\n\n    // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n    /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}