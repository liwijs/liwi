{"version":3,"sources":["../../src/store/AbstractCursor.js"],"names":[],"mappings":";;AAAA,eAAe,MAAM,cAAN,CAAwC;;AAGnD,gBAAY,KAAZ,EAA0B;AACtB,aAAK,MAAL,GAAc,KAAd;AACH;;AAED,QAAI,KAAJ,GAAmB;AACf,eAAO,KAAK,MAAZ;AACH;;AAED,YAAQ;AACJ,cAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,WAAqB;AACjB,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACH;;AAED,iBAA2B;AACvB,eAAO,KAAK,IAAL,GAAY,IAAZ,CAAiB,MAAM,KAAK,MAAL,EAAvB,CAAP;AACH;;AAED,UAAM,QAAN,EAAiC;AAC7B,cAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,YAAmC;AAAA,YAA7B,UAA6B,yDAAP,KAAO;;AAC/B,cAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACH;;AAED,aAA8B;AAC1B,eAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,GAA1B,CAAP;AACH;;AAED,aAAkB;AACd,eAAO,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,GAA5B,CAAP;AACH;;AAEK,eAAN,CAAkB,QAAlB,EAA+C;AAAA;;AAAA;AAC3C,mBAAO,IAAP,EAAa;AACT,oBAAM,MAAM,MAAM,MAAK,IAAL,EAAlB;AACA,oBAAI,CAAC,GAAL,EAAU;;AAEV,sBAAM,SAAS,GAAT,CAAN;AACH;AAN0C;AAO9C;;AAED,YAAQ,QAAR,EAA2B;AACvB,eAAO,KAAK,WAAL,CAAiB,MAAM,KAAK,MAAL,GAAc,IAAd,CAAmB,UAAU,SAAS,MAAT,CAA7B,CAAvB,CAAP;AACH;;AAED,KAAE,YAAF,GAAiB;AACb,eAAO,IAAP,EAAa;AACT,kBAAM,KAAK,IAAL,EAAN;AACH;AACJ;;AAED,MAAG,OAAO,QAAV,IAAsB;AAClB,aAAK,IAAI,UAAT,IAAuB,KAAK,YAAL,EAAvB,EAA4C;AACxC,kBAAM,WAAW,IAAX,CAAgB,OAAO,OAAO,KAAK,MAAL,EAA9B,CAAN;AACH;AACJ;;AAED;AACA;;;;;;;;;;;;;;AAjEmD","file":"AbstractCursor.js","sourcesContent":["export default class AbstractCursor<Store, ObjectType> {\n    key: any;\n\n    constructor(store: Store) {\n        this._store = store;\n    }\n\n    get store(): Store {\n        return this._store;\n    }\n\n    close() {\n        throw new Error('close() missing implementation');\n    }\n\n    next(): Promise<any> {\n        throw new Error('next() missing implementation');\n    }\n\n    nextResult(): Promise<any> {\n        return this.next().then(() => this.result());\n    }\n\n    limit(newLimit: number): Promise {\n        throw new Error('limit() missing implementation');\n    }\n\n    count(applyLimit: boolean = false) {\n        throw new Error('count() missing implementation');\n    }\n\n    result(): Promise<ObjectType> {\n        return this.store.findByKey(this.key);\n    }\n\n    delete(): Promise {\n        return this.store.deleteByKey(this.key);\n    }\n\n    async forEachKeys(callback: Function): Promise {\n        while (true) {\n            const key = await this.next();\n            if (!key) return;\n\n            await callback(key);\n        }\n    }\n\n    forEach(callback): Promise {\n        return this.forEachKeys(() => this.result().then(result => callback(result)));\n    }\n\n    * keysIterator() {\n        while (true) {\n            yield this.next();\n        }\n    }\n\n    * [Symbol.iterator]() {\n        for (let keyPromise of this.keysIterator()) {\n            yield keyPromise.then(key => key && this.result());\n        }\n    }\n\n    // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n    /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}