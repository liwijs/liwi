{"version":3,"sources":["../../src/rest/RestService.js"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,cAAvB;;AAEA,eAAe,MAAM,WAAN,CAAkB;AAC7B,gBAAY,aAAZ,EAAgC;AAC5B,aAAK,aAAL,GAAqB,aAArB;AACH;;AAED,oBAAgB,GAAhB,EAA6B,YAA7B,EAA2C;AACvC,aAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,EAA4B,YAA5B;AACH;;AAED,QAAI,GAAJ,EAAiB;AACb,YAAM,eAAe,KAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,CAArB;AACA,YAAI,CAAC,YAAL,EAAmB,MAAM,IAAI,KAAJ,CAAW,4BAA0B,GAAI,IAAzC,CAAN;AACnB,eAAO,YAAP;AACH;;AAEK,gBAAN,CACI,QADJ,QAGW;AAAA;;AAAA,YADL,QACK,QADL,QACK;AAAA,YADK,IACL,QADK,IACL;AAAA,YADW,KACX,QADW,KACX;AAAA;AACP,gBAAM,eAAe,MAAK,GAAL,CAAS,QAAT,CAArB;AACA,uBAAW,aAAa,QAAb,CAAsB,IAAtB,EAA4B,YAAY,EAAxC,CAAX;AACA,mBAAO,aAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAAP;AACA,gBAAM,SAAS,MAAM,aAAa,KAAb,CAAmB,MAAnB,CAA0B,QAA1B,EAAoC,IAApC,CAArB;AACA,gBAAI,KAAJ,EAAW,OAAO,KAAP,CAAa,KAAb;AACX,mBAAO,IAAI,UAAJ,CAAe,MAAf,CAAP;AANO;AAOV;AAzB4B","file":"RestService.js","sourcesContent":["import RestCursor from './RestCursor';\n\nexport default class RestService {\n    constructor(restResources: Map) {\n        this.restResources = restResources;\n    }\n\n    addRestResource(key: string, restResource) {\n        this.restResources.set(key, restResource);\n    }\n\n    get(key: string) {\n        const restResource = this.restResources.get(key);\n        if (!restResource) throw new Error(`Invalid rest resource: \"${key}\"`);\n        return restResource;\n    }\n\n    async createCursor(\n        restName: string,\n        { criteria, sort, limit }: { criteria: ?Object, sort: ?Object, limit: ?number }\n    ): Promise {\n        const restResource = this.get(restName);\n        criteria = restResource.criteria(null, criteria || {});\n        sort = restResource.sort(null, sort);\n        const cursor = await restResource.store.cursor(criteria, sort);\n        if (limit) cursor.limit(limit);\n        return new RestCursor(cursor);\n    }\n}\n"]}