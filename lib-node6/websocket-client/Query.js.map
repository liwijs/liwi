{"version":3,"sources":["../../src/websocket-client/Query.js"],"names":["Query","constructor","store","key","fetch","callback","emit","then","subscribe","Error","promise","eventName","stop","cancel"],"mappings":";;;;;;AAAA;;;;;;AAOe,MAAMA,KAAN,iCAAkC;AAC/CC,cAAYC,KAAZ,EAAmBC,GAAnB,EAAgC;AAC9B,UAAMD,KAAN;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD;;AAEDC,QAAMC,QAAN,EAAoC;AAClC,WAAO,KAAKH,KAAL,CAAWI,IAAX,CAAgB,aAAhB,EAA+B,KAAKH,GAApC,EAAyCI,IAAzC,CAA8CF,QAA9C,CAAP;AACD;;AAEDG,YAAUH,QAAV,EAAmD;AACjD,UAAM,IAAII,KAAJ,CAAU,gCAAV,CAAN;AACA;AACA,QAAIC,UAAU,KAAKR,KAAL,CAAWI,IAAX,CAAgB,iBAAhB,EAAmC,KAAKH,GAAxC,EAA6CI,IAA7C,CAAkDI,aAAa;AAC3E;AACA;AACD,KAHa,CAAd;;AAKA,UAAMC,OAAO,MAAM;AACjB,UAAI,CAACF,OAAL,EAAc;AACdA,cAAQH,IAAR,CAAa,MAAM;AACjBG,kBAAU,IAAV;AACA;AACD,OAHD;AAID,KAND;AAOA,UAAMG,SAASD,IAAf;;AAEA,WAAO,EAAEC,MAAF,EAAUD,IAAV,EAAP;AACD;AA5B8C;kBAA5BZ,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery {\n  constructor(store, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(callback: ?Function): Promise {\n    return this.store.emit('query:fetch', this.key).then(callback);\n  }\n\n  subscribe(callback: Function): SubscribeReturnType {\n    throw new Error('Will be implemented next minor');\n    // let subscribeKey;\n    let promise = this.store.emit('query:subscribe', this.key).then(eventName => {\n      // subscribeKey = eventName;\n      // this.connection.on(eventName, callback);\n    });\n\n    const stop = () => {\n      if (!promise) return;\n      promise.then(() => {\n        promise = null;\n        // this.store.emit('query:subscribe:stop', subscribeKey);\n      });\n    };\n    const cancel = stop;\n\n    return { cancel, stop };\n  }\n}\n"]}