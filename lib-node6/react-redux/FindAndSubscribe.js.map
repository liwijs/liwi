{"version":3,"sources":["../../src/react-redux/FindAndSubscribe.js"],"names":["FindAndSubscribeComponent","componentDidMount","props","query","action","dispatch","_find","fetch","result","_subscribe","subscribe","componentWillUnmount","stop","render","Error","children","propTypes","func","isRequired","instanceOf","node"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAEe,MAAMA,yBAAN,0BAAkD;;AAQ/DC,sBAAoB;AAAA,iBACkB,KAAKC,KADvB;AAAA,UACVC,KADU,UACVA,KADU;AAAA,UACHC,MADG,UACHA,MADG;AAAA,UACKC,QADL,UACKA,QADL;;AAElB,SAAKC,KAAL,GAAaH,MAAMI,KAAN,CAAaC,MAAD,IAAY;AACnC,UAAI,CAAC,KAAKF,KAAV,EAAiB;AACjBD,eAASD,OAAOI,MAAP,CAAT;AACA,aAAO,KAAKF,KAAZ;AACD,KAJY,CAAb;AAKA,SAAKG,UAAL,GAAkBN,MAAMO,SAAN,CAAgBF,UAAUH,SAASD,OAAOI,MAAP,EAAe,IAAf,CAAT,CAA1B,CAAlB;AACD;;AAEDG,yBAAuB;AACrB,QAAI,KAAKL,KAAT,EAAgB;AACd;AACA,aAAO,KAAKA,KAAZ;AACD;AACD,QAAI,KAAKG,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgBG,IAAhB;AACA,aAAO,KAAKH,UAAZ;AACD;AACF;;AAEDI,WAAS;AACP,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACA,WAAO,KAAKZ,KAAL,CAAWa,QAAlB;AACD;AAhC8D;kBAA5Cf,yB;AAAAA,yB,CACZgB,S,GAAY;AACjBX,YAAU,iBAAUY,IAAV,CAAeC,UADR;AAEjBd,UAAQ,iBAAUa,IAAV,CAAeC,UAFN;AAGjBf,SAAO,iBAAUgB,UAAV,0BAAoCD,UAH1B;AAIjBH,YAAU,iBAAUK;AAJH,C","file":"FindAndSubscribe.js","sourcesContent":["import { PropTypes, Component } from 'react';\nimport AbstractQuery from '../store/AbstractQuery';\n\nexport default class FindAndSubscribeComponent extends Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    action: PropTypes.func.isRequired,\n    query: PropTypes.instanceOf(AbstractQuery).isRequired,\n    children: PropTypes.node,\n  };\n\n  componentDidMount() {\n    const { query, action, dispatch } = this.props;\n    this._find = query.fetch((result) => {\n      if (!this._find) return;\n      dispatch(action(result));\n      delete this._find;\n    });\n    this._subscribe = query.subscribe(result => dispatch(action(result, true)));\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n    if (this._subscribe) {\n      this._subscribe.stop();\n      delete this._subscribe;\n    }\n  }\n\n  render() {\n    throw new Error('Will be implemented next minor');\n    return this.props.children;\n  }\n}\n"]}