{"version":3,"sources":["../../src/store/AbstractCursor.js"],"names":[],"mappings":";;;;;;;;AAAe,MAAM,cAAN,CAAwC;;AAGrD,cAAY,KAAZ,EAA0B;AACxB,SAAK,MAAL,GAAc,KAAd;AACD;;AAED,MAAI,KAAJ,GAAmB;AACjB,WAAO,KAAK,MAAZ;AACD;;AAED,UAAQ;AACN,UAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,SAAqB;AACnB,UAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,eAA2B;AACzB,WAAO,KAAK,IAAL,GAAY,IAAZ,CAAiB,MAAM,KAAK,MAAL,EAAvB,CAAP;AACD;;AAED,QAAM,QAAN,EAAiC;AAC/B,UAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,UAAmC;AAAA,QAA7B,UAA6B,yDAAP,KAAO;;AACjC,UAAM,IAAI,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,WAA8B;AAC5B,WAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,GAA1B,CAAP;AACD;;AAED,WAAkB;AAChB,WAAO,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,GAA5B,CAAP;AACD;;AAEK,aAAN,CAAkB,QAAlB,EAA+C;AAAA;;AAAA;AAC7C,aAAO,IAAP,EAAa;AACX,cAAM,MAAM,MAAM,MAAK,IAAL,EAAlB;AACA,YAAI,CAAC,GAAL,EAAU;;AAEV,cAAM,SAAS,GAAT,CAAN;AACD;AAN4C;AAO9C;;AAED,UAAQ,QAAR,EAA2B;AACzB,WAAO,KAAK,WAAL,CAAiB,MAAM,KAAK,MAAL,GAAc,IAAd,CAAmB,UAAU,SAAS,MAAT,CAA7B,CAAvB,CAAP;AACD;;AAED,GAAE,YAAF,GAAiB;AACf,WAAO,IAAP,EAAa;AACX,YAAM,KAAK,IAAL,EAAN;AACD;AACF;;AAED,IAAG,OAAO,QAAV,IAAsB;AACpB,SAAK,IAAI,UAAT,IAAuB,KAAK,YAAL,EAAvB,EAA4C;AAC1C,YAAM,WAAW,IAAX,CAAgB,OAAO,OAAO,KAAK,MAAL,EAA9B,CAAN;AACD;AACF;;AAEC;AACA;;;;;;;;;;;;;;AAjEmD;kBAAlC,c","file":"AbstractCursor.js","sourcesContent":["export default class AbstractCursor<Store, ObjectType> {\n  key: any;\n\n  constructor(store: Store) {\n    this._store = store;\n  }\n\n  get store(): Store {\n    return this._store;\n  }\n\n  close() {\n    throw new Error('close() missing implementation');\n  }\n\n  next(): Promise<any> {\n    throw new Error('next() missing implementation');\n  }\n\n  nextResult(): Promise<any> {\n    return this.next().then(() => this.result());\n  }\n\n  limit(newLimit: number): Promise {\n    throw new Error('limit() missing implementation');\n  }\n\n  count(applyLimit: boolean = false) {\n    throw new Error('count() missing implementation');\n  }\n\n  result(): Promise<ObjectType> {\n    return this.store.findByKey(this.key);\n  }\n\n  delete(): Promise {\n    return this.store.deleteByKey(this.key);\n  }\n\n  async forEachKeys(callback: Function): Promise {\n    while (true) {\n      const key = await this.next();\n      if (!key) return;\n\n      await callback(key);\n    }\n  }\n\n  forEach(callback): Promise {\n    return this.forEachKeys(() => this.result().then(result => callback(result)));\n  }\n\n  * keysIterator() {\n    while (true) {\n      yield this.next();\n    }\n  }\n\n  * [Symbol.iterator]() {\n    for (let keyPromise of this.keysIterator()) {\n      yield keyPromise.then(key => key && this.result());\n    }\n  }\n\n    // TODO Symbol.asyncIterator, https://phabricator.babeljs.io/T7356\n    /*\n    async *keysAsyncIterator() {\n        while (true) {\n             const key = await this.next();\n             if (!key) return;\n\n             yield key;\n        }\n     }\n\n     async *[Symbol.asyncIterator] {\n        for await (let key of this.keysAsyncIterator()) {\n            yield await this.result();\n        }\n     }\n     */\n}\n"]}