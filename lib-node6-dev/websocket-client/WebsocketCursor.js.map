{"version":3,"sources":["../../src/websocket-client/WebsocketCursor.js"],"names":[],"mappings":"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","file":"WebsocketCursor.js","sourcesContent":["import WebsocketStore from './WebsocketStore';\nimport AbstractCursor from '../store/AbstractCursor';\n\nexport default class WebsocketCursor<ModelType> extends AbstractCursor<WebsocketStore<ModelType>> {\n    _idCursor: ?number;\n    _options: ?Object;\n    _result: ?Object;\n\n    constructor(store:WebsocketStore, options) {\n        super(store);\n        this._options = options;\n    }\n\n    /* options */\n\n    limit(newLimit:number):Promise<this> {\n        if (this._idCursor) throw new Error('Cursor already created');\n        this._options.limit = newLimit;\n        return Promise.resolve(this);\n    }\n\n    /* results */\n\n    _create() {\n        if (this._idCursor) throw new Error('Cursor already created');\n        return this.store.connection.emit('createCursor', this._options).then(idCursor => {\n            if (!idCursor) return;\n            this._idCursor = idCursor;\n        });\n    }\n\n    emit(type, ...args):Promise {\n        if (!this._idCursor) {\n            return this._create().then(() => this.emit(type, ...args));\n        }\n\n        return this.store.emit('cursor', { type, id: this._idCursor }, args);\n    }\n\n    advance(count:number) {\n        this.emit('advance', count);\n        return this;\n    }\n\n    next():Promise<?any> {\n        return this.emit('next').then(result => {\n            this._result = result;\n            this.key = result && result[this._store.keyPath];\n            return this.key;\n        });\n    }\n\n    result():Promise<?ModelType> {\n        return Promise.resolve(this._result);\n    }\n\n    count(applyLimit:boolean = false) {\n        return this.emit('count', applyLimit);\n    }\n\n    close():Promise {\n        if (!this._store) return Promise.resolve();\n\n        const closedPromise = this._idCursor ? this.emit('close') : Promise.resolve();\n        this._idCursor = this._options = null;\n        this._store = this._result = undefined;\n        return closedPromise;\n    }\n\n    toArray():Promise<Array> {\n        return this.store.emit('cursor toArray', this._options, result => {\n            this.close();\n            return result;\n        });\n    }\n}\n"]}