{"version":3,"sources":["../../src/websocket-client/WebsocketStore.js"],"names":[],"mappings":"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","file":"WebsocketStore.js","sourcesContent":["import AbstractStore from '../store/AbstractStore';\nimport WebsocketCursor from './WebsocketCursor';\n\ntype WebsocketConnection = {\n    emit: Function,\n    isConnected: Function,\n}\n\nexport default class WebsocketStore<ModelType> extends AbstractStore<WebsocketConnection> {\n  keyPath = '_id';\n\n  constructor(websocket: WebsocketConnection, restName: string) {\n    super(websocket);\n\n    if (!restName) {\n      throw new Error(`Invalid restName: \"${restName}\"`);\n    }\n\n    this.restName = restName;\n  }\n\n  emit(type, ...args) {\n    if (!this.connection.isConnected()) {\n      throw new Error('Websocket is not connected');\n    }\n    return this.connection.emit('rest', { type, restName: this.restName }, args);\n  }\n\n  insertOne(object: ModelType): Promise<ModelType> {\n    return this.emit('insertOne', object);\n  }\n\n  updateOne(object: ModelType): Promise<ModelType> {\n    return this.emit('updateOne', object);\n  }\n\n  updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>> {\n    return this.emit('updateSeveral', objects);\n  }\n\n  partialUpdateByKey(key: any, partialUpdate: Object): Promise {\n    return this.emit('partialUpdateByKey', key, partialUpdate);\n  }\n\n  partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType> {\n    return this.emit('partialUpdateOne', object, partialUpdate);\n  }\n\n  partialUpdateMany(criteria, partialUpdate: Object): Promise {\n    return this.emit('partialUpdateMany', criteria, partialUpdate);\n  }\n\n  deleteByKey(key: any): Promise {\n    return this.emit('deleteByKey', key);\n  }\n\n  deleteOne(object: ModelType): Promise {\n    return this.emit('deleteOne', object);\n  }\n\n  cursor(criteria: ?Object, sort: ?Object): Promise<WebsocketCursor<ModelType>> {\n    return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n  }\n\n  findByKey(key: any) {\n    return this.findOne({ _id: key });\n  }\n\n  findOne(criteria: Object, sort: ?Object): Promise<Object> {\n    return this.emit('findOne', criteria, sort);\n  }\n}\n"]}