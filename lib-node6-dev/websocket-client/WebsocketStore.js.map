{"version":3,"sources":["../../src/websocket-client/WebsocketStore.js"],"names":[],"mappings":"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","file":"WebsocketStore.js","sourcesContent":["import AbstractStore from '../store/AbstractStore';\nimport WebsocketCursor from './WebsocketCursor';\n\ntype WebsocketConnection = {\n    emit: Function,\n    isConnected: Function,\n}\n\nexport default class WebsocketStore<ModelType> extends AbstractStore<WebsocketConnection> {\n    keyPath = '_id';\n\n    constructor(websocket: WebsocketConnection, restName: string) {\n        super(websocket);\n\n        if (!restName) {\n            throw new Error(`Invalid restName: \"${restName}\"`);\n        }\n\n        this.restName = restName;\n    }\n\n    emit(type, ...args) {\n        if (!this.connection.isConnected()) {\n            throw new Error('Websocket is not connected');\n        }\n        return this.connection.emit('rest', { type, restName: this.restName }, args);\n    }\n\n    insertOne(object: ModelType): Promise<ModelType> {\n        return this.emit('insertOne', object);\n    }\n\n    updateOne(object: ModelType): Promise<ModelType> {\n        return this.emit('updateOne', object);\n    }\n\n    updateSeveral(objects: Array<ModelType>): Promise<Array<ModelType>> {\n        return this.emit('updateSeveral', objects);\n    }\n\n    partialUpdateByKey(key: any, partialUpdate: Object): Promise {\n        return this.emit('partialUpdateByKey', key, partialUpdate);\n    }\n\n    partialUpdateOne(object: ModelType, partialUpdate: Object): Promise<ModelType> {\n        return this.emit('partialUpdateOne', object, partialUpdate);\n    }\n\n    partialUpdateMany(criteria, partialUpdate: Object): Promise {\n        return this.emit('partialUpdateMany', criteria, partialUpdate);\n    }\n\n    deleteByKey(key: any): Promise {\n        return this.emit('deleteByKey', key);\n    }\n\n    deleteOne(object: ModelType): Promise {\n        return this.emit('deleteOne', object);\n    }\n\n    cursor(criteria: ?Object, sort: ?Object): Promise<WebsocketCursor<ModelType>> {\n        return Promise.resolve(new WebsocketCursor(this, { criteria, sort }));\n    }\n\n    findByKey(key: any) {\n        return this.findOne({ _id: key });\n    }\n\n    findOne(criteria: Object, sort: ?Object): Promise<Object> {\n        return this.emit('findOne', criteria, sort);\n    }\n}\n"]}