{"version":3,"sources":["../../src/websocket-client/Query.js"],"names":["SubscribeReturnType","cancel","stop","Query","constructor","store","key","fetch","callback","emit","then","subscribe","Error","promise","eventName"],"mappings":";;;;;;;;;;AAAA;;;;;;MAEKA,mB;AACHC,Q;AACAC,M;;;AAGa,MAAMC,KAAN,iCAAkC;AAC/CC,cAAYC,KAAZ,EAAmBC,GAAnB,EAAgC;AAAA,YAAbA,GAAa;;AAC9B,UAAMD,KAAN;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD;;AAEDC,QAAMC,QAAN,EAAoC;AAAA,YAA9BA,QAA8B;;AAAA;AAClC,aAAO,KAAKH,KAAL,CAAWI,IAAX,CAAgB,aAAhB,EAA+B,KAAKH,GAApC,EAAyCI,IAAzC,CAA8CF,QAA9C,CAAP;AADkC;AAEnC;;AAEDG,YAAUH,QAAV,EAAmD;AAAA,YAAzCA,QAAyC;;AAAA;AACjD,YAAM,IAAII,KAAJ,CAAU,gCAAV,CAAN;AACA;AACA,UAAIC,UAAU,KAAKR,KAAL,CAAWI,IAAX,CAAgB,iBAAhB,EAAmC,KAAKH,GAAxC,EAA6CI,IAA7C,CAAkDI,aAAa;AAC3E;AACA;AACD,OAHa,CAAd;;AAKA,YAAMZ,OAAO,MAAM;AACjB,YAAI,CAACW,OAAL,EAAc;AACdA,gBAAQH,IAAR,CAAa,MAAM;AACjBG,oBAAU,IAAV;AACA;AACD,SAHD;AAID,OAND;AAOA,YAAMZ,SAASC,IAAf;;AAEA,aAAO,EAAED,MAAF,EAAUC,IAAV,EAAP;AAjBiD,8BAApBF,mBAAoB;AAkBlD;AA5B8C;kBAA5BG,K","file":"Query.js","sourcesContent":["import AbstractQuery from '../store/AbstractQuery';\n\ntype SubscribeReturnType = {\n  cancel: Function,\n  stop: Function,\n};\n\nexport default class Query extends AbstractQuery {\n  constructor(store, key: string) {\n    super(store);\n    this.key = key;\n  }\n\n  fetch(callback: ?Function): Promise {\n    return this.store.emit('query:fetch', this.key).then(callback);\n  }\n\n  subscribe(callback: Function): SubscribeReturnType {\n    throw new Error('Will be implemented next minor');\n    // let subscribeKey;\n    let promise = this.store.emit('query:subscribe', this.key).then(eventName => {\n      // subscribeKey = eventName;\n      // this.connection.on(eventName, callback);\n    });\n\n    const stop = () => {\n      if (!promise) return;\n      promise.then(() => {\n        promise = null;\n        // this.store.emit('query:subscribe:stop', subscribeKey);\n      });\n    };\n    const cancel = stop;\n\n    return { cancel, stop };\n  }\n}\n"]}