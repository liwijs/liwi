{"version":3,"sources":["../../src/store/AbstractStore.js"],"names":["AbstractStore","constructor","connection","_connection","findAll","criteria","sort","cursor","then","toArray"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEe,MAAMA,aAAN,CAAgC;AAC3C;;;AAGFC,cAAYC,UAAZ,EAAoC;AAAA,YAAxBA,UAAwB;;AAClC,0BAAOA,UAAP;AACA,SAAKC,WAAL,GAAmBD,UAAnB;AACD;;AAED,MAAIA,UAAJ,GAA6B;AAAA;AAC3B,aAAO,KAAKC,WAAZ;AAD2B;AAE5B;;AAEDC,UAAQC,QAAR,EAA2BC,IAA3B,EAAmD;AAAA,YAA3CD,QAA2C;;AAAA,YAAxBC,IAAwB;;AAAA;AACjD,aAAO,KAAKC,MAAL,CAAYF,QAAZ,EAAsBC,IAAtB,EAA4BE,IAA5B,CAAiCD,UAAUA,OAAOE,OAAP,EAA3C,CAAP;AADiD;AAElD;AAf4C;kBAA1BT,a","file":"AbstractStore.js","sourcesContent":["import assert from 'assert';\n\nexport default class AbstractStore<Connection> {\n    /**\n     * @param {AbstractConnection} connection\n     */\n  constructor(connection: Connection) {\n    assert(connection);\n    this._connection = connection;\n  }\n\n  get connection(): Connection {\n    return this._connection;\n  }\n\n  findAll(criteria: ?Object, sort: ?Object): Promise {\n    return this.cursor(criteria, sort).then(cursor => cursor.toArray());\n  }\n}\n"]}