{"version":3,"sources":["../../src/react-redux/Find.js"],"names":["FindComponent","componentDidMount","query","action","props","dispatch","context","store","_find","fetch","result","componentWillUnmount","render","children","contextTypes","any"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,4DAAkB,+BAAC,sCAAQ,2BAAR,CAAD,+BAAiB,2BAAjB,EAAlB;;AAEA,0DAAiB,6BACf,2CAAU,+BAAC,4CAAD,CAAV,CADe,EAEf,yCAAQ,UAAR,CAFe,EAGf,wCAAO,kDAAP,CAHe,EAIf,2CAAU,wCAAV,CAJe,CAAjB;;IAOqBA,a,0CACd,S,iCADQ,+BAAsC;AAAA;AAAA;;AAAA;AAAA;;AAOnDC,sBAAoB;AAClB,UAAM,EAAEC,KAAF,EAASC,MAAT,KAAoB,KAAKC,KAA/B;AACA,UAAMC,WAAW,KAAKD,KAAL,CAAWC,QAAX,IAAuB,KAAKC,OAAL,CAAaC,KAAb,CAAmBF,QAA3D;AACA,SAAKG,KAAL,GAAaN,MAAMO,KAAN,CAAaC,MAAD,IAAiB;AAAA,wBAAV,2BAAU;;AAAA;;AACxC,UAAI,CAAC,KAAKF,KAAV,EAAiB;AACjBH,eAASF,OAAOO,MAAP,CAAT;AACA,aAAO,KAAKF,KAAZ;AACD,KAJY,CAAb;AAKD;;AAEDG,yBAAuB;AACrB,QAAI,KAAKH,KAAT,EAAgB;AACd;AACA,aAAO,KAAKA,KAAZ;AACD;AACF;;AAEDI,WAAwB;AAAA,qDAAd,wCAAc;;AACtB,8BAAO,KAAKR,KAAL,CAAWS,QAAlB;AACD;AA1BkD,C,sDAC9C,S,WAEEC,Y,GAAe;AACpBP,SAAO,oBAAUQ;AADG,C;;;;kBAHHf,a","file":"Find.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport type { ReactNodeType, ReduxDispatchType } from 'alp-react-redux/types';\nimport AbstractQuery from '../store/AbstractQuery';\n\ntype ActionType = (result: any) => any;\n\ntype PropsType = {\n  dispatch: ?ReduxDispatchType,\n  action: ActionType,\n  query: AbstractQuery,\n  children: ReactNodeType,\n};\n\nexport default class FindComponent extends Component {\n  props: PropsType;\n\n  static contextTypes = {\n    store: PropTypes.any,\n  };\n\n  componentDidMount() {\n    const { query, action } = this.props;\n    const dispatch = this.props.dispatch || this.context.store.dispatch;\n    this._find = query.fetch((result: any) => {\n      if (!this._find) return;\n      dispatch(action(result));\n      delete this._find;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this._find) {\n      // this._find.cancel();\n      delete this._find;\n    }\n  }\n\n  render(): ReactNodeType {\n    return this.props.children;\n  }\n}\n"]}