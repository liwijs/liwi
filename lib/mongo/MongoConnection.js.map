{"version":3,"sources":["../../src/mongo/MongoConnection.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;IAGqB,e,GAAN,MAAM,eAAN,sCAAiD;;;;;AAI5D,gBAAY,MAAZ,EAAyB;AACrB;;AAEA,YAAI,CAAC,OAAO,GAAP,CAAW,MAAX,CAAL,EAAyB;AACrB,mBAAO,GAAP,CAAW,MAAX,EAAmB,WAAnB;AACH;AACD,YAAI,CAAC,OAAO,GAAP,CAAW,MAAX,CAAL,EAAyB;AACrB,mBAAO,GAAP,CAAW,MAAX,EAAmB,OAAnB;AACH;AACD,YAAI,CAAC,OAAO,GAAP,CAAW,UAAX,CAAL,EAA6B;AACzB,kBAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAED,cAAM,mBAAmB,CAAC,UAAD,GAAa,OAAO,GAAP,CAAW,MAAX,IAAqB,CAAC,AAAD,GAAG,OAAO,GAAP,CAAW,MAAX,CAAH,EAAsB,CAAtB,GAAyB,OAAO,GAAP,CAAW,UAAX,CAAzB,EAAgD,CAAhD,CAArB,GAA0E,EAAvF,EAA0F,AAA1F,IACA,CAAC,AAAD,GAAG,OAAO,GAAP,CAAW,MAAX,CAAH,EAAsB,CAAtB,GAAyB,OAAO,GAAP,CAAW,MAAX,CAAzB,EAA4C,CAA5C,GAA+C,OAAO,GAAP,CAAW,UAAX,CAA/C,EAAsE,AAAtE,CADzB;;AAIA,cAAM,iBAAiB,qBAAY,OAAZ,CAAoB,gBAApB,EAClB,IADkB,CACb,cAAc;AAChB,iBAAK,WAAL,GAAmB,UAAnB;AACA,iBAAK,WAAL,GAAmB,IAAnB;AACA,iBAAK,aAAL,GAAqB,MAAM;AACvB,uBAAO,QAAQ,OAAR,CAAgB,KAAK,WAArB,CAAP;AACH,aAFD;AAGA,mBAAO,UAAP;AACH,SARkB,EASlB,KATkB,CASZ,OAAO;AACV,iBAAK,aAAL,GAAqB,MAAM,QAAQ,MAAR,CAAe,GAAf,CAA3B;AACA,kBAAM,GAAN;AACH,SAZkB,CAAvB;;AAcA,aAAK,aAAL,GAAqB,MAAM,QAAQ,OAAR,CAAgB,cAAhB,CAA3B;AACA,aAAK,WAAL,GAAmB,KAAK,aAAL,EAAnB;AACH;;;;MAED,gBAA6B;AACzB,cAAM,IAAI,KAAJ,CAAU,gBAAV,CAAN;AACH;;AAED,YAAQ;AACJ,YAAI,KAAK,WAAT,EAAsB;AAClB,mBAAO,KAAK,WAAL,CAAiB,KAAjB,EAAP;AACH,SAFD,MAEO,IAAI,KAAK,WAAT,EAAsB;AACzB,mBAAO,KAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAM,KAAK,KAAL,EAA5B,CAAP;AACH;AACJ;AAjD2D,C;kBAA3C,e","file":"MongoConnection.js","sourcesContent":["import AbstractConnection from '../store/AbstractConnection';\nimport { MongoClient } from 'mongodb';\nimport type Db from 'mongodb/lib/db';\n\nexport default class MongoConnection extends AbstractConnection {\n    _connection: Db|null;\n    _connecting: Promise|null;\n\n    constructor(config: Map) {\n        super();\n\n        if (!config.has('host')) {\n            config.set('host', 'localhost');\n        }\n        if (!config.has('port')) {\n            config.set('port', '27017');\n        }\n        if (!config.has('database')) {\n            throw new Error('Missing config database');\n        }\n\n        const connectionString = `mongodb://${config.has('user') ? `${config.get('user')}:${config.get('password')}@` : ''}`\n                               + `${config.get('host')}:${config.get('port')}/${config.get('database')}`;\n\n\n        const connectPromise = MongoClient.connect(connectionString)\n            .then(connection => {\n                this._connection = connection;\n                this._connecting = null;\n                this.getConnection = () => {\n                    return Promise.resolve(this._connection);\n                };\n                return connection;\n            })\n            .catch(err => {\n                this.getConnection = () => Promise.reject(err);\n                throw err;\n            });\n\n        this.getConnection = () => Promise.resolve(connectPromise);\n        this._connecting = this.getConnection();\n    }\n\n    getConnection(): Promise<Db> {\n        throw new Error('call connect()');\n    }\n\n    close() {\n        if (this._connection) {\n            return this._connection.close();\n        } else if (this._connecting) {\n            return this._connecting.then(() => this.close());\n        }\n    }\n}\n"]}